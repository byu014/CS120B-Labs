
snakefinalproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000090  00800100  00002184  00002238  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002184  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000098  00800190  00800190  000022c8  2**0
                  ALLOC
  3 .eeprom       00000001  00810000  00810000  000022c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  000022c9  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002328  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000138  00000000  00000000  00002368  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001457  00000000  00000000  000024a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000a08  00000000  00000000  000038f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000109d  00000000  00000000  000042ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003f0  00000000  00000000  0000539c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007fb  00000000  00000000  0000578c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000086b  00000000  00000000  00005f87  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000e8  00000000  00000000  000067f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	e6 c3       	rjmp	.+1996   	; 0x802 <__vector_13>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e8       	ldi	r30, 0x84	; 132
      a0:	f1 e2       	ldi	r31, 0x21	; 33
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a0 39       	cpi	r26, 0x90	; 144
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a0 e9       	ldi	r26, 0x90	; 144
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a8 32       	cpi	r26, 0x28	; 40
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 ad 0a 	call	0x155a	; 0x155a <main>
      c6:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <time>:
      cc:	fc 01       	movw	r30, r24
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <__system_time>
      d6:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <__system_time+0x1>
      da:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__system_time+0x2>
      de:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__system_time+0x3>
      e2:	0f be       	out	0x3f, r0	; 63
      e4:	30 97       	sbiw	r30, 0x00	; 0
      e6:	21 f0       	breq	.+8      	; 0xf0 <time+0x24>
      e8:	60 83       	st	Z, r22
      ea:	71 83       	std	Z+1, r23	; 0x01
      ec:	82 83       	std	Z+2, r24	; 0x02
      ee:	93 83       	std	Z+3, r25	; 0x03
      f0:	08 95       	ret

000000f2 <LCD_ClearScreen>:
}

void foodCollide()
{
	
}
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	1a d0       	rcall	.+52     	; 0x132 <LCD_WriteCommand>
      fe:	00 00       	nop
     100:	df 91       	pop	r29
     102:	cf 91       	pop	r28
     104:	08 95       	ret

00000106 <LCD_init>:
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	cd b7       	in	r28, 0x3d	; 61
     10c:	de b7       	in	r29, 0x3e	; 62
     10e:	84 e6       	ldi	r24, 0x64	; 100
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	d5 d0       	rcall	.+426    	; 0x2be <delay_ms>
     114:	88 e3       	ldi	r24, 0x38	; 56
     116:	0d d0       	rcall	.+26     	; 0x132 <LCD_WriteCommand>
     118:	86 e0       	ldi	r24, 0x06	; 6
     11a:	0b d0       	rcall	.+22     	; 0x132 <LCD_WriteCommand>
     11c:	8f e0       	ldi	r24, 0x0F	; 15
     11e:	09 d0       	rcall	.+18     	; 0x132 <LCD_WriteCommand>
     120:	81 e0       	ldi	r24, 0x01	; 1
     122:	07 d0       	rcall	.+14     	; 0x132 <LCD_WriteCommand>
     124:	8a e0       	ldi	r24, 0x0A	; 10
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	ca d0       	rcall	.+404    	; 0x2be <delay_ms>
     12a:	00 00       	nop
     12c:	df 91       	pop	r29
     12e:	cf 91       	pop	r28
     130:	08 95       	ret

00000132 <LCD_WriteCommand>:
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
     136:	1f 92       	push	r1
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
     13c:	89 83       	std	Y+1, r24	; 0x01
     13e:	82 e2       	ldi	r24, 0x22	; 34
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	22 e2       	ldi	r18, 0x22	; 34
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	2e 7f       	andi	r18, 0xFE	; 254
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
     150:	8b e2       	ldi	r24, 0x2B	; 43
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	29 81       	ldd	r18, Y+1	; 0x01
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18
     15a:	82 e2       	ldi	r24, 0x22	; 34
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	22 e2       	ldi	r18, 0x22	; 34
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	f9 01       	movw	r30, r18
     164:	20 81       	ld	r18, Z
     166:	22 60       	ori	r18, 0x02	; 2
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18
     16c:	00 00       	nop
     16e:	82 e2       	ldi	r24, 0x22	; 34
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	22 e2       	ldi	r18, 0x22	; 34
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	f9 01       	movw	r30, r18
     178:	20 81       	ld	r18, Z
     17a:	2d 7f       	andi	r18, 0xFD	; 253
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18
     180:	82 e0       	ldi	r24, 0x02	; 2
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	9c d0       	rcall	.+312    	; 0x2be <delay_ms>
     186:	00 00       	nop
     188:	0f 90       	pop	r0
     18a:	df 91       	pop	r29
     18c:	cf 91       	pop	r28
     18e:	08 95       	ret

00000190 <LCD_WriteData>:
     190:	cf 93       	push	r28
     192:	df 93       	push	r29
     194:	1f 92       	push	r1
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	89 83       	std	Y+1, r24	; 0x01
     19c:	82 e2       	ldi	r24, 0x22	; 34
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	22 e2       	ldi	r18, 0x22	; 34
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	f9 01       	movw	r30, r18
     1a6:	20 81       	ld	r18, Z
     1a8:	21 60       	ori	r18, 0x01	; 1
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
     1ae:	8b e2       	ldi	r24, 0x2B	; 43
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	29 81       	ldd	r18, Y+1	; 0x01
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18
     1b8:	82 e2       	ldi	r24, 0x22	; 34
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	22 e2       	ldi	r18, 0x22	; 34
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	f9 01       	movw	r30, r18
     1c2:	20 81       	ld	r18, Z
     1c4:	22 60       	ori	r18, 0x02	; 2
     1c6:	fc 01       	movw	r30, r24
     1c8:	20 83       	st	Z, r18
     1ca:	00 00       	nop
     1cc:	82 e2       	ldi	r24, 0x22	; 34
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	22 e2       	ldi	r18, 0x22	; 34
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	f9 01       	movw	r30, r18
     1d6:	20 81       	ld	r18, Z
     1d8:	2d 7f       	andi	r18, 0xFD	; 253
     1da:	fc 01       	movw	r30, r24
     1dc:	20 83       	st	Z, r18
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	6d d0       	rcall	.+218    	; 0x2be <delay_ms>
     1e4:	00 00       	nop
     1e6:	0f 90       	pop	r0
     1e8:	df 91       	pop	r29
     1ea:	cf 91       	pop	r28
     1ec:	08 95       	ret

000001ee <LCD_DisplayString>:
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	00 d0       	rcall	.+0      	; 0x1f4 <LCD_DisplayString+0x6>
     1f4:	00 d0       	rcall	.+0      	; 0x1f6 <LCD_DisplayString+0x8>
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	8a 83       	std	Y+2, r24	; 0x02
     1fc:	7c 83       	std	Y+4, r23	; 0x04
     1fe:	6b 83       	std	Y+3, r22	; 0x03
     200:	78 df       	rcall	.-272    	; 0xf2 <LCD_ClearScreen>
     202:	8a 81       	ldd	r24, Y+2	; 0x02
     204:	89 83       	std	Y+1, r24	; 0x01
     206:	0f c0       	rjmp	.+30     	; 0x226 <LCD_DisplayString+0x38>
     208:	89 81       	ldd	r24, Y+1	; 0x01
     20a:	91 e0       	ldi	r25, 0x01	; 1
     20c:	98 0f       	add	r25, r24
     20e:	99 83       	std	Y+1, r25	; 0x01
     210:	41 d0       	rcall	.+130    	; 0x294 <LCD_Cursor>
     212:	8b 81       	ldd	r24, Y+3	; 0x03
     214:	9c 81       	ldd	r25, Y+4	; 0x04
     216:	9c 01       	movw	r18, r24
     218:	2f 5f       	subi	r18, 0xFF	; 255
     21a:	3f 4f       	sbci	r19, 0xFF	; 255
     21c:	3c 83       	std	Y+4, r19	; 0x04
     21e:	2b 83       	std	Y+3, r18	; 0x03
     220:	fc 01       	movw	r30, r24
     222:	80 81       	ld	r24, Z
     224:	b5 df       	rcall	.-150    	; 0x190 <LCD_WriteData>
     226:	8b 81       	ldd	r24, Y+3	; 0x03
     228:	9c 81       	ldd	r25, Y+4	; 0x04
     22a:	fc 01       	movw	r30, r24
     22c:	80 81       	ld	r24, Z
     22e:	88 23       	and	r24, r24
     230:	59 f7       	brne	.-42     	; 0x208 <LCD_DisplayString+0x1a>
     232:	00 00       	nop
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	0f 90       	pop	r0
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	08 95       	ret

00000242 <LCD_DisplayStringNoClear>:
     242:	cf 93       	push	r28
     244:	df 93       	push	r29
     246:	00 d0       	rcall	.+0      	; 0x248 <LCD_DisplayStringNoClear+0x6>
     248:	00 d0       	rcall	.+0      	; 0x24a <LCD_DisplayStringNoClear+0x8>
     24a:	cd b7       	in	r28, 0x3d	; 61
     24c:	de b7       	in	r29, 0x3e	; 62
     24e:	8a 83       	std	Y+2, r24	; 0x02
     250:	7c 83       	std	Y+4, r23	; 0x04
     252:	6b 83       	std	Y+3, r22	; 0x03
     254:	8a 81       	ldd	r24, Y+2	; 0x02
     256:	89 83       	std	Y+1, r24	; 0x01
     258:	0f c0       	rjmp	.+30     	; 0x278 <LCD_DisplayStringNoClear+0x36>
     25a:	89 81       	ldd	r24, Y+1	; 0x01
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	98 0f       	add	r25, r24
     260:	99 83       	std	Y+1, r25	; 0x01
     262:	18 d0       	rcall	.+48     	; 0x294 <LCD_Cursor>
     264:	8b 81       	ldd	r24, Y+3	; 0x03
     266:	9c 81       	ldd	r25, Y+4	; 0x04
     268:	9c 01       	movw	r18, r24
     26a:	2f 5f       	subi	r18, 0xFF	; 255
     26c:	3f 4f       	sbci	r19, 0xFF	; 255
     26e:	3c 83       	std	Y+4, r19	; 0x04
     270:	2b 83       	std	Y+3, r18	; 0x03
     272:	fc 01       	movw	r30, r24
     274:	80 81       	ld	r24, Z
     276:	8c df       	rcall	.-232    	; 0x190 <LCD_WriteData>
     278:	8b 81       	ldd	r24, Y+3	; 0x03
     27a:	9c 81       	ldd	r25, Y+4	; 0x04
     27c:	fc 01       	movw	r30, r24
     27e:	80 81       	ld	r24, Z
     280:	88 23       	and	r24, r24
     282:	59 f7       	brne	.-42     	; 0x25a <LCD_DisplayStringNoClear+0x18>
     284:	00 00       	nop
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	df 91       	pop	r29
     290:	cf 91       	pop	r28
     292:	08 95       	ret

00000294 <LCD_Cursor>:
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	1f 92       	push	r1
     29a:	cd b7       	in	r28, 0x3d	; 61
     29c:	de b7       	in	r29, 0x3e	; 62
     29e:	89 83       	std	Y+1, r24	; 0x01
     2a0:	89 81       	ldd	r24, Y+1	; 0x01
     2a2:	81 31       	cpi	r24, 0x11	; 17
     2a4:	20 f4       	brcc	.+8      	; 0x2ae <LCD_Cursor+0x1a>
     2a6:	89 81       	ldd	r24, Y+1	; 0x01
     2a8:	81 58       	subi	r24, 0x81	; 129
     2aa:	43 df       	rcall	.-378    	; 0x132 <LCD_WriteCommand>
     2ac:	03 c0       	rjmp	.+6      	; 0x2b4 <LCD_Cursor+0x20>
     2ae:	89 81       	ldd	r24, Y+1	; 0x01
     2b0:	81 55       	subi	r24, 0x51	; 81
     2b2:	3f df       	rcall	.-386    	; 0x132 <LCD_WriteCommand>
     2b4:	00 00       	nop
     2b6:	0f 90       	pop	r0
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <delay_ms>:
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	00 d0       	rcall	.+0      	; 0x2c4 <delay_ms+0x6>
     2c4:	00 d0       	rcall	.+0      	; 0x2c6 <delay_ms+0x8>
     2c6:	00 d0       	rcall	.+0      	; 0x2c8 <delay_ms+0xa>
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
     2cc:	9e 83       	std	Y+6, r25	; 0x06
     2ce:	8d 83       	std	Y+5, r24	; 0x05
     2d0:	1a 82       	std	Y+2, r1	; 0x02
     2d2:	19 82       	std	Y+1, r1	; 0x01
     2d4:	13 c0       	rjmp	.+38     	; 0x2fc <delay_ms+0x3e>
     2d6:	1c 82       	std	Y+4, r1	; 0x04
     2d8:	1b 82       	std	Y+3, r1	; 0x03
     2da:	06 c0       	rjmp	.+12     	; 0x2e8 <delay_ms+0x2a>
     2dc:	00 00       	nop
     2de:	8b 81       	ldd	r24, Y+3	; 0x03
     2e0:	9c 81       	ldd	r25, Y+4	; 0x04
     2e2:	01 96       	adiw	r24, 0x01	; 1
     2e4:	9c 83       	std	Y+4, r25	; 0x04
     2e6:	8b 83       	std	Y+3, r24	; 0x03
     2e8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ea:	9c 81       	ldd	r25, Y+4	; 0x04
     2ec:	87 30       	cpi	r24, 0x07	; 7
     2ee:	93 40       	sbci	r25, 0x03	; 3
     2f0:	ac f3       	brlt	.-22     	; 0x2dc <delay_ms+0x1e>
     2f2:	89 81       	ldd	r24, Y+1	; 0x01
     2f4:	9a 81       	ldd	r25, Y+2	; 0x02
     2f6:	01 96       	adiw	r24, 0x01	; 1
     2f8:	9a 83       	std	Y+2, r25	; 0x02
     2fa:	89 83       	std	Y+1, r24	; 0x01
     2fc:	29 81       	ldd	r18, Y+1	; 0x01
     2fe:	3a 81       	ldd	r19, Y+2	; 0x02
     300:	8d 81       	ldd	r24, Y+5	; 0x05
     302:	9e 81       	ldd	r25, Y+6	; 0x06
     304:	28 17       	cp	r18, r24
     306:	39 07       	cpc	r19, r25
     308:	34 f3       	brlt	.-52     	; 0x2d6 <delay_ms+0x18>
     30a:	00 00       	nop
     30c:	26 96       	adiw	r28, 0x06	; 6
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	f8 94       	cli
     312:	de bf       	out	0x3e, r29	; 62
     314:	0f be       	out	0x3f, r0	; 63
     316:	cd bf       	out	0x3d, r28	; 61
     318:	df 91       	pop	r29
     31a:	cf 91       	pop	r28
     31c:	08 95       	ret

0000031e <LCD_CreateCustomChar>:
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	00 d0       	rcall	.+0      	; 0x324 <LCD_CreateCustomChar+0x6>
     324:	00 d0       	rcall	.+0      	; 0x326 <LCD_CreateCustomChar+0x8>
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
     32a:	8a 83       	std	Y+2, r24	; 0x02
     32c:	7c 83       	std	Y+4, r23	; 0x04
     32e:	6b 83       	std	Y+3, r22	; 0x03
     330:	8a 81       	ldd	r24, Y+2	; 0x02
     332:	88 30       	cpi	r24, 0x08	; 8
     334:	d0 f4       	brcc	.+52     	; 0x36a <LCD_CreateCustomChar+0x4c>
     336:	8a 81       	ldd	r24, Y+2	; 0x02
     338:	88 2f       	mov	r24, r24
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	08 96       	adiw	r24, 0x08	; 8
     33e:	88 0f       	add	r24, r24
     340:	88 0f       	add	r24, r24
     342:	88 0f       	add	r24, r24
     344:	f6 de       	rcall	.-532    	; 0x132 <LCD_WriteCommand>
     346:	19 82       	std	Y+1, r1	; 0x01
     348:	0d c0       	rjmp	.+26     	; 0x364 <LCD_CreateCustomChar+0x46>
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	88 2f       	mov	r24, r24
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	2b 81       	ldd	r18, Y+3	; 0x03
     352:	3c 81       	ldd	r19, Y+4	; 0x04
     354:	82 0f       	add	r24, r18
     356:	93 1f       	adc	r25, r19
     358:	fc 01       	movw	r30, r24
     35a:	80 81       	ld	r24, Z
     35c:	19 df       	rcall	.-462    	; 0x190 <LCD_WriteData>
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	8f 5f       	subi	r24, 0xFF	; 255
     362:	89 83       	std	Y+1, r24	; 0x01
     364:	89 81       	ldd	r24, Y+1	; 0x01
     366:	88 30       	cpi	r24, 0x08	; 8
     368:	80 f3       	brcs	.-32     	; 0x34a <LCD_CreateCustomChar+0x2c>
     36a:	80 e8       	ldi	r24, 0x80	; 128
     36c:	e2 de       	rcall	.-572    	; 0x132 <LCD_WriteCommand>
     36e:	00 00       	nop
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	0f 90       	pop	r0
     378:	df 91       	pop	r29
     37a:	cf 91       	pop	r28
     37c:	08 95       	ret

0000037e <SetBit>:
     37e:	cf 93       	push	r28
     380:	df 93       	push	r29
     382:	00 d0       	rcall	.+0      	; 0x384 <SetBit+0x6>
     384:	1f 92       	push	r1
     386:	cd b7       	in	r28, 0x3d	; 61
     388:	de b7       	in	r29, 0x3e	; 62
     38a:	89 83       	std	Y+1, r24	; 0x01
     38c:	6a 83       	std	Y+2, r22	; 0x02
     38e:	4b 83       	std	Y+3, r20	; 0x03
     390:	8b 81       	ldd	r24, Y+3	; 0x03
     392:	88 23       	and	r24, r24
     394:	71 f0       	breq	.+28     	; 0x3b2 <SetBit+0x34>
     396:	8a 81       	ldd	r24, Y+2	; 0x02
     398:	28 2f       	mov	r18, r24
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	81 e0       	ldi	r24, 0x01	; 1
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <SetBit+0x28>
     3a2:	88 0f       	add	r24, r24
     3a4:	99 1f       	adc	r25, r25
     3a6:	2a 95       	dec	r18
     3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <SetBit+0x24>
     3aa:	98 2f       	mov	r25, r24
     3ac:	89 81       	ldd	r24, Y+1	; 0x01
     3ae:	89 2b       	or	r24, r25
     3b0:	0e c0       	rjmp	.+28     	; 0x3ce <SetBit+0x50>
     3b2:	8a 81       	ldd	r24, Y+2	; 0x02
     3b4:	28 2f       	mov	r18, r24
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <SetBit+0x44>
     3be:	88 0f       	add	r24, r24
     3c0:	99 1f       	adc	r25, r25
     3c2:	2a 95       	dec	r18
     3c4:	e2 f7       	brpl	.-8      	; 0x3be <SetBit+0x40>
     3c6:	98 2f       	mov	r25, r24
     3c8:	90 95       	com	r25
     3ca:	89 81       	ldd	r24, Y+1	; 0x01
     3cc:	89 23       	and	r24, r25
     3ce:	0f 90       	pop	r0
     3d0:	0f 90       	pop	r0
     3d2:	0f 90       	pop	r0
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	08 95       	ret

000003da <adc_init>:
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	8a e7       	ldi	r24, 0x7A	; 122
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	2a e7       	ldi	r18, 0x7A	; 122
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	f9 01       	movw	r30, r18
     3ec:	20 81       	ld	r18, Z
     3ee:	20 6e       	ori	r18, 0xE0	; 224
     3f0:	fc 01       	movw	r30, r24
     3f2:	20 83       	st	Z, r18
     3f4:	00 00       	nop
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <set_adc_pin>:
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	1f 92       	push	r1
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	89 83       	std	Y+1, r24	; 0x01
     408:	8c e7       	ldi	r24, 0x7C	; 124
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	29 81       	ldd	r18, Y+1	; 0x01
     40e:	28 30       	cpi	r18, 0x08	; 8
     410:	28 f0       	brcs	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     412:	2c e7       	ldi	r18, 0x7C	; 124
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	f9 01       	movw	r30, r18
     418:	20 81       	ld	r18, Z
     41a:	01 c0       	rjmp	.+2      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     41c:	29 81       	ldd	r18, Y+1	; 0x01
     41e:	fc 01       	movw	r30, r24
     420:	20 83       	st	Z, r18
     422:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <i.2250>
     426:	06 c0       	rjmp	.+12     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     428:	00 00       	nop
     42a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <i.2250>
     42e:	8f 5f       	subi	r24, 0xFF	; 255
     430:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <i.2250>
     434:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <i.2250>
     438:	8f 30       	cpi	r24, 0x0F	; 15
     43a:	b0 f3       	brcs	.-20     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     43c:	00 00       	nop
     43e:	0f 90       	pop	r0
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	08 95       	ret

00000446 <TimerOn>:
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	cd b7       	in	r28, 0x3d	; 61
     44c:	de b7       	in	r29, 0x3e	; 62
     44e:	81 e8       	ldi	r24, 0x81	; 129
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	2b e0       	ldi	r18, 0x0B	; 11
     454:	fc 01       	movw	r30, r24
     456:	20 83       	st	Z, r18
     458:	88 e8       	ldi	r24, 0x88	; 136
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	2d e7       	ldi	r18, 0x7D	; 125
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	31 83       	std	Z+1, r19	; 0x01
     464:	20 83       	st	Z, r18
     466:	8f e6       	ldi	r24, 0x6F	; 111
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	22 e0       	ldi	r18, 0x02	; 2
     46c:	fc 01       	movw	r30, r24
     46e:	20 83       	st	Z, r18
     470:	84 e8       	ldi	r24, 0x84	; 132
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	fc 01       	movw	r30, r24
     476:	11 82       	std	Z+1, r1	; 0x01
     478:	10 82       	st	Z, r1
     47a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     47e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     482:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     486:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     48a:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
     48e:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
     492:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <__data_end+0x2>
     496:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <__data_end+0x3>
     49a:	8f e5       	ldi	r24, 0x5F	; 95
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	2f e5       	ldi	r18, 0x5F	; 95
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	f9 01       	movw	r30, r18
     4a4:	20 81       	ld	r18, Z
     4a6:	20 68       	ori	r18, 0x80	; 128
     4a8:	fc 01       	movw	r30, r24
     4aa:	20 83       	st	Z, r18
     4ac:	00 00       	nop
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <TimerSet>:
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	00 d0       	rcall	.+0      	; 0x4ba <TimerSet+0x6>
     4ba:	00 d0       	rcall	.+0      	; 0x4bc <TimerSet+0x8>
     4bc:	cd b7       	in	r28, 0x3d	; 61
     4be:	de b7       	in	r29, 0x3e	; 62
     4c0:	69 83       	std	Y+1, r22	; 0x01
     4c2:	7a 83       	std	Y+2, r23	; 0x02
     4c4:	8b 83       	std	Y+3, r24	; 0x03
     4c6:	9c 83       	std	Y+4, r25	; 0x04
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	ab 81       	ldd	r26, Y+3	; 0x03
     4ce:	bc 81       	ldd	r27, Y+4	; 0x04
     4d0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_M>
     4d4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_M+0x1>
     4d8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <_avr_timer_M+0x2>
     4dc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <_avr_timer_M+0x3>
     4e0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     4e4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     4e8:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     4ec:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     4f0:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
     4f4:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
     4f8:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <__data_end+0x2>
     4fc:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <__data_end+0x3>
     500:	00 00       	nop
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	08 95       	ret

00000510 <TimerISR>:
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	00 d0       	rcall	.+0      	; 0x51a <TimerISR+0xa>
     51a:	1f 92       	push	r1
     51c:	cd b7       	in	r28, 0x3d	; 61
     51e:	de b7       	in	r29, 0x3e	; 62
     520:	19 82       	std	Y+1, r1	; 0x01
     522:	a4 c0       	rjmp	.+328    	; 0x66c <TimerISR+0x15c>
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	28 2f       	mov	r18, r24
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	c9 01       	movw	r24, r18
     52c:	88 0f       	add	r24, r24
     52e:	99 1f       	adc	r25, r25
     530:	82 0f       	add	r24, r18
     532:	93 1f       	adc	r25, r19
     534:	88 0f       	add	r24, r24
     536:	99 1f       	adc	r25, r25
     538:	88 0f       	add	r24, r24
     53a:	99 1f       	adc	r25, r25
     53c:	8a 54       	subi	r24, 0x4A	; 74
     53e:	9e 4f       	sbci	r25, 0xFE	; 254
     540:	fc 01       	movw	r30, r24
     542:	20 81       	ld	r18, Z
     544:	31 81       	ldd	r19, Z+1	; 0x01
     546:	42 81       	ldd	r20, Z+2	; 0x02
     548:	53 81       	ldd	r21, Z+3	; 0x03
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	68 2f       	mov	r22, r24
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	cb 01       	movw	r24, r22
     552:	88 0f       	add	r24, r24
     554:	99 1f       	adc	r25, r25
     556:	86 0f       	add	r24, r22
     558:	97 1f       	adc	r25, r23
     55a:	88 0f       	add	r24, r24
     55c:	99 1f       	adc	r25, r25
     55e:	88 0f       	add	r24, r24
     560:	99 1f       	adc	r25, r25
     562:	8e 54       	subi	r24, 0x4E	; 78
     564:	9e 4f       	sbci	r25, 0xFE	; 254
     566:	fc 01       	movw	r30, r24
     568:	80 81       	ld	r24, Z
     56a:	91 81       	ldd	r25, Z+1	; 0x01
     56c:	a2 81       	ldd	r26, Z+2	; 0x02
     56e:	b3 81       	ldd	r27, Z+3	; 0x03
     570:	28 17       	cp	r18, r24
     572:	39 07       	cpc	r19, r25
     574:	4a 07       	cpc	r20, r26
     576:	5b 07       	cpc	r21, r27
     578:	08 f4       	brcc	.+2      	; 0x57c <TimerISR+0x6c>
     57a:	49 c0       	rjmp	.+146    	; 0x60e <TimerISR+0xfe>
     57c:	89 81       	ldd	r24, Y+1	; 0x01
     57e:	08 2f       	mov	r16, r24
     580:	10 e0       	ldi	r17, 0x00	; 0
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	28 2f       	mov	r18, r24
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	c9 01       	movw	r24, r18
     58a:	88 0f       	add	r24, r24
     58c:	99 1f       	adc	r25, r25
     58e:	82 0f       	add	r24, r18
     590:	93 1f       	adc	r25, r19
     592:	88 0f       	add	r24, r24
     594:	99 1f       	adc	r25, r25
     596:	88 0f       	add	r24, r24
     598:	99 1f       	adc	r25, r25
     59a:	86 54       	subi	r24, 0x46	; 70
     59c:	9e 4f       	sbci	r25, 0xFE	; 254
     59e:	fc 01       	movw	r30, r24
     5a0:	40 81       	ld	r20, Z
     5a2:	51 81       	ldd	r21, Z+1	; 0x01
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	28 2f       	mov	r18, r24
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	c9 01       	movw	r24, r18
     5ac:	88 0f       	add	r24, r24
     5ae:	99 1f       	adc	r25, r25
     5b0:	82 0f       	add	r24, r18
     5b2:	93 1f       	adc	r25, r19
     5b4:	88 0f       	add	r24, r24
     5b6:	99 1f       	adc	r25, r25
     5b8:	88 0f       	add	r24, r24
     5ba:	99 1f       	adc	r25, r25
     5bc:	80 55       	subi	r24, 0x50	; 80
     5be:	9e 4f       	sbci	r25, 0xFE	; 254
     5c0:	fc 01       	movw	r30, r24
     5c2:	80 81       	ld	r24, Z
     5c4:	91 81       	ldd	r25, Z+1	; 0x01
     5c6:	fa 01       	movw	r30, r20
     5c8:	09 95       	icall
     5ca:	9c 01       	movw	r18, r24
     5cc:	c8 01       	movw	r24, r16
     5ce:	88 0f       	add	r24, r24
     5d0:	99 1f       	adc	r25, r25
     5d2:	80 0f       	add	r24, r16
     5d4:	91 1f       	adc	r25, r17
     5d6:	88 0f       	add	r24, r24
     5d8:	99 1f       	adc	r25, r25
     5da:	88 0f       	add	r24, r24
     5dc:	99 1f       	adc	r25, r25
     5de:	80 55       	subi	r24, 0x50	; 80
     5e0:	9e 4f       	sbci	r25, 0xFE	; 254
     5e2:	fc 01       	movw	r30, r24
     5e4:	31 83       	std	Z+1, r19	; 0x01
     5e6:	20 83       	st	Z, r18
     5e8:	89 81       	ldd	r24, Y+1	; 0x01
     5ea:	28 2f       	mov	r18, r24
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	c9 01       	movw	r24, r18
     5f0:	88 0f       	add	r24, r24
     5f2:	99 1f       	adc	r25, r25
     5f4:	82 0f       	add	r24, r18
     5f6:	93 1f       	adc	r25, r19
     5f8:	88 0f       	add	r24, r24
     5fa:	99 1f       	adc	r25, r25
     5fc:	88 0f       	add	r24, r24
     5fe:	99 1f       	adc	r25, r25
     600:	8a 54       	subi	r24, 0x4A	; 74
     602:	9e 4f       	sbci	r25, 0xFE	; 254
     604:	fc 01       	movw	r30, r24
     606:	10 82       	st	Z, r1
     608:	11 82       	std	Z+1, r1	; 0x01
     60a:	12 82       	std	Z+2, r1	; 0x02
     60c:	13 82       	std	Z+3, r1	; 0x03
     60e:	89 81       	ldd	r24, Y+1	; 0x01
     610:	68 2f       	mov	r22, r24
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	89 81       	ldd	r24, Y+1	; 0x01
     616:	28 2f       	mov	r18, r24
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	c9 01       	movw	r24, r18
     61c:	88 0f       	add	r24, r24
     61e:	99 1f       	adc	r25, r25
     620:	82 0f       	add	r24, r18
     622:	93 1f       	adc	r25, r19
     624:	88 0f       	add	r24, r24
     626:	99 1f       	adc	r25, r25
     628:	88 0f       	add	r24, r24
     62a:	99 1f       	adc	r25, r25
     62c:	8a 54       	subi	r24, 0x4A	; 74
     62e:	9e 4f       	sbci	r25, 0xFE	; 254
     630:	fc 01       	movw	r30, r24
     632:	80 81       	ld	r24, Z
     634:	91 81       	ldd	r25, Z+1	; 0x01
     636:	a2 81       	ldd	r26, Z+2	; 0x02
     638:	b3 81       	ldd	r27, Z+3	; 0x03
     63a:	9c 01       	movw	r18, r24
     63c:	ad 01       	movw	r20, r26
     63e:	2f 5f       	subi	r18, 0xFF	; 255
     640:	3f 4f       	sbci	r19, 0xFF	; 255
     642:	4f 4f       	sbci	r20, 0xFF	; 255
     644:	5f 4f       	sbci	r21, 0xFF	; 255
     646:	cb 01       	movw	r24, r22
     648:	88 0f       	add	r24, r24
     64a:	99 1f       	adc	r25, r25
     64c:	86 0f       	add	r24, r22
     64e:	97 1f       	adc	r25, r23
     650:	88 0f       	add	r24, r24
     652:	99 1f       	adc	r25, r25
     654:	88 0f       	add	r24, r24
     656:	99 1f       	adc	r25, r25
     658:	8a 54       	subi	r24, 0x4A	; 74
     65a:	9e 4f       	sbci	r25, 0xFE	; 254
     65c:	fc 01       	movw	r30, r24
     65e:	20 83       	st	Z, r18
     660:	31 83       	std	Z+1, r19	; 0x01
     662:	42 83       	std	Z+2, r20	; 0x02
     664:	53 83       	std	Z+3, r21	; 0x03
     666:	89 81       	ldd	r24, Y+1	; 0x01
     668:	8f 5f       	subi	r24, 0xFF	; 255
     66a:	89 83       	std	Y+1, r24	; 0x01
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	99 81       	ldd	r25, Y+1	; 0x01
     670:	98 17       	cp	r25, r24
     672:	08 f4       	brcc	.+2      	; 0x676 <TimerISR+0x166>
     674:	57 cf       	rjmp	.-338    	; 0x524 <TimerISR+0x14>
     676:	1b 82       	std	Y+3, r1	; 0x03
     678:	1a 82       	std	Y+2, r1	; 0x02
     67a:	86 e0       	ldi	r24, 0x06	; 6
     67c:	bf de       	rcall	.-642    	; 0x3fc <set_adc_pin>
     67e:	88 e7       	ldi	r24, 0x78	; 120
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	fc 01       	movw	r30, r24
     684:	80 81       	ld	r24, Z
     686:	91 81       	ldd	r25, Z+1	; 0x01
     688:	9b 83       	std	Y+3, r25	; 0x03
     68a:	8a 83       	std	Y+2, r24	; 0x02
     68c:	8a 81       	ldd	r24, Y+2	; 0x02
     68e:	9b 81       	ldd	r25, Y+3	; 0x03
     690:	89 3e       	cpi	r24, 0xE9	; 233
     692:	93 40       	sbci	r25, 0x03	; 3
     694:	00 f1       	brcs	.+64     	; 0x6d6 <TimerISR+0x1c6>
     696:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <tasks+0x1a>
     69a:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <tasks+0x1b>
     69e:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <tasks+0x1c>
     6a2:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <tasks+0x1d>
     6a6:	84 3f       	cpi	r24, 0xF4	; 244
     6a8:	91 40       	sbci	r25, 0x01	; 1
     6aa:	a1 05       	cpc	r26, r1
     6ac:	b1 05       	cpc	r27, r1
     6ae:	99 f0       	breq	.+38     	; 0x6d6 <TimerISR+0x1c6>
     6b0:	84 ef       	ldi	r24, 0xF4	; 244
     6b2:	91 e0       	ldi	r25, 0x01	; 1
     6b4:	a0 e0       	ldi	r26, 0x00	; 0
     6b6:	b0 e0       	ldi	r27, 0x00	; 0
     6b8:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <tasks+0x1a>
     6bc:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <tasks+0x1b>
     6c0:	a0 93 cc 01 	sts	0x01CC, r26	; 0x8001cc <tasks+0x1c>
     6c4:	b0 93 cd 01 	sts	0x01CD, r27	; 0x8001cd <tasks+0x1d>
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <changed.2268+0x1>
     6d0:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <changed.2268>
     6d4:	7b c0       	rjmp	.+246    	; 0x7cc <TimerISR+0x2bc>
     6d6:	8a 81       	ldd	r24, Y+2	; 0x02
     6d8:	9b 81       	ldd	r25, Y+3	; 0x03
     6da:	88 3c       	cpi	r24, 0xC8	; 200
     6dc:	91 05       	cpc	r25, r1
     6de:	d0 f4       	brcc	.+52     	; 0x714 <TimerISR+0x204>
     6e0:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <tasks+0x1a>
     6e4:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <tasks+0x1b>
     6e8:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <tasks+0x1c>
     6ec:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <tasks+0x1d>
     6f0:	84 36       	cpi	r24, 0x64	; 100
     6f2:	91 05       	cpc	r25, r1
     6f4:	a1 05       	cpc	r26, r1
     6f6:	b1 05       	cpc	r27, r1
     6f8:	69 f0       	breq	.+26     	; 0x714 <TimerISR+0x204>
     6fa:	84 e6       	ldi	r24, 0x64	; 100
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	a0 e0       	ldi	r26, 0x00	; 0
     700:	b0 e0       	ldi	r27, 0x00	; 0
     702:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <tasks+0x1a>
     706:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <tasks+0x1b>
     70a:	a0 93 cc 01 	sts	0x01CC, r26	; 0x8001cc <tasks+0x1c>
     70e:	b0 93 cd 01 	sts	0x01CD, r27	; 0x8001cd <tasks+0x1d>
     712:	5c c0       	rjmp	.+184    	; 0x7cc <TimerISR+0x2bc>
     714:	8a 81       	ldd	r24, Y+2	; 0x02
     716:	9b 81       	ldd	r25, Y+3	; 0x03
     718:	80 39       	cpi	r24, 0x90	; 144
     71a:	91 40       	sbci	r25, 0x01	; 1
     71c:	d0 f4       	brcc	.+52     	; 0x752 <TimerISR+0x242>
     71e:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <tasks+0x1a>
     722:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <tasks+0x1b>
     726:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <tasks+0x1c>
     72a:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <tasks+0x1d>
     72e:	88 3c       	cpi	r24, 0xC8	; 200
     730:	91 05       	cpc	r25, r1
     732:	a1 05       	cpc	r26, r1
     734:	b1 05       	cpc	r27, r1
     736:	69 f0       	breq	.+26     	; 0x752 <TimerISR+0x242>
     738:	88 ec       	ldi	r24, 0xC8	; 200
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	a0 e0       	ldi	r26, 0x00	; 0
     73e:	b0 e0       	ldi	r27, 0x00	; 0
     740:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <tasks+0x1a>
     744:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <tasks+0x1b>
     748:	a0 93 cc 01 	sts	0x01CC, r26	; 0x8001cc <tasks+0x1c>
     74c:	b0 93 cd 01 	sts	0x01CD, r27	; 0x8001cd <tasks+0x1d>
     750:	3d c0       	rjmp	.+122    	; 0x7cc <TimerISR+0x2bc>
     752:	8a 81       	ldd	r24, Y+2	; 0x02
     754:	9b 81       	ldd	r25, Y+3	; 0x03
     756:	88 35       	cpi	r24, 0x58	; 88
     758:	92 40       	sbci	r25, 0x02	; 2
     75a:	d0 f4       	brcc	.+52     	; 0x790 <TimerISR+0x280>
     75c:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <tasks+0x1a>
     760:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <tasks+0x1b>
     764:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <tasks+0x1c>
     768:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <tasks+0x1d>
     76c:	8c 32       	cpi	r24, 0x2C	; 44
     76e:	91 40       	sbci	r25, 0x01	; 1
     770:	a1 05       	cpc	r26, r1
     772:	b1 05       	cpc	r27, r1
     774:	69 f0       	breq	.+26     	; 0x790 <TimerISR+0x280>
     776:	8c e2       	ldi	r24, 0x2C	; 44
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	a0 e0       	ldi	r26, 0x00	; 0
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <tasks+0x1a>
     782:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <tasks+0x1b>
     786:	a0 93 cc 01 	sts	0x01CC, r26	; 0x8001cc <tasks+0x1c>
     78a:	b0 93 cd 01 	sts	0x01CD, r27	; 0x8001cd <tasks+0x1d>
     78e:	1e c0       	rjmp	.+60     	; 0x7cc <TimerISR+0x2bc>
     790:	8a 81       	ldd	r24, Y+2	; 0x02
     792:	9b 81       	ldd	r25, Y+3	; 0x03
     794:	80 32       	cpi	r24, 0x20	; 32
     796:	93 40       	sbci	r25, 0x03	; 3
     798:	c8 f4       	brcc	.+50     	; 0x7cc <TimerISR+0x2bc>
     79a:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <tasks+0x1a>
     79e:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <tasks+0x1b>
     7a2:	a0 91 cc 01 	lds	r26, 0x01CC	; 0x8001cc <tasks+0x1c>
     7a6:	b0 91 cd 01 	lds	r27, 0x01CD	; 0x8001cd <tasks+0x1d>
     7aa:	80 39       	cpi	r24, 0x90	; 144
     7ac:	91 40       	sbci	r25, 0x01	; 1
     7ae:	a1 05       	cpc	r26, r1
     7b0:	b1 05       	cpc	r27, r1
     7b2:	61 f0       	breq	.+24     	; 0x7cc <TimerISR+0x2bc>
     7b4:	80 e9       	ldi	r24, 0x90	; 144
     7b6:	91 e0       	ldi	r25, 0x01	; 1
     7b8:	a0 e0       	ldi	r26, 0x00	; 0
     7ba:	b0 e0       	ldi	r27, 0x00	; 0
     7bc:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <tasks+0x1a>
     7c0:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <tasks+0x1b>
     7c4:	a0 93 cc 01 	sts	0x01CC, r26	; 0x8001cc <tasks+0x1c>
     7c8:	b0 93 cd 01 	sts	0x01CD, r27	; 0x8001cd <tasks+0x1d>
     7cc:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <changed.2268>
     7d0:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <changed.2268+0x1>
     7d4:	89 2b       	or	r24, r25
     7d6:	61 f0       	breq	.+24     	; 0x7f0 <TimerISR+0x2e0>
     7d8:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <tasks+0x1e>
     7dc:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <tasks+0x1f>
     7e0:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <tasks+0x20>
     7e4:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <tasks+0x21>
     7e8:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <changed.2268+0x1>
     7ec:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <changed.2268>
     7f0:	00 00       	nop
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	08 95       	ret

00000802 <__vector_13>:
     802:	1f 92       	push	r1
     804:	0f 92       	push	r0
     806:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     80a:	0f 92       	push	r0
     80c:	11 24       	eor	r1, r1
     80e:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     812:	0f 92       	push	r0
     814:	2f 93       	push	r18
     816:	3f 93       	push	r19
     818:	4f 93       	push	r20
     81a:	5f 93       	push	r21
     81c:	6f 93       	push	r22
     81e:	7f 93       	push	r23
     820:	8f 93       	push	r24
     822:	9f 93       	push	r25
     824:	af 93       	push	r26
     826:	bf 93       	push	r27
     828:	ef 93       	push	r30
     82a:	ff 93       	push	r31
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	cd b7       	in	r28, 0x3d	; 61
     832:	de b7       	in	r29, 0x3e	; 62
     834:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
     838:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <__data_end+0x1>
     83c:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <__data_end+0x2>
     840:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <__data_end+0x3>
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	a1 09       	sbc	r26, r1
     848:	b1 09       	sbc	r27, r1
     84a:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
     84e:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
     852:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <__data_end+0x2>
     856:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <__data_end+0x3>
     85a:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
     85e:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <__data_end+0x1>
     862:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <__data_end+0x2>
     866:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <__data_end+0x3>
     86a:	89 2b       	or	r24, r25
     86c:	8a 2b       	or	r24, r26
     86e:	8b 2b       	or	r24, r27
     870:	89 f4       	brne	.+34     	; 0x894 <__vector_13+0x92>
     872:	4e de       	rcall	.-868    	; 0x510 <TimerISR>
     874:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_M>
     878:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_M+0x1>
     87c:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_M+0x2>
     880:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_M+0x3>
     884:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
     888:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
     88c:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <__data_end+0x2>
     890:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <__data_end+0x3>
     894:	00 00       	nop
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	ff 91       	pop	r31
     89c:	ef 91       	pop	r30
     89e:	bf 91       	pop	r27
     8a0:	af 91       	pop	r26
     8a2:	9f 91       	pop	r25
     8a4:	8f 91       	pop	r24
     8a6:	7f 91       	pop	r23
     8a8:	6f 91       	pop	r22
     8aa:	5f 91       	pop	r21
     8ac:	4f 91       	pop	r20
     8ae:	3f 91       	pop	r19
     8b0:	2f 91       	pop	r18
     8b2:	0f 90       	pop	r0
     8b4:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     8b8:	0f 90       	pop	r0
     8ba:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     8be:	0f 90       	pop	r0
     8c0:	1f 90       	pop	r1
     8c2:	18 95       	reti

000008c4 <TickFct_startGame>:
     8c4:	cf 93       	push	r28
     8c6:	df 93       	push	r29
     8c8:	00 d0       	rcall	.+0      	; 0x8ca <TickFct_startGame+0x6>
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62
     8ce:	9a 83       	std	Y+2, r25	; 0x02
     8d0:	89 83       	std	Y+1, r24	; 0x01
     8d2:	89 81       	ldd	r24, Y+1	; 0x01
     8d4:	9a 81       	ldd	r25, Y+2	; 0x02
     8d6:	81 30       	cpi	r24, 0x01	; 1
     8d8:	91 05       	cpc	r25, r1
     8da:	09 f4       	brne	.+2      	; 0x8de <TickFct_startGame+0x1a>
     8dc:	64 c0       	rjmp	.+200    	; 0x9a6 <TickFct_startGame+0xe2>
     8de:	82 30       	cpi	r24, 0x02	; 2
     8e0:	91 05       	cpc	r25, r1
     8e2:	09 f4       	brne	.+2      	; 0x8e6 <TickFct_startGame+0x22>
     8e4:	71 c0       	rjmp	.+226    	; 0x9c8 <TickFct_startGame+0x104>
     8e6:	89 2b       	or	r24, r25
     8e8:	09 f0       	breq	.+2      	; 0x8ec <TickFct_startGame+0x28>
     8ea:	90 c0       	rjmp	.+288    	; 0xa0c <TickFct_startGame+0x148>
     8ec:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <gameStart>
     8f0:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <reset>
     8f4:	80 e2       	ldi	r24, 0x20	; 32
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	fc 01       	movw	r30, r24
     8fa:	80 81       	ld	r24, Z
     8fc:	88 2f       	mov	r24, r24
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	88 70       	andi	r24, 0x08	; 8
     902:	99 27       	eor	r25, r25
     904:	89 2b       	or	r24, r25
     906:	d1 f4       	brne	.+52     	; 0x93c <TickFct_startGame+0x78>
     908:	81 e0       	ldi	r24, 0x01	; 1
     90a:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <gameStart>
     90e:	6f e0       	ldi	r22, 0x0F	; 15
     910:	71 e0       	ldi	r23, 0x01	; 1
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	6c dc       	rcall	.-1832   	; 0x1ee <LCD_DisplayString>
     916:	68 e1       	ldi	r22, 0x18	; 24
     918:	71 e0       	ldi	r23, 0x01	; 1
     91a:	81 e1       	ldi	r24, 0x11	; 17
     91c:	92 dc       	rcall	.-1756   	; 0x242 <LCD_DisplayStringNoClear>
     91e:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <msgDisplayed.2281>
     922:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <score>
     926:	82 e0       	ldi	r24, 0x02	; 2
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <next.2282+0x1>
     92e:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <next.2282>
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	9a 83       	std	Y+2, r25	; 0x02
     938:	89 83       	std	Y+1, r24	; 0x01
     93a:	63 c0       	rjmp	.+198    	; 0xa02 <TickFct_startGame+0x13e>
     93c:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <msgDisplayed.2281>
     940:	88 23       	and	r24, r24
     942:	09 f0       	breq	.+2      	; 0x946 <TickFct_startGame+0x82>
     944:	5e c0       	rjmp	.+188    	; 0xa02 <TickFct_startGame+0x13e>
     946:	d5 db       	rcall	.-2134   	; 0xf2 <LCD_ClearScreen>
     948:	64 e2       	ldi	r22, 0x24	; 36
     94a:	71 e0       	ldi	r23, 0x01	; 1
     94c:	81 e1       	ldi	r24, 0x11	; 17
     94e:	4f dc       	rcall	.-1890   	; 0x1ee <LCD_DisplayString>
     950:	63 e3       	ldi	r22, 0x33	; 51
     952:	71 e0       	ldi	r23, 0x01	; 1
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	75 dc       	rcall	.-1814   	; 0x242 <LCD_DisplayStringNoClear>
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	0e 94 4d 10 	call	0x209a	; 0x209a <eeprom_read_byte>
     960:	88 2f       	mov	r24, r24
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	29 2f       	mov	r18, r25
     966:	2f 93       	push	r18
     968:	8f 93       	push	r24
     96a:	80 e4       	ldi	r24, 0x40	; 64
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	89 2f       	mov	r24, r25
     970:	8f 93       	push	r24
     972:	80 e4       	ldi	r24, 0x40	; 64
     974:	91 e0       	ldi	r25, 0x01	; 1
     976:	8f 93       	push	r24
     978:	88 ea       	ldi	r24, 0xA8	; 168
     97a:	91 e0       	ldi	r25, 0x01	; 1
     97c:	89 2f       	mov	r24, r25
     97e:	8f 93       	push	r24
     980:	88 ea       	ldi	r24, 0xA8	; 168
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	8f 93       	push	r24
     986:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <sprintf>
     98a:	0f 90       	pop	r0
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	0f 90       	pop	r0
     992:	0f 90       	pop	r0
     994:	0f 90       	pop	r0
     996:	68 ea       	ldi	r22, 0xA8	; 168
     998:	71 e0       	ldi	r23, 0x01	; 1
     99a:	8d e0       	ldi	r24, 0x0D	; 13
     99c:	52 dc       	rcall	.-1884   	; 0x242 <LCD_DisplayStringNoClear>
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <msgDisplayed.2281>
     9a4:	2e c0       	rjmp	.+92     	; 0xa02 <TickFct_startGame+0x13e>
     9a6:	80 e2       	ldi	r24, 0x20	; 32
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	fc 01       	movw	r30, r24
     9ac:	80 81       	ld	r24, Z
     9ae:	88 2f       	mov	r24, r24
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	88 70       	andi	r24, 0x08	; 8
     9b4:	99 27       	eor	r25, r25
     9b6:	89 2b       	or	r24, r25
     9b8:	31 f1       	breq	.+76     	; 0xa06 <TickFct_startGame+0x142>
     9ba:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <next.2282>
     9be:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <next.2282+0x1>
     9c2:	9a 83       	std	Y+2, r25	; 0x02
     9c4:	89 83       	std	Y+1, r24	; 0x01
     9c6:	22 c0       	rjmp	.+68     	; 0xa0c <TickFct_startGame+0x148>
     9c8:	80 e2       	ldi	r24, 0x20	; 32
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	88 2f       	mov	r24, r24
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	88 70       	andi	r24, 0x08	; 8
     9d6:	99 27       	eor	r25, r25
     9d8:	89 2b       	or	r24, r25
     9da:	b9 f4       	brne	.+46     	; 0xa0a <TickFct_startGame+0x146>
     9dc:	8a db       	rcall	.-2284   	; 0xf2 <LCD_ClearScreen>
     9de:	63 e4       	ldi	r22, 0x43	; 67
     9e0:	71 e0       	ldi	r23, 0x01	; 1
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	04 dc       	rcall	.-2040   	; 0x1ee <LCD_DisplayString>
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <reset>
     9ec:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <gameStart>
     9f0:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <next.2282+0x1>
     9f4:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <next.2282>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	9a 83       	std	Y+2, r25	; 0x02
     9fe:	89 83       	std	Y+1, r24	; 0x01
     a00:	04 c0       	rjmp	.+8      	; 0xa0a <TickFct_startGame+0x146>
     a02:	00 00       	nop
     a04:	03 c0       	rjmp	.+6      	; 0xa0c <TickFct_startGame+0x148>
     a06:	00 00       	nop
     a08:	01 c0       	rjmp	.+2      	; 0xa0c <TickFct_startGame+0x148>
     a0a:	00 00       	nop
     a0c:	89 81       	ldd	r24, Y+1	; 0x01
     a0e:	9a 81       	ldd	r25, Y+2	; 0x02
     a10:	0f 90       	pop	r0
     a12:	0f 90       	pop	r0
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	08 95       	ret

00000a1a <TickFct_direction>:
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29
     a1e:	00 d0       	rcall	.+0      	; 0xa20 <TickFct_direction+0x6>
     a20:	cd b7       	in	r28, 0x3d	; 61
     a22:	de b7       	in	r29, 0x3e	; 62
     a24:	9a 83       	std	Y+2, r25	; 0x02
     a26:	89 83       	std	Y+1, r24	; 0x01
     a28:	89 81       	ldd	r24, Y+1	; 0x01
     a2a:	9a 81       	ldd	r25, Y+2	; 0x02
     a2c:	00 97       	sbiw	r24, 0x00	; 0
     a2e:	19 f0       	breq	.+6      	; 0xa36 <TickFct_direction+0x1c>
     a30:	01 97       	sbiw	r24, 0x01	; 1
     a32:	b9 f0       	breq	.+46     	; 0xa62 <TickFct_direction+0x48>
     a34:	c4 c0       	rjmp	.+392    	; 0xbbe <TickFct_direction+0x1a4>
     a36:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <gameStart>
     a3a:	88 23       	and	r24, r24
     a3c:	09 f4       	brne	.+2      	; 0xa40 <TickFct_direction+0x26>
     a3e:	bc c0       	rjmp	.+376    	; 0xbb8 <TickFct_direction+0x19e>
     a40:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <direction>
     a44:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <curDirection>
     a48:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <lr.2295+0x1>
     a4c:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <lr.2295>
     a50:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <ud.2296+0x1>
     a54:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <ud.2296>
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	9a 83       	std	Y+2, r25	; 0x02
     a5e:	89 83       	std	Y+1, r24	; 0x01
     a60:	ae c0       	rjmp	.+348    	; 0xbbe <TickFct_direction+0x1a4>
     a62:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <reset>
     a66:	88 23       	and	r24, r24
     a68:	19 f0       	breq	.+6      	; 0xa70 <TickFct_direction+0x56>
     a6a:	1a 82       	std	Y+2, r1	; 0x02
     a6c:	19 82       	std	Y+1, r1	; 0x01
     a6e:	a7 c0       	rjmp	.+334    	; 0xbbe <TickFct_direction+0x1a4>
     a70:	84 e0       	ldi	r24, 0x04	; 4
     a72:	c4 dc       	rcall	.-1656   	; 0x3fc <set_adc_pin>
     a74:	88 e7       	ldi	r24, 0x78	; 120
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	fc 01       	movw	r30, r24
     a7a:	80 81       	ld	r24, Z
     a7c:	91 81       	ldd	r25, Z+1	; 0x01
     a7e:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <lr.2295+0x1>
     a82:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <lr.2295>
     a86:	85 e0       	ldi	r24, 0x05	; 5
     a88:	b9 dc       	rcall	.-1678   	; 0x3fc <set_adc_pin>
     a8a:	88 e7       	ldi	r24, 0x78	; 120
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	fc 01       	movw	r30, r24
     a90:	80 81       	ld	r24, Z
     a92:	91 81       	ldd	r25, Z+1	; 0x01
     a94:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <ud.2296+0x1>
     a98:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <ud.2296>
     a9c:	8c e1       	ldi	r24, 0x1C	; 28
     a9e:	fa db       	rcall	.-2060   	; 0x294 <LCD_Cursor>
     aa0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     aa4:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     aa8:	84 3d       	cpi	r24, 0xD4	; 212
     aaa:	91 05       	cpc	r25, r1
     aac:	d0 f4       	brcc	.+52     	; 0xae2 <TickFct_direction+0xc8>
     aae:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     ab2:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     ab6:	92 50       	subi	r25, 0x02	; 2
     ab8:	81 30       	cpi	r24, 0x01	; 1
     aba:	9f 4f       	sbci	r25, 0xFF	; 255
     abc:	94 f0       	brlt	.+36     	; 0xae2 <TickFct_direction+0xc8>
     abe:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     ac2:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     ac6:	92 50       	subi	r25, 0x02	; 2
     ac8:	8f 3f       	cpi	r24, 0xFF	; 255
     aca:	91 05       	cpc	r25, r1
     acc:	09 f0       	breq	.+2      	; 0xad0 <TickFct_direction+0xb6>
     ace:	4c f4       	brge	.+18     	; 0xae2 <TickFct_direction+0xc8>
     ad0:	8c e6       	ldi	r24, 0x6C	; 108
     ad2:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <direction>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2297>
     adc:	81 e0       	ldi	r24, 0x01	; 1
     ade:	58 db       	rcall	.-2384   	; 0x190 <LCD_WriteData>
     ae0:	62 c0       	rjmp	.+196    	; 0xba6 <TickFct_direction+0x18c>
     ae2:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     ae6:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     aea:	8d 32       	cpi	r24, 0x2D	; 45
     aec:	93 40       	sbci	r25, 0x03	; 3
     aee:	d0 f0       	brcs	.+52     	; 0xb24 <TickFct_direction+0x10a>
     af0:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     af4:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     af8:	92 50       	subi	r25, 0x02	; 2
     afa:	81 30       	cpi	r24, 0x01	; 1
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	94 f0       	brlt	.+36     	; 0xb24 <TickFct_direction+0x10a>
     b00:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     b04:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     b08:	92 50       	subi	r25, 0x02	; 2
     b0a:	8f 3f       	cpi	r24, 0xFF	; 255
     b0c:	91 05       	cpc	r25, r1
     b0e:	09 f0       	breq	.+2      	; 0xb12 <TickFct_direction+0xf8>
     b10:	4c f4       	brge	.+18     	; 0xb24 <TickFct_direction+0x10a>
     b12:	82 e7       	ldi	r24, 0x72	; 114
     b14:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <direction>
     b18:	82 e0       	ldi	r24, 0x02	; 2
     b1a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2297>
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	37 db       	rcall	.-2450   	; 0x190 <LCD_WriteData>
     b22:	41 c0       	rjmp	.+130    	; 0xba6 <TickFct_direction+0x18c>
     b24:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     b28:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     b2c:	84 3d       	cpi	r24, 0xD4	; 212
     b2e:	91 05       	cpc	r25, r1
     b30:	d0 f4       	brcc	.+52     	; 0xb66 <TickFct_direction+0x14c>
     b32:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     b36:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     b3a:	92 50       	subi	r25, 0x02	; 2
     b3c:	81 30       	cpi	r24, 0x01	; 1
     b3e:	9f 4f       	sbci	r25, 0xFF	; 255
     b40:	94 f0       	brlt	.+36     	; 0xb66 <TickFct_direction+0x14c>
     b42:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     b46:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     b4a:	92 50       	subi	r25, 0x02	; 2
     b4c:	8f 3f       	cpi	r24, 0xFF	; 255
     b4e:	91 05       	cpc	r25, r1
     b50:	09 f0       	breq	.+2      	; 0xb54 <TickFct_direction+0x13a>
     b52:	4c f4       	brge	.+18     	; 0xb66 <TickFct_direction+0x14c>
     b54:	85 e7       	ldi	r24, 0x75	; 117
     b56:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <direction>
     b5a:	83 e0       	ldi	r24, 0x03	; 3
     b5c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2297>
     b60:	83 e0       	ldi	r24, 0x03	; 3
     b62:	16 db       	rcall	.-2516   	; 0x190 <LCD_WriteData>
     b64:	20 c0       	rjmp	.+64     	; 0xba6 <TickFct_direction+0x18c>
     b66:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <ud.2296>
     b6a:	90 91 ad 01 	lds	r25, 0x01AD	; 0x8001ad <ud.2296+0x1>
     b6e:	8d 32       	cpi	r24, 0x2D	; 45
     b70:	93 40       	sbci	r25, 0x03	; 3
     b72:	c8 f0       	brcs	.+50     	; 0xba6 <TickFct_direction+0x18c>
     b74:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     b78:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     b7c:	92 50       	subi	r25, 0x02	; 2
     b7e:	81 30       	cpi	r24, 0x01	; 1
     b80:	9f 4f       	sbci	r25, 0xFF	; 255
     b82:	8c f0       	brlt	.+34     	; 0xba6 <TickFct_direction+0x18c>
     b84:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <lr.2295>
     b88:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <lr.2295+0x1>
     b8c:	92 50       	subi	r25, 0x02	; 2
     b8e:	8f 3f       	cpi	r24, 0xFF	; 255
     b90:	91 05       	cpc	r25, r1
     b92:	09 f0       	breq	.+2      	; 0xb96 <TickFct_direction+0x17c>
     b94:	44 f4       	brge	.+16     	; 0xba6 <TickFct_direction+0x18c>
     b96:	84 e6       	ldi	r24, 0x64	; 100
     b98:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <direction>
     b9c:	84 e0       	ldi	r24, 0x04	; 4
     b9e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <imageNum.2297>
     ba2:	84 e0       	ldi	r24, 0x04	; 4
     ba4:	f5 da       	rcall	.-2582   	; 0x190 <LCD_WriteData>
     ba6:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <curDirection>
     baa:	88 23       	and	r24, r24
     bac:	39 f4       	brne	.+14     	; 0xbbc <TickFct_direction+0x1a2>
     bae:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
     bb2:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
     bb6:	02 c0       	rjmp	.+4      	; 0xbbc <TickFct_direction+0x1a2>
     bb8:	00 00       	nop
     bba:	01 c0       	rjmp	.+2      	; 0xbbe <TickFct_direction+0x1a4>
     bbc:	00 00       	nop
     bbe:	89 81       	ldd	r24, Y+1	; 0x01
     bc0:	9a 81       	ldd	r25, Y+2	; 0x02
     bc2:	0f 90       	pop	r0
     bc4:	0f 90       	pop	r0
     bc6:	df 91       	pop	r29
     bc8:	cf 91       	pop	r28
     bca:	08 95       	ret

00000bcc <setSnakeDirection>:
     bcc:	cf 93       	push	r28
     bce:	df 93       	push	r29
     bd0:	00 d0       	rcall	.+0      	; 0xbd2 <setSnakeDirection+0x6>
     bd2:	00 d0       	rcall	.+0      	; 0xbd4 <setSnakeDirection+0x8>
     bd4:	cd b7       	in	r28, 0x3d	; 61
     bd6:	de b7       	in	r29, 0x3e	; 62
     bd8:	9c 83       	std	Y+4, r25	; 0x04
     bda:	8b 83       	std	Y+3, r24	; 0x03
     bdc:	8b 81       	ldd	r24, Y+3	; 0x03
     bde:	9c 81       	ldd	r25, Y+4	; 0x04
     be0:	9a 83       	std	Y+2, r25	; 0x02
     be2:	89 83       	std	Y+1, r24	; 0x01
     be4:	24 c0       	rjmp	.+72     	; 0xc2e <setSnakeDirection+0x62>
     be6:	89 81       	ldd	r24, Y+1	; 0x01
     be8:	9a 81       	ldd	r25, Y+2	; 0x02
     bea:	fc 01       	movw	r30, r24
     bec:	82 81       	ldd	r24, Z+2	; 0x02
     bee:	93 81       	ldd	r25, Z+3	; 0x03
     bf0:	89 2b       	or	r24, r25
     bf2:	b1 f0       	breq	.+44     	; 0xc20 <setSnakeDirection+0x54>
     bf4:	89 81       	ldd	r24, Y+1	; 0x01
     bf6:	9a 81       	ldd	r25, Y+2	; 0x02
     bf8:	fc 01       	movw	r30, r24
     bfa:	82 81       	ldd	r24, Z+2	; 0x02
     bfc:	93 81       	ldd	r25, Z+3	; 0x03
     bfe:	fc 01       	movw	r30, r24
     c00:	20 81       	ld	r18, Z
     c02:	89 81       	ldd	r24, Y+1	; 0x01
     c04:	9a 81       	ldd	r25, Y+2	; 0x02
     c06:	fc 01       	movw	r30, r24
     c08:	20 83       	st	Z, r18
     c0a:	89 81       	ldd	r24, Y+1	; 0x01
     c0c:	9a 81       	ldd	r25, Y+2	; 0x02
     c0e:	fc 01       	movw	r30, r24
     c10:	82 81       	ldd	r24, Z+2	; 0x02
     c12:	93 81       	ldd	r25, Z+3	; 0x03
     c14:	fc 01       	movw	r30, r24
     c16:	21 81       	ldd	r18, Z+1	; 0x01
     c18:	89 81       	ldd	r24, Y+1	; 0x01
     c1a:	9a 81       	ldd	r25, Y+2	; 0x02
     c1c:	fc 01       	movw	r30, r24
     c1e:	21 83       	std	Z+1, r18	; 0x01
     c20:	89 81       	ldd	r24, Y+1	; 0x01
     c22:	9a 81       	ldd	r25, Y+2	; 0x02
     c24:	fc 01       	movw	r30, r24
     c26:	82 81       	ldd	r24, Z+2	; 0x02
     c28:	93 81       	ldd	r25, Z+3	; 0x03
     c2a:	9a 83       	std	Y+2, r25	; 0x02
     c2c:	89 83       	std	Y+1, r24	; 0x01
     c2e:	89 81       	ldd	r24, Y+1	; 0x01
     c30:	9a 81       	ldd	r25, Y+2	; 0x02
     c32:	fc 01       	movw	r30, r24
     c34:	82 81       	ldd	r24, Z+2	; 0x02
     c36:	93 81       	ldd	r25, Z+3	; 0x03
     c38:	89 2b       	or	r24, r25
     c3a:	a9 f6       	brne	.-86     	; 0xbe6 <setSnakeDirection+0x1a>
     c3c:	89 81       	ldd	r24, Y+1	; 0x01
     c3e:	9a 81       	ldd	r25, Y+2	; 0x02
     c40:	0f 90       	pop	r0
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	df 91       	pop	r29
     c4a:	cf 91       	pop	r28
     c4c:	08 95       	ret

00000c4e <moveSnake>:
     c4e:	cf 93       	push	r28
     c50:	df 93       	push	r29
     c52:	cd b7       	in	r28, 0x3d	; 61
     c54:	de b7       	in	r29, 0x3e	; 62
     c56:	2f 97       	sbiw	r28, 0x0f	; 15
     c58:	0f b6       	in	r0, 0x3f	; 63
     c5a:	f8 94       	cli
     c5c:	de bf       	out	0x3e, r29	; 62
     c5e:	0f be       	out	0x3f, r0	; 63
     c60:	cd bf       	out	0x3d, r28	; 61
     c62:	9d 87       	std	Y+13, r25	; 0x0d
     c64:	8c 87       	std	Y+12, r24	; 0x0c
     c66:	7f 87       	std	Y+15, r23	; 0x0f
     c68:	6e 87       	std	Y+14, r22	; 0x0e
     c6a:	19 82       	std	Y+1, r1	; 0x01
     c6c:	1a 82       	std	Y+2, r1	; 0x02
     c6e:	1b 82       	std	Y+3, r1	; 0x03
     c70:	19 82       	std	Y+1, r1	; 0x01
     c72:	1d c0       	rjmp	.+58     	; 0xcae <moveSnake+0x60>
     c74:	1a 82       	std	Y+2, r1	; 0x02
     c76:	15 c0       	rjmp	.+42     	; 0xca2 <moveSnake+0x54>
     c78:	89 81       	ldd	r24, Y+1	; 0x01
     c7a:	28 2f       	mov	r18, r24
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	8a 81       	ldd	r24, Y+2	; 0x02
     c80:	88 2f       	mov	r24, r24
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	22 0f       	add	r18, r18
     c86:	33 1f       	adc	r19, r19
     c88:	22 0f       	add	r18, r18
     c8a:	33 1f       	adc	r19, r19
     c8c:	22 0f       	add	r18, r18
     c8e:	33 1f       	adc	r19, r19
     c90:	82 0f       	add	r24, r18
     c92:	93 1f       	adc	r25, r19
     c94:	80 52       	subi	r24, 0x20	; 32
     c96:	9e 4f       	sbci	r25, 0xFE	; 254
     c98:	fc 01       	movw	r30, r24
     c9a:	10 82       	st	Z, r1
     c9c:	8a 81       	ldd	r24, Y+2	; 0x02
     c9e:	8f 5f       	subi	r24, 0xFF	; 255
     ca0:	8a 83       	std	Y+2, r24	; 0x02
     ca2:	8a 81       	ldd	r24, Y+2	; 0x02
     ca4:	88 30       	cpi	r24, 0x08	; 8
     ca6:	40 f3       	brcs	.-48     	; 0xc78 <moveSnake+0x2a>
     ca8:	89 81       	ldd	r24, Y+1	; 0x01
     caa:	8f 5f       	subi	r24, 0xFF	; 255
     cac:	89 83       	std	Y+1, r24	; 0x01
     cae:	89 81       	ldd	r24, Y+1	; 0x01
     cb0:	88 30       	cpi	r24, 0x08	; 8
     cb2:	00 f3       	brcs	.-64     	; 0xc74 <moveSnake+0x26>
     cb4:	8c 85       	ldd	r24, Y+12	; 0x0c
     cb6:	9d 85       	ldd	r25, Y+13	; 0x0d
     cb8:	9d 83       	std	Y+5, r25	; 0x05
     cba:	8c 83       	std	Y+4, r24	; 0x04
     cbc:	1e 82       	std	Y+6, r1	; 0x06
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	8f 83       	std	Y+7, r24	; 0x07
     cc2:	23 c0       	rjmp	.+70     	; 0xd0a <moveSnake+0xbc>
     cc4:	8c 81       	ldd	r24, Y+4	; 0x04
     cc6:	9d 81       	ldd	r25, Y+5	; 0x05
     cc8:	fc 01       	movw	r30, r24
     cca:	81 81       	ldd	r24, Z+1	; 0x01
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	8c 81       	ldd	r24, Y+4	; 0x04
     cd2:	9d 81       	ldd	r25, Y+5	; 0x05
     cd4:	fc 01       	movw	r30, r24
     cd6:	80 81       	ld	r24, Z
     cd8:	88 2f       	mov	r24, r24
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	22 0f       	add	r18, r18
     cde:	33 1f       	adc	r19, r19
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	22 0f       	add	r18, r18
     ce6:	33 1f       	adc	r19, r19
     ce8:	82 0f       	add	r24, r18
     cea:	93 1f       	adc	r25, r19
     cec:	80 52       	subi	r24, 0x20	; 32
     cee:	9e 4f       	sbci	r25, 0xFE	; 254
     cf0:	21 e0       	ldi	r18, 0x01	; 1
     cf2:	fc 01       	movw	r30, r24
     cf4:	20 83       	st	Z, r18
     cf6:	8c 81       	ldd	r24, Y+4	; 0x04
     cf8:	9d 81       	ldd	r25, Y+5	; 0x05
     cfa:	fc 01       	movw	r30, r24
     cfc:	82 81       	ldd	r24, Z+2	; 0x02
     cfe:	93 81       	ldd	r25, Z+3	; 0x03
     d00:	9d 83       	std	Y+5, r25	; 0x05
     d02:	8c 83       	std	Y+4, r24	; 0x04
     d04:	8b 81       	ldd	r24, Y+3	; 0x03
     d06:	8f 5f       	subi	r24, 0xFF	; 255
     d08:	8b 83       	std	Y+3, r24	; 0x03
     d0a:	8c 81       	ldd	r24, Y+4	; 0x04
     d0c:	9d 81       	ldd	r25, Y+5	; 0x05
     d0e:	89 2b       	or	r24, r25
     d10:	c9 f6       	brne	.-78     	; 0xcc4 <moveSnake+0x76>
     d12:	8e 85       	ldd	r24, Y+14	; 0x0e
     d14:	9f 85       	ldd	r25, Y+15	; 0x0f
     d16:	fc 01       	movw	r30, r24
     d18:	20 81       	ld	r18, Z
     d1a:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     d1e:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     d22:	fc 01       	movw	r30, r24
     d24:	80 81       	ld	r24, Z
     d26:	28 17       	cp	r18, r24
     d28:	09 f0       	breq	.+2      	; 0xd2c <moveSnake+0xde>
     d2a:	81 c0       	rjmp	.+258    	; 0xe2e <moveSnake+0x1e0>
     d2c:	8e 85       	ldd	r24, Y+14	; 0x0e
     d2e:	9f 85       	ldd	r25, Y+15	; 0x0f
     d30:	fc 01       	movw	r30, r24
     d32:	21 81       	ldd	r18, Z+1	; 0x01
     d34:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     d38:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     d3c:	fc 01       	movw	r30, r24
     d3e:	81 81       	ldd	r24, Z+1	; 0x01
     d40:	28 17       	cp	r18, r24
     d42:	09 f0       	breq	.+2      	; 0xd46 <moveSnake+0xf8>
     d44:	74 c0       	rjmp	.+232    	; 0xe2e <moveSnake+0x1e0>
     d46:	84 e0       	ldi	r24, 0x04	; 4
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	56 d5       	rcall	.+2732   	; 0x17f8 <malloc>
     d4c:	99 87       	std	Y+9, r25	; 0x09
     d4e:	88 87       	std	Y+8, r24	; 0x08
     d50:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     d54:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     d58:	fc 01       	movw	r30, r24
     d5a:	20 81       	ld	r18, Z
     d5c:	88 85       	ldd	r24, Y+8	; 0x08
     d5e:	99 85       	ldd	r25, Y+9	; 0x09
     d60:	fc 01       	movw	r30, r24
     d62:	20 83       	st	Z, r18
     d64:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     d68:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     d6c:	fc 01       	movw	r30, r24
     d6e:	21 81       	ldd	r18, Z+1	; 0x01
     d70:	88 85       	ldd	r24, Y+8	; 0x08
     d72:	99 85       	ldd	r25, Y+9	; 0x09
     d74:	fc 01       	movw	r30, r24
     d76:	21 83       	std	Z+1, r18	; 0x01
     d78:	88 85       	ldd	r24, Y+8	; 0x08
     d7a:	99 85       	ldd	r25, Y+9	; 0x09
     d7c:	fc 01       	movw	r30, r24
     d7e:	13 82       	std	Z+3, r1	; 0x03
     d80:	12 82       	std	Z+2, r1	; 0x02
     d82:	8e 85       	ldd	r24, Y+14	; 0x0e
     d84:	9f 85       	ldd	r25, Y+15	; 0x0f
     d86:	28 85       	ldd	r18, Y+8	; 0x08
     d88:	39 85       	ldd	r19, Y+9	; 0x09
     d8a:	fc 01       	movw	r30, r24
     d8c:	33 83       	std	Z+3, r19	; 0x03
     d8e:	22 83       	std	Z+2, r18	; 0x02
     d90:	8e 85       	ldd	r24, Y+14	; 0x0e
     d92:	9f 85       	ldd	r25, Y+15	; 0x0f
     d94:	fc 01       	movw	r30, r24
     d96:	82 81       	ldd	r24, Z+2	; 0x02
     d98:	93 81       	ldd	r25, Z+3	; 0x03
     d9a:	9f 87       	std	Y+15, r25	; 0x0f
     d9c:	8e 87       	std	Y+14, r24	; 0x0e
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <eaten>
     da4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score>
     da8:	8f 5f       	subi	r24, 0xFF	; 255
     daa:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score>
     dae:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score>
     db2:	88 2f       	mov	r24, r24
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	29 2f       	mov	r18, r25
     db8:	2f 93       	push	r18
     dba:	8f 93       	push	r24
     dbc:	80 e4       	ldi	r24, 0x40	; 64
     dbe:	91 e0       	ldi	r25, 0x01	; 1
     dc0:	89 2f       	mov	r24, r25
     dc2:	8f 93       	push	r24
     dc4:	80 e4       	ldi	r24, 0x40	; 64
     dc6:	91 e0       	ldi	r25, 0x01	; 1
     dc8:	8f 93       	push	r24
     dca:	ce 01       	movw	r24, r28
     dcc:	0a 96       	adiw	r24, 0x0a	; 10
     dce:	29 2f       	mov	r18, r25
     dd0:	2f 93       	push	r18
     dd2:	8f 93       	push	r24
     dd4:	87 d6       	rcall	.+3342   	; 0x1ae4 <sprintf>
     dd6:	0f 90       	pop	r0
     dd8:	0f 90       	pop	r0
     dda:	0f 90       	pop	r0
     ddc:	0f 90       	pop	r0
     dde:	0f 90       	pop	r0
     de0:	0f 90       	pop	r0
     de2:	ce 01       	movw	r24, r28
     de4:	0a 96       	adiw	r24, 0x0a	; 10
     de6:	bc 01       	movw	r22, r24
     de8:	88 e0       	ldi	r24, 0x08	; 8
     dea:	2b da       	rcall	.-2986   	; 0x242 <LCD_DisplayStringNoClear>
     dec:	80 e0       	ldi	r24, 0x00	; 0
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 4d 10 	call	0x209a	; 0x209a <eeprom_read_byte>
     df4:	98 2f       	mov	r25, r24
     df6:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score>
     dfa:	98 17       	cp	r25, r24
     dfc:	38 f4       	brcc	.+14     	; 0xe0c <moveSnake+0x1be>
     dfe:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score>
     e02:	68 2f       	mov	r22, r24
     e04:	80 e0       	ldi	r24, 0x00	; 0
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	0e 94 55 10 	call	0x20aa	; 0x20aa <eeprom_write_byte>
     e0c:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score>
     e10:	8f 33       	cpi	r24, 0x3F	; 63
     e12:	69 f4       	brne	.+26     	; 0xe2e <moveSnake+0x1e0>
     e14:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <score>
     e18:	6d e4       	ldi	r22, 0x4D	; 77
     e1a:	71 e0       	ldi	r23, 0x01	; 1
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	e7 d9       	rcall	.-3122   	; 0x1ee <LCD_DisplayString>
     e20:	65 e5       	ldi	r22, 0x55	; 85
     e22:	71 e0       	ldi	r23, 0x01	; 1
     e24:	81 e1       	ldi	r24, 0x11	; 17
     e26:	0d da       	rcall	.-3046   	; 0x242 <LCD_DisplayStringNoClear>
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <gameOver>
     e2e:	8f 81       	ldd	r24, Y+7	; 0x07
     e30:	28 2f       	mov	r18, r24
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	8e 81       	ldd	r24, Y+6	; 0x06
     e36:	88 2f       	mov	r24, r24
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	40 ee       	ldi	r20, 0xE0	; 224
     e3c:	51 e0       	ldi	r21, 0x01	; 1
     e3e:	b9 01       	movw	r22, r18
     e40:	0a d0       	rcall	.+20     	; 0xe56 <generateFood>
     e42:	00 00       	nop
     e44:	2f 96       	adiw	r28, 0x0f	; 15
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	f8 94       	cli
     e4a:	de bf       	out	0x3e, r29	; 62
     e4c:	0f be       	out	0x3f, r0	; 63
     e4e:	cd bf       	out	0x3d, r28	; 61
     e50:	df 91       	pop	r29
     e52:	cf 91       	pop	r28
     e54:	08 95       	ret

00000e56 <generateFood>:
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	cd b7       	in	r28, 0x3d	; 61
     e5c:	de b7       	in	r29, 0x3e	; 62
     e5e:	27 97       	sbiw	r28, 0x07	; 7
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	8c 83       	std	Y+4, r24	; 0x04
     e6c:	6d 83       	std	Y+5, r22	; 0x05
     e6e:	5f 83       	std	Y+7, r21	; 0x07
     e70:	4e 83       	std	Y+6, r20	; 0x06
     e72:	19 82       	std	Y+1, r1	; 0x01
     e74:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <eaten>
     e78:	88 23       	and	r24, r24
     e7a:	09 f0       	breq	.+2      	; 0xe7e <generateFood+0x28>
     e7c:	61 c0       	rjmp	.+194    	; 0xf40 <generateFood+0xea>
     e7e:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     e82:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     e86:	fc 01       	movw	r30, r24
     e88:	81 81       	ldd	r24, Z+1	; 0x01
     e8a:	88 2f       	mov	r24, r24
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	88 0f       	add	r24, r24
     e90:	99 1f       	adc	r25, r25
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	88 0f       	add	r24, r24
     e98:	99 1f       	adc	r25, r25
     e9a:	2e 81       	ldd	r18, Y+6	; 0x06
     e9c:	3f 81       	ldd	r19, Y+7	; 0x07
     e9e:	28 0f       	add	r18, r24
     ea0:	39 1f       	adc	r19, r25
     ea2:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     ea6:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     eaa:	fc 01       	movw	r30, r24
     eac:	80 81       	ld	r24, Z
     eae:	88 2f       	mov	r24, r24
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	82 0f       	add	r24, r18
     eb4:	93 1f       	adc	r25, r19
     eb6:	21 e0       	ldi	r18, 0x01	; 1
     eb8:	fc 01       	movw	r30, r24
     eba:	20 83       	st	Z, r18
     ebc:	19 82       	std	Y+1, r1	; 0x01
     ebe:	26 c0       	rjmp	.+76     	; 0xf0c <generateFood+0xb6>
     ec0:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <j.2352>
     ec4:	88 2f       	mov	r24, r24
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	88 0f       	add	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	88 0f       	add	r24, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	88 0f       	add	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	2e 81       	ldd	r18, Y+6	; 0x06
     ed6:	3f 81       	ldd	r19, Y+7	; 0x07
     ed8:	28 0f       	add	r18, r24
     eda:	39 1f       	adc	r19, r25
     edc:	89 81       	ldd	r24, Y+1	; 0x01
     ede:	88 2f       	mov	r24, r24
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	82 0f       	add	r24, r18
     ee4:	93 1f       	adc	r25, r19
     ee6:	fc 01       	movw	r30, r24
     ee8:	80 81       	ld	r24, Z
     eea:	81 30       	cpi	r24, 0x01	; 1
     eec:	61 f4       	brne	.+24     	; 0xf06 <generateFood+0xb0>
     eee:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <j.2352>
     ef2:	41 e0       	ldi	r20, 0x01	; 1
     ef4:	68 2f       	mov	r22, r24
     ef6:	8c 81       	ldd	r24, Y+4	; 0x04
     ef8:	42 da       	rcall	.-2940   	; 0x37e <SetBit>
     efa:	8c 83       	std	Y+4, r24	; 0x04
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	69 81       	ldd	r22, Y+1	; 0x01
     f00:	8d 81       	ldd	r24, Y+5	; 0x05
     f02:	3d da       	rcall	.-2950   	; 0x37e <SetBit>
     f04:	8d 83       	std	Y+5, r24	; 0x05
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	8f 5f       	subi	r24, 0xFF	; 255
     f0a:	89 83       	std	Y+1, r24	; 0x01
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	88 30       	cpi	r24, 0x08	; 8
     f10:	b8 f2       	brcs	.-82     	; 0xec0 <generateFood+0x6a>
     f12:	88 e2       	ldi	r24, 0x28	; 40
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	2c 81       	ldd	r18, Y+4	; 0x04
     f18:	fc 01       	movw	r30, r24
     f1a:	20 83       	st	Z, r18
     f1c:	85 e2       	ldi	r24, 0x25	; 37
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	2d 81       	ldd	r18, Y+5	; 0x05
     f22:	fc 01       	movw	r30, r24
     f24:	20 83       	st	Z, r18
     f26:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <j.2352>
     f2a:	8f 5f       	subi	r24, 0xFF	; 255
     f2c:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <j.2352>
     f30:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <j.2352>
     f34:	88 30       	cpi	r24, 0x08	; 8
     f36:	09 f0       	breq	.+2      	; 0xf3a <generateFood+0xe4>
     f38:	67 c0       	rjmp	.+206    	; 0x1008 <generateFood+0x1b2>
     f3a:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <j.2352>
     f3e:	64 c0       	rjmp	.+200    	; 0x1008 <generateFood+0x1b2>
     f40:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <eaten>
     f44:	c1 d5       	rcall	.+2946   	; 0x1ac8 <rand>
     f46:	87 70       	andi	r24, 0x07	; 7
     f48:	90 78       	andi	r25, 0x80	; 128
     f4a:	99 23       	and	r25, r25
     f4c:	24 f4       	brge	.+8      	; 0xf56 <generateFood+0x100>
     f4e:	01 97       	sbiw	r24, 0x01	; 1
     f50:	88 6f       	ori	r24, 0xF8	; 248
     f52:	9f 6f       	ori	r25, 0xFF	; 255
     f54:	01 96       	adiw	r24, 0x01	; 1
     f56:	8a 83       	std	Y+2, r24	; 0x02
     f58:	b7 d5       	rcall	.+2926   	; 0x1ac8 <rand>
     f5a:	87 70       	andi	r24, 0x07	; 7
     f5c:	90 78       	andi	r25, 0x80	; 128
     f5e:	99 23       	and	r25, r25
     f60:	24 f4       	brge	.+8      	; 0xf6a <generateFood+0x114>
     f62:	01 97       	sbiw	r24, 0x01	; 1
     f64:	88 6f       	ori	r24, 0xF8	; 248
     f66:	9f 6f       	ori	r25, 0xFF	; 255
     f68:	01 96       	adiw	r24, 0x01	; 1
     f6a:	8b 83       	std	Y+3, r24	; 0x03
     f6c:	14 c0       	rjmp	.+40     	; 0xf96 <generateFood+0x140>
     f6e:	ac d5       	rcall	.+2904   	; 0x1ac8 <rand>
     f70:	87 70       	andi	r24, 0x07	; 7
     f72:	90 78       	andi	r25, 0x80	; 128
     f74:	99 23       	and	r25, r25
     f76:	24 f4       	brge	.+8      	; 0xf80 <generateFood+0x12a>
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	88 6f       	ori	r24, 0xF8	; 248
     f7c:	9f 6f       	ori	r25, 0xFF	; 255
     f7e:	01 96       	adiw	r24, 0x01	; 1
     f80:	8a 83       	std	Y+2, r24	; 0x02
     f82:	a2 d5       	rcall	.+2884   	; 0x1ac8 <rand>
     f84:	87 70       	andi	r24, 0x07	; 7
     f86:	90 78       	andi	r25, 0x80	; 128
     f88:	99 23       	and	r25, r25
     f8a:	24 f4       	brge	.+8      	; 0xf94 <generateFood+0x13e>
     f8c:	01 97       	sbiw	r24, 0x01	; 1
     f8e:	88 6f       	ori	r24, 0xF8	; 248
     f90:	9f 6f       	ori	r25, 0xFF	; 255
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	8b 83       	std	Y+3, r24	; 0x03
     f96:	8b 81       	ldd	r24, Y+3	; 0x03
     f98:	88 2f       	mov	r24, r24
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	88 0f       	add	r24, r24
     fa6:	99 1f       	adc	r25, r25
     fa8:	2e 81       	ldd	r18, Y+6	; 0x06
     faa:	3f 81       	ldd	r19, Y+7	; 0x07
     fac:	28 0f       	add	r18, r24
     fae:	39 1f       	adc	r19, r25
     fb0:	8a 81       	ldd	r24, Y+2	; 0x02
     fb2:	88 2f       	mov	r24, r24
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	82 0f       	add	r24, r18
     fb8:	93 1f       	adc	r25, r19
     fba:	fc 01       	movw	r30, r24
     fbc:	80 81       	ld	r24, Z
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	b1 f2       	breq	.-84     	; 0xf6e <generateFood+0x118>
     fc2:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     fc6:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     fca:	2a 81       	ldd	r18, Y+2	; 0x02
     fcc:	fc 01       	movw	r30, r24
     fce:	20 83       	st	Z, r18
     fd0:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
     fd4:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
     fd8:	2b 81       	ldd	r18, Y+3	; 0x03
     fda:	fc 01       	movw	r30, r24
     fdc:	21 83       	std	Z+1, r18	; 0x01
     fde:	41 e0       	ldi	r20, 0x01	; 1
     fe0:	6b 81       	ldd	r22, Y+3	; 0x03
     fe2:	8c 81       	ldd	r24, Y+4	; 0x04
     fe4:	cc d9       	rcall	.-3176   	; 0x37e <SetBit>
     fe6:	8c 83       	std	Y+4, r24	; 0x04
     fe8:	40 e0       	ldi	r20, 0x00	; 0
     fea:	6a 81       	ldd	r22, Y+2	; 0x02
     fec:	8d 81       	ldd	r24, Y+5	; 0x05
     fee:	c7 d9       	rcall	.-3186   	; 0x37e <SetBit>
     ff0:	8d 83       	std	Y+5, r24	; 0x05
     ff2:	88 e2       	ldi	r24, 0x28	; 40
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	2c 81       	ldd	r18, Y+4	; 0x04
     ff8:	fc 01       	movw	r30, r24
     ffa:	20 83       	st	Z, r18
     ffc:	85 e2       	ldi	r24, 0x25	; 37
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	2d 81       	ldd	r18, Y+5	; 0x05
    1002:	fc 01       	movw	r30, r24
    1004:	20 83       	st	Z, r18
    1006:	01 c0       	rjmp	.+2      	; 0x100a <generateFood+0x1b4>
    1008:	00 00       	nop
    100a:	27 96       	adiw	r28, 0x07	; 7
    100c:	0f b6       	in	r0, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	cd bf       	out	0x3d, r28	; 61
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	08 95       	ret

0000101c <TickFct_game>:


enum gameSM{game_start, game_running, game_gameOver};
int TickFct_game(int state)
{
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	cd b7       	in	r28, 0x3d	; 61
    1026:	de b7       	in	r29, 0x3e	; 62
    1028:	2e 97       	sbiw	r28, 0x0e	; 14
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
    1034:	9e 87       	std	Y+14, r25	; 0x0e
    1036:	8d 87       	std	Y+13, r24	; 0x0d
	static unsigned char msgDisplayed2 = 0;
	unsigned char column_val = 0x00; // sets the pattern displayed on columns
    1038:	1f 82       	std	Y+7, r1	; 0x07
	unsigned char column_sel = 0xFF; // grounds column to display pattern, 
    103a:	8f ef       	ldi	r24, 0xFF	; 255
    103c:	88 87       	std	Y+8, r24	; 0x08
	unsigned char i = 0;
    103e:	19 82       	std	Y+1, r1	; 0x01
	unsigned char j = 0;
    1040:	1a 82       	std	Y+2, r1	; 0x02
	for(i = 0; i < 8; ++i)
    1042:	19 82       	std	Y+1, r1	; 0x01
    1044:	1d c0       	rjmp	.+58     	; 0x1080 <TickFct_game+0x64>
	{
		for(j = 0; j < 8; ++j)
    1046:	1a 82       	std	Y+2, r1	; 0x02
    1048:	15 c0       	rjmp	.+42     	; 0x1074 <TickFct_game+0x58>
		{
			coordinates[i][j] = 0;
    104a:	89 81       	ldd	r24, Y+1	; 0x01
    104c:	28 2f       	mov	r18, r24
    104e:	30 e0       	ldi	r19, 0x00	; 0
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	88 2f       	mov	r24, r24
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	22 0f       	add	r18, r18
    1058:	33 1f       	adc	r19, r19
    105a:	22 0f       	add	r18, r18
    105c:	33 1f       	adc	r19, r19
    105e:	22 0f       	add	r18, r18
    1060:	33 1f       	adc	r19, r19
    1062:	82 0f       	add	r24, r18
    1064:	93 1f       	adc	r25, r19
    1066:	80 52       	subi	r24, 0x20	; 32
    1068:	9e 4f       	sbci	r25, 0xFE	; 254
    106a:	fc 01       	movw	r30, r24
    106c:	10 82       	st	Z, r1
	unsigned char column_sel = 0xFF; // grounds column to display pattern, 
	unsigned char i = 0;
	unsigned char j = 0;
	for(i = 0; i < 8; ++i)
	{
		for(j = 0; j < 8; ++j)
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	8f 5f       	subi	r24, 0xFF	; 255
    1072:	8a 83       	std	Y+2, r24	; 0x02
    1074:	8a 81       	ldd	r24, Y+2	; 0x02
    1076:	88 30       	cpi	r24, 0x08	; 8
    1078:	40 f3       	brcs	.-48     	; 0x104a <TickFct_game+0x2e>
	static unsigned char msgDisplayed2 = 0;
	unsigned char column_val = 0x00; // sets the pattern displayed on columns
	unsigned char column_sel = 0xFF; // grounds column to display pattern, 
	unsigned char i = 0;
	unsigned char j = 0;
	for(i = 0; i < 8; ++i)
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	8f 5f       	subi	r24, 0xFF	; 255
    107e:	89 83       	std	Y+1, r24	; 0x01
    1080:	89 81       	ldd	r24, Y+1	; 0x01
    1082:	88 30       	cpi	r24, 0x08	; 8
    1084:	00 f3       	brcs	.-64     	; 0x1046 <TickFct_game+0x2a>
		for(j = 0; j < 8; ++j)
		{
			coordinates[i][j] = 0;
		}
	}
	switch(state)
    1086:	8d 85       	ldd	r24, Y+13	; 0x0d
    1088:	9e 85       	ldd	r25, Y+14	; 0x0e
    108a:	81 30       	cpi	r24, 0x01	; 1
    108c:	91 05       	cpc	r25, r1
    108e:	09 f4       	brne	.+2      	; 0x1092 <TickFct_game+0x76>
    1090:	7e c0       	rjmp	.+252    	; 0x118e <TickFct_game+0x172>
    1092:	82 30       	cpi	r24, 0x02	; 2
    1094:	91 05       	cpc	r25, r1
    1096:	09 f4       	brne	.+2      	; 0x109a <TickFct_game+0x7e>
    1098:	d1 c1       	rjmp	.+930    	; 0x143c <TickFct_game+0x420>
    109a:	89 2b       	or	r24, r25
    109c:	09 f0       	breq	.+2      	; 0x10a0 <TickFct_game+0x84>
    109e:	1f c2       	rjmp	.+1086   	; 0x14de <TickFct_game+0x4c2>
	{
		case game_start:
			if(!gameStart)
    10a0:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <gameStart>
    10a4:	88 23       	and	r24, r24
    10a6:	09 f4       	brne	.+2      	; 0x10aa <TickFct_game+0x8e>
    10a8:	13 c2       	rjmp	.+1062   	; 0x14d0 <TickFct_game+0x4b4>
			{
				break;
			}
			crashed = 0;
    10aa:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <crashed>
			mySnake = malloc(sizeof(struct snake));
    10ae:	84 e0       	ldi	r24, 0x04	; 4
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	a2 d3       	rcall	.+1860   	; 0x17f8 <malloc>
    10b4:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <mySnake+0x1>
    10b8:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <mySnake>
			mySnake->x = 5;
    10bc:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    10c0:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    10c4:	25 e0       	ldi	r18, 0x05	; 5
    10c6:	fc 01       	movw	r30, r24
    10c8:	20 83       	st	Z, r18
			mySnake->y = 3;
    10ca:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    10ce:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    10d2:	23 e0       	ldi	r18, 0x03	; 3
    10d4:	fc 01       	movw	r30, r24
    10d6:	21 83       	std	Z+1, r18	; 0x01
			mySnake->next = NULL;
    10d8:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    10dc:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    10e0:	fc 01       	movw	r30, r24
    10e2:	13 82       	std	Z+3, r1	; 0x03
    10e4:	12 82       	std	Z+2, r1	; 0x02
			head = mySnake;
    10e6:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    10ea:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    10ee:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <head+0x1>
    10f2:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <head>
			snakeFood = malloc(sizeof(struct food));
    10f6:	82 e0       	ldi	r24, 0x02	; 2
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	7e d3       	rcall	.+1788   	; 0x17f8 <malloc>
    10fc:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <snakeFood+0x1>
    1100:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <snakeFood>
			snakeFood->x = 2;
    1104:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
    1108:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
    110c:	22 e0       	ldi	r18, 0x02	; 2
    110e:	fc 01       	movw	r30, r24
    1110:	20 83       	st	Z, r18
			snakeFood->y = 3;
    1112:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
    1116:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
    111a:	23 e0       	ldi	r18, 0x03	; 3
    111c:	fc 01       	movw	r30, r24
    111e:	21 83       	std	Z+1, r18	; 0x01
			column_val = SetBit(column_val, mySnake->y,1); //y
    1120:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    1124:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    1128:	fc 01       	movw	r30, r24
    112a:	81 81       	ldd	r24, Z+1	; 0x01
    112c:	41 e0       	ldi	r20, 0x01	; 1
    112e:	68 2f       	mov	r22, r24
    1130:	8f 81       	ldd	r24, Y+7	; 0x07
    1132:	25 d9       	rcall	.-3510   	; 0x37e <SetBit>
    1134:	8f 83       	std	Y+7, r24	; 0x07
			column_sel = SetBit(column_sel, mySnake->x, 0); //x
    1136:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    113a:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    113e:	fc 01       	movw	r30, r24
    1140:	80 81       	ld	r24, Z
    1142:	40 e0       	ldi	r20, 0x00	; 0
    1144:	68 2f       	mov	r22, r24
    1146:	88 85       	ldd	r24, Y+8	; 0x08
    1148:	1a d9       	rcall	.-3532   	; 0x37e <SetBit>
    114a:	88 87       	std	Y+8, r24	; 0x08
			PORTC = SetBit(column_val, snakeFood->y,1); //y
    114c:	08 e2       	ldi	r16, 0x28	; 40
    114e:	10 e0       	ldi	r17, 0x00	; 0
    1150:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
    1154:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
    1158:	fc 01       	movw	r30, r24
    115a:	81 81       	ldd	r24, Z+1	; 0x01
    115c:	41 e0       	ldi	r20, 0x01	; 1
    115e:	68 2f       	mov	r22, r24
    1160:	8f 81       	ldd	r24, Y+7	; 0x07
    1162:	0d d9       	rcall	.-3558   	; 0x37e <SetBit>
    1164:	f8 01       	movw	r30, r16
    1166:	80 83       	st	Z, r24
			PORTB = SetBit(column_sel, snakeFood->x, 0); //x
    1168:	05 e2       	ldi	r16, 0x25	; 37
    116a:	10 e0       	ldi	r17, 0x00	; 0
    116c:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <snakeFood>
    1170:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <snakeFood+0x1>
    1174:	fc 01       	movw	r30, r24
    1176:	80 81       	ld	r24, Z
    1178:	40 e0       	ldi	r20, 0x00	; 0
    117a:	68 2f       	mov	r22, r24
    117c:	88 85       	ldd	r24, Y+8	; 0x08
    117e:	ff d8       	rcall	.-3586   	; 0x37e <SetBit>
    1180:	f8 01       	movw	r30, r16
    1182:	80 83       	st	Z, r24
			state = game_running;
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	9e 87       	std	Y+14, r25	; 0x0e
    118a:	8d 87       	std	Y+13, r24	; 0x0d
			break;
    118c:	a8 c1       	rjmp	.+848    	; 0x14de <TickFct_game+0x4c2>
		
		case game_running:	
			if(gameOver)
    118e:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <gameOver>
    1192:	88 23       	and	r24, r24
    1194:	21 f0       	breq	.+8      	; 0x119e <TickFct_game+0x182>
			{
				state = game_gameOver;
    1196:	82 e0       	ldi	r24, 0x02	; 2
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	9e 87       	std	Y+14, r25	; 0x0e
    119c:	8d 87       	std	Y+13, r24	; 0x0d
			}			
			if(reset)
    119e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <reset>
    11a2:	88 23       	and	r24, r24
    11a4:	89 f1       	breq	.+98     	; 0x1208 <TickFct_game+0x1ec>
			{
				struct snake* tempCur = mySnake;
    11a6:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    11aa:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    11ae:	9c 83       	std	Y+4, r25	; 0x04
    11b0:	8b 83       	std	Y+3, r24	; 0x03
				struct snake* tempNext = tempCur->next;
    11b2:	8b 81       	ldd	r24, Y+3	; 0x03
    11b4:	9c 81       	ldd	r25, Y+4	; 0x04
    11b6:	fc 01       	movw	r30, r24
    11b8:	82 81       	ldd	r24, Z+2	; 0x02
    11ba:	93 81       	ldd	r25, Z+3	; 0x03
    11bc:	9a 87       	std	Y+10, r25	; 0x0a
    11be:	89 87       	std	Y+9, r24	; 0x09
				while(tempCur != NULL)
    11c0:	0e c0       	rjmp	.+28     	; 0x11de <TickFct_game+0x1c2>
				{
					tempNext = tempCur->next;
    11c2:	8b 81       	ldd	r24, Y+3	; 0x03
    11c4:	9c 81       	ldd	r25, Y+4	; 0x04
    11c6:	fc 01       	movw	r30, r24
    11c8:	82 81       	ldd	r24, Z+2	; 0x02
    11ca:	93 81       	ldd	r25, Z+3	; 0x03
    11cc:	9a 87       	std	Y+10, r25	; 0x0a
					free(tempCur);
    11ce:	89 87       	std	Y+9, r24	; 0x09
    11d0:	8b 81       	ldd	r24, Y+3	; 0x03
    11d2:	9c 81       	ldd	r25, Y+4	; 0x04
    11d4:	a9 d3       	rcall	.+1874   	; 0x1928 <free>
					tempCur = tempNext;
    11d6:	89 85       	ldd	r24, Y+9	; 0x09
    11d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11da:	9c 83       	std	Y+4, r25	; 0x04
    11dc:	8b 83       	std	Y+3, r24	; 0x03
			}			
			if(reset)
			{
				struct snake* tempCur = mySnake;
				struct snake* tempNext = tempCur->next;
				while(tempCur != NULL)
    11de:	8b 81       	ldd	r24, Y+3	; 0x03
    11e0:	9c 81       	ldd	r25, Y+4	; 0x04
    11e2:	89 2b       	or	r24, r25
    11e4:	71 f7       	brne	.-36     	; 0x11c2 <TickFct_game+0x1a6>
				{
					tempNext = tempCur->next;
					free(tempCur);
					tempCur = tempNext;
				}
				mySnake = NULL;
    11e6:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <mySnake+0x1>
    11ea:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <mySnake>
				state = game_start;
    11ee:	1e 86       	std	Y+14, r1	; 0x0e
    11f0:	1d 86       	std	Y+13, r1	; 0x0d
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
    11f2:	88 e2       	ldi	r24, 0x28	; 40
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	2f ef       	ldi	r18, 0xFF	; 255
    11f8:	fc 01       	movw	r30, r24
    11fa:	20 83       	st	Z, r18
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
    11fc:	85 e2       	ldi	r24, 0x25	; 37
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	2f ef       	ldi	r18, 0xFF	; 255
    1202:	fc 01       	movw	r30, r24
    1204:	20 83       	st	Z, r18
				break;
    1206:	6b c1       	rjmp	.+726    	; 0x14de <TickFct_game+0x4c2>
			}
			if(!direction)
    1208:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    120c:	88 23       	and	r24, r24
    120e:	09 f4       	brne	.+2      	; 0x1212 <TickFct_game+0x1f6>
			break;
			
			head = setSnakeDirection(mySnake);
    1210:	61 c1       	rjmp	.+706    	; 0x14d4 <TickFct_game+0x4b8>
    1212:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    1216:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    121a:	d8 dc       	rcall	.-1616   	; 0xbcc <setSnakeDirection>
    121c:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <head+0x1>
    1220:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <head>
			if(curDirection == 'l') //  cases makes sure you can't do a 180 turn 
    1224:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <curDirection>
    1228:	8c 36       	cpi	r24, 0x6C	; 108
    122a:	c1 f5       	brne	.+112    	; 0x129c <TickFct_game+0x280>
			{
				if(direction == 'u')
    122c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    1230:	85 37       	cpi	r24, 0x75	; 117
    1232:	89 f4       	brne	.+34     	; 0x1256 <TickFct_game+0x23a>
				{
					curDirection = 'u';
    1234:	85 e7       	ldi	r24, 0x75	; 117
    1236:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->y -= 1;
    123a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    123e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    1242:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1246:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    124a:	f9 01       	movw	r30, r18
    124c:	21 81       	ldd	r18, Z+1	; 0x01
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	fc 01       	movw	r30, r24
    1252:	21 83       	std	Z+1, r18	; 0x01
    1254:	d6 c0       	rjmp	.+428    	; 0x1402 <TickFct_game+0x3e6>
				}
				else if(direction == 'd')
    1256:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    125a:	84 36       	cpi	r24, 0x64	; 100
    125c:	89 f4       	brne	.+34     	; 0x1280 <TickFct_game+0x264>
				{
					curDirection = 'd';
    125e:	84 e6       	ldi	r24, 0x64	; 100
    1260:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->y += 1;
    1264:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1268:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    126c:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1270:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    1274:	f9 01       	movw	r30, r18
    1276:	21 81       	ldd	r18, Z+1	; 0x01
    1278:	2f 5f       	subi	r18, 0xFF	; 255
    127a:	fc 01       	movw	r30, r24
    127c:	21 83       	std	Z+1, r18	; 0x01
    127e:	c1 c0       	rjmp	.+386    	; 0x1402 <TickFct_game+0x3e6>
				}
				else
				{
					head->x +=1 ;
    1280:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1284:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    1288:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    128c:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    1290:	f9 01       	movw	r30, r18
    1292:	20 81       	ld	r18, Z
    1294:	2f 5f       	subi	r18, 0xFF	; 255
    1296:	fc 01       	movw	r30, r24
    1298:	20 83       	st	Z, r18
    129a:	b3 c0       	rjmp	.+358    	; 0x1402 <TickFct_game+0x3e6>
				}
			}
			else if(curDirection == 'r') //  cases makes sure you can't do a 180 turn
    129c:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <curDirection>
    12a0:	82 37       	cpi	r24, 0x72	; 114
    12a2:	c1 f5       	brne	.+112    	; 0x1314 <TickFct_game+0x2f8>
			{
				if(direction == 'u')
    12a4:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    12a8:	85 37       	cpi	r24, 0x75	; 117
    12aa:	89 f4       	brne	.+34     	; 0x12ce <TickFct_game+0x2b2>
				{
					curDirection = 'u';
    12ac:	85 e7       	ldi	r24, 0x75	; 117
    12ae:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->y -= 1;
    12b2:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    12b6:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    12ba:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    12be:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    12c2:	f9 01       	movw	r30, r18
    12c4:	21 81       	ldd	r18, Z+1	; 0x01
    12c6:	21 50       	subi	r18, 0x01	; 1
    12c8:	fc 01       	movw	r30, r24
    12ca:	21 83       	std	Z+1, r18	; 0x01
    12cc:	9a c0       	rjmp	.+308    	; 0x1402 <TickFct_game+0x3e6>
				}
				else if(direction == 'd')
    12ce:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    12d2:	84 36       	cpi	r24, 0x64	; 100
    12d4:	89 f4       	brne	.+34     	; 0x12f8 <TickFct_game+0x2dc>
				{
					curDirection = 'd';
    12d6:	84 e6       	ldi	r24, 0x64	; 100
    12d8:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->y += 1;
    12dc:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    12e0:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    12e4:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    12e8:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    12ec:	f9 01       	movw	r30, r18
    12ee:	21 81       	ldd	r18, Z+1	; 0x01
    12f0:	2f 5f       	subi	r18, 0xFF	; 255
    12f2:	fc 01       	movw	r30, r24
    12f4:	21 83       	std	Z+1, r18	; 0x01
    12f6:	85 c0       	rjmp	.+266    	; 0x1402 <TickFct_game+0x3e6>
				}
				else
				{
					head->x -=1 ;
    12f8:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    12fc:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    1300:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1304:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    1308:	f9 01       	movw	r30, r18
    130a:	20 81       	ld	r18, Z
    130c:	21 50       	subi	r18, 0x01	; 1
    130e:	fc 01       	movw	r30, r24
    1310:	20 83       	st	Z, r18
    1312:	77 c0       	rjmp	.+238    	; 0x1402 <TickFct_game+0x3e6>
				}
			}
			else if(curDirection == 'u') //  cases makes sure you can't do a 180 turn
    1314:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <curDirection>
    1318:	85 37       	cpi	r24, 0x75	; 117
    131a:	c1 f5       	brne	.+112    	; 0x138c <TickFct_game+0x370>
			{
				if(direction == 'l')
    131c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    1320:	8c 36       	cpi	r24, 0x6C	; 108
    1322:	89 f4       	brne	.+34     	; 0x1346 <TickFct_game+0x32a>
				{
					curDirection = 'l';
    1324:	8c e6       	ldi	r24, 0x6C	; 108
    1326:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->x += 1;
    132a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    132e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    1332:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1336:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    133a:	f9 01       	movw	r30, r18
    133c:	20 81       	ld	r18, Z
    133e:	2f 5f       	subi	r18, 0xFF	; 255
    1340:	fc 01       	movw	r30, r24
    1342:	20 83       	st	Z, r18
    1344:	5e c0       	rjmp	.+188    	; 0x1402 <TickFct_game+0x3e6>
				}
				else if(direction == 'r')
    1346:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    134a:	82 37       	cpi	r24, 0x72	; 114
    134c:	89 f4       	brne	.+34     	; 0x1370 <TickFct_game+0x354>
				{
					curDirection = 'r';
    134e:	82 e7       	ldi	r24, 0x72	; 114
    1350:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->x -= 1;
    1354:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1358:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    135c:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1360:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    1364:	f9 01       	movw	r30, r18
    1366:	20 81       	ld	r18, Z
    1368:	21 50       	subi	r18, 0x01	; 1
    136a:	fc 01       	movw	r30, r24
    136c:	20 83       	st	Z, r18
    136e:	49 c0       	rjmp	.+146    	; 0x1402 <TickFct_game+0x3e6>
				}
				else
				{
					head->y -=1 ;
    1370:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1374:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    1378:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    137c:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    1380:	f9 01       	movw	r30, r18
    1382:	21 81       	ldd	r18, Z+1	; 0x01
    1384:	21 50       	subi	r18, 0x01	; 1
    1386:	fc 01       	movw	r30, r24
    1388:	21 83       	std	Z+1, r18	; 0x01
    138a:	3b c0       	rjmp	.+118    	; 0x1402 <TickFct_game+0x3e6>
				}
			}
			else if(curDirection == 'd') //  cases makes sure you can't do a 180 turn
    138c:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <curDirection>
    1390:	84 36       	cpi	r24, 0x64	; 100
    1392:	b9 f5       	brne	.+110    	; 0x1402 <TickFct_game+0x3e6>
			{
				if(direction == 'l')
    1394:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    1398:	8c 36       	cpi	r24, 0x6C	; 108
    139a:	89 f4       	brne	.+34     	; 0x13be <TickFct_game+0x3a2>
				{
					curDirection = 'l';
    139c:	8c e6       	ldi	r24, 0x6C	; 108
    139e:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->x += 1;
    13a2:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    13a6:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    13aa:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    13ae:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    13b2:	f9 01       	movw	r30, r18
    13b4:	20 81       	ld	r18, Z
    13b6:	2f 5f       	subi	r18, 0xFF	; 255
    13b8:	fc 01       	movw	r30, r24
    13ba:	20 83       	st	Z, r18
    13bc:	22 c0       	rjmp	.+68     	; 0x1402 <TickFct_game+0x3e6>
				}
				else if(direction == 'r')
    13be:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <direction>
    13c2:	82 37       	cpi	r24, 0x72	; 114
    13c4:	89 f4       	brne	.+34     	; 0x13e8 <TickFct_game+0x3cc>
				{
					curDirection = 'r';
    13c6:	82 e7       	ldi	r24, 0x72	; 114
    13c8:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <curDirection>
					head->x -= 1;
    13cc:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    13d0:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    13d4:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    13d8:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    13dc:	f9 01       	movw	r30, r18
    13de:	20 81       	ld	r18, Z
    13e0:	21 50       	subi	r18, 0x01	; 1
    13e2:	fc 01       	movw	r30, r24
    13e4:	20 83       	st	Z, r18
    13e6:	0d c0       	rjmp	.+26     	; 0x1402 <TickFct_game+0x3e6>
				}
				else
				{
					head->y +=1 ;
    13e8:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    13ec:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    13f0:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    13f4:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    13f8:	f9 01       	movw	r30, r18
    13fa:	21 81       	ldd	r18, Z+1	; 0x01
    13fc:	2f 5f       	subi	r18, 0xFF	; 255
    13fe:	fc 01       	movw	r30, r24
    1400:	21 83       	std	Z+1, r18	; 0x01
				}
			}
			
			//checkCrash(mySnake, head);
			if(head->x < 0 || head->x > 7 || head->y > 7 || head->y < 0 || crashed == 1) // head ran into side game over
    1402:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1406:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    140a:	fc 01       	movw	r30, r24
    140c:	80 81       	ld	r24, Z
    140e:	88 30       	cpi	r24, 0x08	; 8
    1410:	68 f4       	brcc	.+26     	; 0x142c <TickFct_game+0x410>
    1412:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <head>
    1416:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <head+0x1>
    141a:	fc 01       	movw	r30, r24
    141c:	81 81       	ldd	r24, Z+1	; 0x01
    141e:	88 30       	cpi	r24, 0x08	; 8
    1420:	28 f4       	brcc	.+10     	; 0x142c <TickFct_game+0x410>
    1422:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <crashed>
    1426:	81 30       	cpi	r24, 0x01	; 1
    1428:	09 f0       	breq	.+2      	; 0x142c <TickFct_game+0x410>
    142a:	56 c0       	rjmp	.+172    	; 0x14d8 <TickFct_game+0x4bc>
			{
				gameOver = 1;
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <gameOver>
				state = game_gameOver;
    1432:	82 e0       	ldi	r24, 0x02	; 2
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	9e 87       	std	Y+14, r25	; 0x0e
    1438:	8d 87       	std	Y+13, r24	; 0x0d
				break;
    143a:	51 c0       	rjmp	.+162    	; 0x14de <TickFct_game+0x4c2>
			
			break;
			
		case game_gameOver:
		{
			if(!msgDisplayed2)
    143c:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <msgDisplayed2.2370>
    1440:	88 23       	and	r24, r24
    1442:	69 f4       	brne	.+26     	; 0x145e <TickFct_game+0x442>
			{
				LCD_DisplayString(1,"Game Over");
    1444:	66 e6       	ldi	r22, 0x66	; 102
    1446:	71 e0       	ldi	r23, 0x01	; 1
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_DisplayString>
				LCD_DisplayStringNoClear(17,"Press to restart");
    144e:	65 e5       	ldi	r22, 0x55	; 85
    1450:	71 e0       	ldi	r23, 0x01	; 1
    1452:	81 e1       	ldi	r24, 0x11	; 17
    1454:	0e 94 21 01 	call	0x242	; 0x242 <LCD_DisplayStringNoClear>
				msgDisplayed2 = 1;
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <msgDisplayed2.2370>
			}
			if(reset)
    145e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <reset>
    1462:	88 23       	and	r24, r24
    1464:	d9 f1       	breq	.+118    	; 0x14dc <TickFct_game+0x4c0>
			{
				gameOver = 0;
    1466:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <gameOver>
				msgDisplayed2 = 0;
    146a:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <msgDisplayed2.2370>
				struct snake* tempCur = mySnake;
    146e:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    1472:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    1476:	9e 83       	std	Y+6, r25	; 0x06
    1478:	8d 83       	std	Y+5, r24	; 0x05
				struct snake* tempNext = tempCur->next;
    147a:	8d 81       	ldd	r24, Y+5	; 0x05
    147c:	9e 81       	ldd	r25, Y+6	; 0x06
    147e:	fc 01       	movw	r30, r24
    1480:	82 81       	ldd	r24, Z+2	; 0x02
    1482:	93 81       	ldd	r25, Z+3	; 0x03
    1484:	9c 87       	std	Y+12, r25	; 0x0c
    1486:	8b 87       	std	Y+11, r24	; 0x0b
				while(tempCur != NULL)
    1488:	0e c0       	rjmp	.+28     	; 0x14a6 <TickFct_game+0x48a>
				{
					tempNext = tempCur->next;
    148a:	8d 81       	ldd	r24, Y+5	; 0x05
    148c:	9e 81       	ldd	r25, Y+6	; 0x06
    148e:	fc 01       	movw	r30, r24
    1490:	82 81       	ldd	r24, Z+2	; 0x02
    1492:	93 81       	ldd	r25, Z+3	; 0x03
    1494:	9c 87       	std	Y+12, r25	; 0x0c
					free(tempCur);
    1496:	8b 87       	std	Y+11, r24	; 0x0b
    1498:	8d 81       	ldd	r24, Y+5	; 0x05
    149a:	9e 81       	ldd	r25, Y+6	; 0x06
    149c:	45 d2       	rcall	.+1162   	; 0x1928 <free>
					tempCur = tempNext;
    149e:	8b 85       	ldd	r24, Y+11	; 0x0b
    14a0:	9c 85       	ldd	r25, Y+12	; 0x0c
    14a2:	9e 83       	std	Y+6, r25	; 0x06
    14a4:	8d 83       	std	Y+5, r24	; 0x05
			{
				gameOver = 0;
				msgDisplayed2 = 0;
				struct snake* tempCur = mySnake;
				struct snake* tempNext = tempCur->next;
				while(tempCur != NULL)
    14a6:	8d 81       	ldd	r24, Y+5	; 0x05
    14a8:	9e 81       	ldd	r25, Y+6	; 0x06
    14aa:	89 2b       	or	r24, r25
    14ac:	71 f7       	brne	.-36     	; 0x148a <TickFct_game+0x46e>
				{
					tempNext = tempCur->next;
					free(tempCur);
					tempCur = tempNext;
				}
				mySnake = NULL;
    14ae:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <mySnake+0x1>
    14b2:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <mySnake>
				state = game_start;
    14b6:	1e 86       	std	Y+14, r1	; 0x0e
    14b8:	1d 86       	std	Y+13, r1	; 0x0d
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
    14ba:	88 e2       	ldi	r24, 0x28	; 40
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	2f ef       	ldi	r18, 0xFF	; 255
    14c0:	fc 01       	movw	r30, r24
    14c2:	20 83       	st	Z, r18
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
    14c4:	85 e2       	ldi	r24, 0x25	; 37
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	2f ef       	ldi	r18, 0xFF	; 255
    14ca:	fc 01       	movw	r30, r24
    14cc:	20 83       	st	Z, r18
				break;
    14ce:	07 c0       	rjmp	.+14     	; 0x14de <TickFct_game+0x4c2>
	switch(state)
	{
		case game_start:
			if(!gameStart)
			{
				break;
    14d0:	00 00       	nop
    14d2:	05 c0       	rjmp	.+10     	; 0x14de <TickFct_game+0x4c2>
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
				break;
			}
			if(!direction)
			break;
    14d4:	00 00       	nop
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <TickFct_game+0x4c2>
				state = game_gameOver;
				break;
			}
			//moveSnake(mySnake, head,coordinates);
			
			break;
    14d8:	00 00       	nop
    14da:	01 c0       	rjmp	.+2      	; 0x14de <TickFct_game+0x4c2>
				state = game_start;
				PORTC = 0xFF; // sets blank screen row select 0 - 7 up to down
				PORTB = 0xFF; // inverse column select 0 = column selected 7 - 0 left to right
				break;
			}
			break;
    14dc:	00 00       	nop
		}
		
	}
	return state;
    14de:	8d 85       	ldd	r24, Y+13	; 0x0d
    14e0:	9e 85       	ldd	r25, Y+14	; 0x0e
}
    14e2:	2e 96       	adiw	r28, 0x0e	; 14
    14e4:	0f b6       	in	r0, 0x3f	; 63
    14e6:	f8 94       	cli
    14e8:	de bf       	out	0x3e, r29	; 62
    14ea:	0f be       	out	0x3f, r0	; 63
    14ec:	cd bf       	out	0x3d, r28	; 61
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	1f 91       	pop	r17
    14f4:	0f 91       	pop	r16
    14f6:	08 95       	ret

000014f8 <TickFct_showSnake>:

enum showSnakeSM{showSnake_start, showSnake_run};
int TickFct_showSnake(int state)
{
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	00 d0       	rcall	.+0      	; 0x14fe <TickFct_showSnake+0x6>
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	9a 83       	std	Y+2, r25	; 0x02
    1504:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
    1506:	89 81       	ldd	r24, Y+1	; 0x01
    1508:	9a 81       	ldd	r25, Y+2	; 0x02
    150a:	00 97       	sbiw	r24, 0x00	; 0
    150c:	19 f0       	breq	.+6      	; 0x1514 <TickFct_showSnake+0x1c>
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	51 f0       	breq	.+20     	; 0x1526 <TickFct_showSnake+0x2e>
    1512:	1c c0       	rjmp	.+56     	; 0x154c <TickFct_showSnake+0x54>
	{
		case showSnake_start:
			if(!gameStart)
    1514:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <gameStart>
    1518:	88 23       	and	r24, r24
    151a:	b9 f0       	breq	.+46     	; 0x154a <TickFct_showSnake+0x52>
			break;
			
			state = showSnake_run;
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	9a 83       	std	Y+2, r25	; 0x02
    1522:	89 83       	std	Y+1, r24	; 0x01
			break;
    1524:	13 c0       	rjmp	.+38     	; 0x154c <TickFct_showSnake+0x54>
		
		case showSnake_run:
			if(reset)
    1526:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <reset>
    152a:	88 23       	and	r24, r24
    152c:	19 f0       	breq	.+6      	; 0x1534 <TickFct_showSnake+0x3c>
			{
				state = showSnake_start;
    152e:	1a 82       	std	Y+2, r1	; 0x02
    1530:	19 82       	std	Y+1, r1	; 0x01
				break;
    1532:	0c c0       	rjmp	.+24     	; 0x154c <TickFct_showSnake+0x54>
			}
			
			moveSnake(mySnake, head);
    1534:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <head>
    1538:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <head+0x1>
    153c:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <mySnake>
    1540:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <mySnake+0x1>
    1544:	b9 01       	movw	r22, r18
    1546:	83 db       	rcall	.-2298   	; 0xc4e <moveSnake>
			break;
    1548:	01 c0       	rjmp	.+2      	; 0x154c <TickFct_showSnake+0x54>
{
	switch(state)
	{
		case showSnake_start:
			if(!gameStart)
			break;
    154a:	00 00       	nop
			}
			
			moveSnake(mySnake, head);
			break;
	}
	return state;
    154c:	89 81       	ldd	r24, Y+1	; 0x01
    154e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    1550:	0f 90       	pop	r0
    1552:	0f 90       	pop	r0
    1554:	df 91       	pop	r29
    1556:	cf 91       	pop	r28
    1558:	08 95       	ret

0000155a <main>:


int main(void)
{
    155a:	cf 93       	push	r28
    155c:	df 93       	push	r29
    155e:	00 d0       	rcall	.+0      	; 0x1560 <main+0x6>
    1560:	1f 92       	push	r1
    1562:	cd b7       	in	r28, 0x3d	; 61
    1564:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	unsigned short potentiometer = 0x00;
    1566:	1a 82       	std	Y+2, r1	; 0x02
    1568:	19 82       	std	Y+1, r1	; 0x01
	DDRB = 0xFF; PORTB = 0x00; // x axis of led column_sel
    156a:	84 e2       	ldi	r24, 0x24	; 36
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	2f ef       	ldi	r18, 0xFF	; 255
    1570:	fc 01       	movw	r30, r24
    1572:	20 83       	st	Z, r18
    1574:	85 e2       	ldi	r24, 0x25	; 37
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	fc 01       	movw	r30, r24
    157a:	10 82       	st	Z, r1
	DDRC = 0xFF; PORTC = 0x00; // y axis of led column_val
    157c:	87 e2       	ldi	r24, 0x27	; 39
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	2f ef       	ldi	r18, 0xFF	; 255
    1582:	fc 01       	movw	r30, r24
    1584:	20 83       	st	Z, r18
    1586:	88 e2       	ldi	r24, 0x28	; 40
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	fc 01       	movw	r30, r24
    158c:	10 82       	st	Z, r1
	DDRD = 0xFF; PORTD = 0x00; // lcd display
    158e:	8a e2       	ldi	r24, 0x2A	; 42
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	2f ef       	ldi	r18, 0xFF	; 255
    1594:	fc 01       	movw	r30, r24
    1596:	20 83       	st	Z, r18
    1598:	8b e2       	ldi	r24, 0x2B	; 43
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	fc 01       	movw	r30, r24
    159e:	10 82       	st	Z, r1
	DDRA = 0x07; PORTA = 0x08; //PA4 is lr, PA5 is ud
    15a0:	81 e2       	ldi	r24, 0x21	; 33
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	27 e0       	ldi	r18, 0x07	; 7
    15a6:	fc 01       	movw	r30, r24
    15a8:	20 83       	st	Z, r18
    15aa:	82 e2       	ldi	r24, 0x22	; 34
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	28 e0       	ldi	r18, 0x08	; 8
    15b0:	fc 01       	movw	r30, r24
    15b2:	20 83       	st	Z, r18
	unsigned char i = 0;
    15b4:	1b 82       	std	Y+3, r1	; 0x03
	tasks[i].state = startGame_start;
    15b6:	8b 81       	ldd	r24, Y+3	; 0x03
    15b8:	28 2f       	mov	r18, r24
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	c9 01       	movw	r24, r18
    15be:	88 0f       	add	r24, r24
    15c0:	99 1f       	adc	r25, r25
    15c2:	82 0f       	add	r24, r18
    15c4:	93 1f       	adc	r25, r19
    15c6:	88 0f       	add	r24, r24
    15c8:	99 1f       	adc	r25, r25
    15ca:	88 0f       	add	r24, r24
    15cc:	99 1f       	adc	r25, r25
    15ce:	80 55       	subi	r24, 0x50	; 80
    15d0:	9e 4f       	sbci	r25, 0xFE	; 254
    15d2:	fc 01       	movw	r30, r24
    15d4:	11 82       	std	Z+1, r1	; 0x01
    15d6:	10 82       	st	Z, r1
	tasks[i].period = 300;
    15d8:	8b 81       	ldd	r24, Y+3	; 0x03
    15da:	28 2f       	mov	r18, r24
    15dc:	30 e0       	ldi	r19, 0x00	; 0
    15de:	c9 01       	movw	r24, r18
    15e0:	88 0f       	add	r24, r24
    15e2:	99 1f       	adc	r25, r25
    15e4:	82 0f       	add	r24, r18
    15e6:	93 1f       	adc	r25, r19
    15e8:	88 0f       	add	r24, r24
    15ea:	99 1f       	adc	r25, r25
    15ec:	88 0f       	add	r24, r24
    15ee:	99 1f       	adc	r25, r25
    15f0:	9c 01       	movw	r18, r24
    15f2:	2e 54       	subi	r18, 0x4E	; 78
    15f4:	3e 4f       	sbci	r19, 0xFE	; 254
    15f6:	8c e2       	ldi	r24, 0x2C	; 44
    15f8:	91 e0       	ldi	r25, 0x01	; 1
    15fa:	a0 e0       	ldi	r26, 0x00	; 0
    15fc:	b0 e0       	ldi	r27, 0x00	; 0
    15fe:	f9 01       	movw	r30, r18
    1600:	80 83       	st	Z, r24
    1602:	91 83       	std	Z+1, r25	; 0x01
    1604:	a2 83       	std	Z+2, r26	; 0x02
    1606:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_startGame;
    1608:	8b 81       	ldd	r24, Y+3	; 0x03
    160a:	28 2f       	mov	r18, r24
    160c:	30 e0       	ldi	r19, 0x00	; 0
    160e:	c9 01       	movw	r24, r18
    1610:	88 0f       	add	r24, r24
    1612:	99 1f       	adc	r25, r25
    1614:	82 0f       	add	r24, r18
    1616:	93 1f       	adc	r25, r19
    1618:	88 0f       	add	r24, r24
    161a:	99 1f       	adc	r25, r25
    161c:	88 0f       	add	r24, r24
    161e:	99 1f       	adc	r25, r25
    1620:	86 54       	subi	r24, 0x46	; 70
    1622:	9e 4f       	sbci	r25, 0xFE	; 254
    1624:	22 e6       	ldi	r18, 0x62	; 98
    1626:	34 e0       	ldi	r19, 0x04	; 4
    1628:	fc 01       	movw	r30, r24
    162a:	31 83       	std	Z+1, r19	; 0x01
    162c:	20 83       	st	Z, r18
	++i;
    162e:	8b 81       	ldd	r24, Y+3	; 0x03
    1630:	8f 5f       	subi	r24, 0xFF	; 255
    1632:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = direction_start;
    1634:	8b 81       	ldd	r24, Y+3	; 0x03
    1636:	28 2f       	mov	r18, r24
    1638:	30 e0       	ldi	r19, 0x00	; 0
    163a:	c9 01       	movw	r24, r18
    163c:	88 0f       	add	r24, r24
    163e:	99 1f       	adc	r25, r25
    1640:	82 0f       	add	r24, r18
    1642:	93 1f       	adc	r25, r19
    1644:	88 0f       	add	r24, r24
    1646:	99 1f       	adc	r25, r25
    1648:	88 0f       	add	r24, r24
    164a:	99 1f       	adc	r25, r25
    164c:	80 55       	subi	r24, 0x50	; 80
    164e:	9e 4f       	sbci	r25, 0xFE	; 254
    1650:	fc 01       	movw	r30, r24
    1652:	11 82       	std	Z+1, r1	; 0x01
    1654:	10 82       	st	Z, r1
	tasks[i].period = 100;
    1656:	8b 81       	ldd	r24, Y+3	; 0x03
    1658:	28 2f       	mov	r18, r24
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	c9 01       	movw	r24, r18
    165e:	88 0f       	add	r24, r24
    1660:	99 1f       	adc	r25, r25
    1662:	82 0f       	add	r24, r18
    1664:	93 1f       	adc	r25, r19
    1666:	88 0f       	add	r24, r24
    1668:	99 1f       	adc	r25, r25
    166a:	88 0f       	add	r24, r24
    166c:	99 1f       	adc	r25, r25
    166e:	9c 01       	movw	r18, r24
    1670:	2e 54       	subi	r18, 0x4E	; 78
    1672:	3e 4f       	sbci	r19, 0xFE	; 254
    1674:	84 e6       	ldi	r24, 0x64	; 100
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	a0 e0       	ldi	r26, 0x00	; 0
    167a:	b0 e0       	ldi	r27, 0x00	; 0
    167c:	f9 01       	movw	r30, r18
    167e:	80 83       	st	Z, r24
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	a2 83       	std	Z+2, r26	; 0x02
    1684:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_direction;
    1686:	8b 81       	ldd	r24, Y+3	; 0x03
    1688:	28 2f       	mov	r18, r24
    168a:	30 e0       	ldi	r19, 0x00	; 0
    168c:	c9 01       	movw	r24, r18
    168e:	88 0f       	add	r24, r24
    1690:	99 1f       	adc	r25, r25
    1692:	82 0f       	add	r24, r18
    1694:	93 1f       	adc	r25, r19
    1696:	88 0f       	add	r24, r24
    1698:	99 1f       	adc	r25, r25
    169a:	88 0f       	add	r24, r24
    169c:	99 1f       	adc	r25, r25
    169e:	86 54       	subi	r24, 0x46	; 70
    16a0:	9e 4f       	sbci	r25, 0xFE	; 254
    16a2:	2d e0       	ldi	r18, 0x0D	; 13
    16a4:	35 e0       	ldi	r19, 0x05	; 5
    16a6:	fc 01       	movw	r30, r24
    16a8:	31 83       	std	Z+1, r19	; 0x01
    16aa:	20 83       	st	Z, r18
	++i;
    16ac:	8b 81       	ldd	r24, Y+3	; 0x03
    16ae:	8f 5f       	subi	r24, 0xFF	; 255
    16b0:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = game_start;
    16b2:	8b 81       	ldd	r24, Y+3	; 0x03
    16b4:	28 2f       	mov	r18, r24
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	c9 01       	movw	r24, r18
    16ba:	88 0f       	add	r24, r24
    16bc:	99 1f       	adc	r25, r25
    16be:	82 0f       	add	r24, r18
    16c0:	93 1f       	adc	r25, r19
    16c2:	88 0f       	add	r24, r24
    16c4:	99 1f       	adc	r25, r25
    16c6:	88 0f       	add	r24, r24
    16c8:	99 1f       	adc	r25, r25
    16ca:	80 55       	subi	r24, 0x50	; 80
    16cc:	9e 4f       	sbci	r25, 0xFE	; 254
    16ce:	fc 01       	movw	r30, r24
    16d0:	11 82       	std	Z+1, r1	; 0x01
    16d2:	10 82       	st	Z, r1
	tasks[i].period = 100;
    16d4:	8b 81       	ldd	r24, Y+3	; 0x03
    16d6:	28 2f       	mov	r18, r24
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	c9 01       	movw	r24, r18
    16dc:	88 0f       	add	r24, r24
    16de:	99 1f       	adc	r25, r25
    16e0:	82 0f       	add	r24, r18
    16e2:	93 1f       	adc	r25, r19
    16e4:	88 0f       	add	r24, r24
    16e6:	99 1f       	adc	r25, r25
    16e8:	88 0f       	add	r24, r24
    16ea:	99 1f       	adc	r25, r25
    16ec:	9c 01       	movw	r18, r24
    16ee:	2e 54       	subi	r18, 0x4E	; 78
    16f0:	3e 4f       	sbci	r19, 0xFE	; 254
    16f2:	84 e6       	ldi	r24, 0x64	; 100
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	a0 e0       	ldi	r26, 0x00	; 0
    16f8:	b0 e0       	ldi	r27, 0x00	; 0
    16fa:	f9 01       	movw	r30, r18
    16fc:	80 83       	st	Z, r24
    16fe:	91 83       	std	Z+1, r25	; 0x01
    1700:	a2 83       	std	Z+2, r26	; 0x02
    1702:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_game;
    1704:	8b 81       	ldd	r24, Y+3	; 0x03
    1706:	28 2f       	mov	r18, r24
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	c9 01       	movw	r24, r18
    170c:	88 0f       	add	r24, r24
    170e:	99 1f       	adc	r25, r25
    1710:	82 0f       	add	r24, r18
    1712:	93 1f       	adc	r25, r19
    1714:	88 0f       	add	r24, r24
    1716:	99 1f       	adc	r25, r25
    1718:	88 0f       	add	r24, r24
    171a:	99 1f       	adc	r25, r25
    171c:	86 54       	subi	r24, 0x46	; 70
    171e:	9e 4f       	sbci	r25, 0xFE	; 254
    1720:	2e e0       	ldi	r18, 0x0E	; 14
    1722:	38 e0       	ldi	r19, 0x08	; 8
    1724:	fc 01       	movw	r30, r24
    1726:	31 83       	std	Z+1, r19	; 0x01
    1728:	20 83       	st	Z, r18
	++i;
    172a:	8b 81       	ldd	r24, Y+3	; 0x03
    172c:	8f 5f       	subi	r24, 0xFF	; 255
    172e:	8b 83       	std	Y+3, r24	; 0x03
	tasks[i].state = showSnake_start;
    1730:	8b 81       	ldd	r24, Y+3	; 0x03
    1732:	28 2f       	mov	r18, r24
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	c9 01       	movw	r24, r18
    1738:	88 0f       	add	r24, r24
    173a:	99 1f       	adc	r25, r25
    173c:	82 0f       	add	r24, r18
    173e:	93 1f       	adc	r25, r19
    1740:	88 0f       	add	r24, r24
    1742:	99 1f       	adc	r25, r25
    1744:	88 0f       	add	r24, r24
    1746:	99 1f       	adc	r25, r25
    1748:	80 55       	subi	r24, 0x50	; 80
    174a:	9e 4f       	sbci	r25, 0xFE	; 254
    174c:	fc 01       	movw	r30, r24
    174e:	11 82       	std	Z+1, r1	; 0x01
    1750:	10 82       	st	Z, r1
	tasks[i].period = 1;
    1752:	8b 81       	ldd	r24, Y+3	; 0x03
    1754:	28 2f       	mov	r18, r24
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	c9 01       	movw	r24, r18
    175a:	88 0f       	add	r24, r24
    175c:	99 1f       	adc	r25, r25
    175e:	82 0f       	add	r24, r18
    1760:	93 1f       	adc	r25, r19
    1762:	88 0f       	add	r24, r24
    1764:	99 1f       	adc	r25, r25
    1766:	88 0f       	add	r24, r24
    1768:	99 1f       	adc	r25, r25
    176a:	9c 01       	movw	r18, r24
    176c:	2e 54       	subi	r18, 0x4E	; 78
    176e:	3e 4f       	sbci	r19, 0xFE	; 254
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	a0 e0       	ldi	r26, 0x00	; 0
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	f9 01       	movw	r30, r18
    177a:	80 83       	st	Z, r24
    177c:	91 83       	std	Z+1, r25	; 0x01
    177e:	a2 83       	std	Z+2, r26	; 0x02
    1780:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_showSnake;
    1782:	8b 81       	ldd	r24, Y+3	; 0x03
    1784:	28 2f       	mov	r18, r24
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	c9 01       	movw	r24, r18
    178a:	88 0f       	add	r24, r24
    178c:	99 1f       	adc	r25, r25
    178e:	82 0f       	add	r24, r18
    1790:	93 1f       	adc	r25, r19
    1792:	88 0f       	add	r24, r24
    1794:	99 1f       	adc	r25, r25
    1796:	88 0f       	add	r24, r24
    1798:	99 1f       	adc	r25, r25
    179a:	86 54       	subi	r24, 0x46	; 70
    179c:	9e 4f       	sbci	r25, 0xFE	; 254
    179e:	2c e7       	ldi	r18, 0x7C	; 124
    17a0:	3a e0       	ldi	r19, 0x0A	; 10
    17a2:	fc 01       	movw	r30, r24
    17a4:	31 83       	std	Z+1, r19	; 0x01
    17a6:	20 83       	st	Z, r18

	
	LCD_init();
    17a8:	0e 94 83 00 	call	0x106	; 0x106 <LCD_init>
	adc_init();
    17ac:	0e 94 ed 01 	call	0x3da	; 0x3da <adc_init>
	LCD_CreateCustomChar(1, leftCustom);
    17b0:	60 e8       	ldi	r22, 0x80	; 128
    17b2:	71 e0       	ldi	r23, 0x01	; 1
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(2, rightCustom);
    17ba:	68 e8       	ldi	r22, 0x88	; 136
    17bc:	71 e0       	ldi	r23, 0x01	; 1
    17be:	82 e0       	ldi	r24, 0x02	; 2
    17c0:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(3, upCustom);
    17c4:	60 e7       	ldi	r22, 0x70	; 112
    17c6:	71 e0       	ldi	r23, 0x01	; 1
    17c8:	83 e0       	ldi	r24, 0x03	; 3
    17ca:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	LCD_CreateCustomChar(4, downCustom);
    17ce:	68 e7       	ldi	r22, 0x78	; 120
    17d0:	71 e0       	ldi	r23, 0x01	; 1
    17d2:	84 e0       	ldi	r24, 0x04	; 4
    17d4:	0e 94 8f 01 	call	0x31e	; 0x31e <LCD_CreateCustomChar>
	srand(time(NULL));
    17d8:	80 e0       	ldi	r24, 0x00	; 0
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	0e 94 66 00 	call	0xcc	; 0xcc <time>
    17e0:	dc 01       	movw	r26, r24
    17e2:	cb 01       	movw	r24, r22
    17e4:	74 d1       	rcall	.+744    	; 0x1ace <srand>
	TimerSet(1);
    17e6:	61 e0       	ldi	r22, 0x01	; 1
    17e8:	70 e0       	ldi	r23, 0x00	; 0
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <TimerSet>
	TimerOn();
    17f2:	0e 94 23 02 	call	0x446	; 0x446 <TimerOn>
    while (1) 
    {	
		//tasks[2].period = potentiometer ;
    }
    17f6:	ff cf       	rjmp	.-2      	; 0x17f6 <main+0x29c>

000017f8 <malloc>:
    17f8:	0f 93       	push	r16
    17fa:	1f 93       	push	r17
    17fc:	cf 93       	push	r28
    17fe:	df 93       	push	r29
    1800:	82 30       	cpi	r24, 0x02	; 2
    1802:	91 05       	cpc	r25, r1
    1804:	10 f4       	brcc	.+4      	; 0x180a <malloc+0x12>
    1806:	82 e0       	ldi	r24, 0x02	; 2
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	e0 91 22 02 	lds	r30, 0x0222	; 0x800222 <__flp>
    180e:	f0 91 23 02 	lds	r31, 0x0223	; 0x800223 <__flp+0x1>
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	30 e0       	ldi	r19, 0x00	; 0
    1816:	a0 e0       	ldi	r26, 0x00	; 0
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	30 97       	sbiw	r30, 0x00	; 0
    181c:	19 f1       	breq	.+70     	; 0x1864 <malloc+0x6c>
    181e:	40 81       	ld	r20, Z
    1820:	51 81       	ldd	r21, Z+1	; 0x01
    1822:	02 81       	ldd	r16, Z+2	; 0x02
    1824:	13 81       	ldd	r17, Z+3	; 0x03
    1826:	48 17       	cp	r20, r24
    1828:	59 07       	cpc	r21, r25
    182a:	c8 f0       	brcs	.+50     	; 0x185e <malloc+0x66>
    182c:	84 17       	cp	r24, r20
    182e:	95 07       	cpc	r25, r21
    1830:	69 f4       	brne	.+26     	; 0x184c <malloc+0x54>
    1832:	10 97       	sbiw	r26, 0x00	; 0
    1834:	31 f0       	breq	.+12     	; 0x1842 <malloc+0x4a>
    1836:	12 96       	adiw	r26, 0x02	; 2
    1838:	0c 93       	st	X, r16
    183a:	12 97       	sbiw	r26, 0x02	; 2
    183c:	13 96       	adiw	r26, 0x03	; 3
    183e:	1c 93       	st	X, r17
    1840:	27 c0       	rjmp	.+78     	; 0x1890 <malloc+0x98>
    1842:	00 93 22 02 	sts	0x0222, r16	; 0x800222 <__flp>
    1846:	10 93 23 02 	sts	0x0223, r17	; 0x800223 <__flp+0x1>
    184a:	22 c0       	rjmp	.+68     	; 0x1890 <malloc+0x98>
    184c:	21 15       	cp	r18, r1
    184e:	31 05       	cpc	r19, r1
    1850:	19 f0       	breq	.+6      	; 0x1858 <malloc+0x60>
    1852:	42 17       	cp	r20, r18
    1854:	53 07       	cpc	r21, r19
    1856:	18 f4       	brcc	.+6      	; 0x185e <malloc+0x66>
    1858:	9a 01       	movw	r18, r20
    185a:	bd 01       	movw	r22, r26
    185c:	ef 01       	movw	r28, r30
    185e:	df 01       	movw	r26, r30
    1860:	f8 01       	movw	r30, r16
    1862:	db cf       	rjmp	.-74     	; 0x181a <malloc+0x22>
    1864:	21 15       	cp	r18, r1
    1866:	31 05       	cpc	r19, r1
    1868:	f9 f0       	breq	.+62     	; 0x18a8 <malloc+0xb0>
    186a:	28 1b       	sub	r18, r24
    186c:	39 0b       	sbc	r19, r25
    186e:	24 30       	cpi	r18, 0x04	; 4
    1870:	31 05       	cpc	r19, r1
    1872:	80 f4       	brcc	.+32     	; 0x1894 <malloc+0x9c>
    1874:	8a 81       	ldd	r24, Y+2	; 0x02
    1876:	9b 81       	ldd	r25, Y+3	; 0x03
    1878:	61 15       	cp	r22, r1
    187a:	71 05       	cpc	r23, r1
    187c:	21 f0       	breq	.+8      	; 0x1886 <malloc+0x8e>
    187e:	fb 01       	movw	r30, r22
    1880:	93 83       	std	Z+3, r25	; 0x03
    1882:	82 83       	std	Z+2, r24	; 0x02
    1884:	04 c0       	rjmp	.+8      	; 0x188e <malloc+0x96>
    1886:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <__flp+0x1>
    188a:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__flp>
    188e:	fe 01       	movw	r30, r28
    1890:	32 96       	adiw	r30, 0x02	; 2
    1892:	44 c0       	rjmp	.+136    	; 0x191c <malloc+0x124>
    1894:	fe 01       	movw	r30, r28
    1896:	e2 0f       	add	r30, r18
    1898:	f3 1f       	adc	r31, r19
    189a:	81 93       	st	Z+, r24
    189c:	91 93       	st	Z+, r25
    189e:	22 50       	subi	r18, 0x02	; 2
    18a0:	31 09       	sbc	r19, r1
    18a2:	39 83       	std	Y+1, r19	; 0x01
    18a4:	28 83       	st	Y, r18
    18a6:	3a c0       	rjmp	.+116    	; 0x191c <malloc+0x124>
    18a8:	20 91 20 02 	lds	r18, 0x0220	; 0x800220 <__brkval>
    18ac:	30 91 21 02 	lds	r19, 0x0221	; 0x800221 <__brkval+0x1>
    18b0:	23 2b       	or	r18, r19
    18b2:	41 f4       	brne	.+16     	; 0x18c4 <malloc+0xcc>
    18b4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    18b8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    18bc:	30 93 21 02 	sts	0x0221, r19	; 0x800221 <__brkval+0x1>
    18c0:	20 93 20 02 	sts	0x0220, r18	; 0x800220 <__brkval>
    18c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    18c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    18cc:	21 15       	cp	r18, r1
    18ce:	31 05       	cpc	r19, r1
    18d0:	41 f4       	brne	.+16     	; 0x18e2 <malloc+0xea>
    18d2:	2d b7       	in	r18, 0x3d	; 61
    18d4:	3e b7       	in	r19, 0x3e	; 62
    18d6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    18da:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    18de:	24 1b       	sub	r18, r20
    18e0:	35 0b       	sbc	r19, r21
    18e2:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <__brkval>
    18e6:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <__brkval+0x1>
    18ea:	e2 17       	cp	r30, r18
    18ec:	f3 07       	cpc	r31, r19
    18ee:	a0 f4       	brcc	.+40     	; 0x1918 <malloc+0x120>
    18f0:	2e 1b       	sub	r18, r30
    18f2:	3f 0b       	sbc	r19, r31
    18f4:	28 17       	cp	r18, r24
    18f6:	39 07       	cpc	r19, r25
    18f8:	78 f0       	brcs	.+30     	; 0x1918 <malloc+0x120>
    18fa:	ac 01       	movw	r20, r24
    18fc:	4e 5f       	subi	r20, 0xFE	; 254
    18fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1900:	24 17       	cp	r18, r20
    1902:	35 07       	cpc	r19, r21
    1904:	48 f0       	brcs	.+18     	; 0x1918 <malloc+0x120>
    1906:	4e 0f       	add	r20, r30
    1908:	5f 1f       	adc	r21, r31
    190a:	50 93 21 02 	sts	0x0221, r21	; 0x800221 <__brkval+0x1>
    190e:	40 93 20 02 	sts	0x0220, r20	; 0x800220 <__brkval>
    1912:	81 93       	st	Z+, r24
    1914:	91 93       	st	Z+, r25
    1916:	02 c0       	rjmp	.+4      	; 0x191c <malloc+0x124>
    1918:	e0 e0       	ldi	r30, 0x00	; 0
    191a:	f0 e0       	ldi	r31, 0x00	; 0
    191c:	cf 01       	movw	r24, r30
    191e:	df 91       	pop	r29
    1920:	cf 91       	pop	r28
    1922:	1f 91       	pop	r17
    1924:	0f 91       	pop	r16
    1926:	08 95       	ret

00001928 <free>:
    1928:	cf 93       	push	r28
    192a:	df 93       	push	r29
    192c:	00 97       	sbiw	r24, 0x00	; 0
    192e:	09 f4       	brne	.+2      	; 0x1932 <free+0xa>
    1930:	81 c0       	rjmp	.+258    	; 0x1a34 <free+0x10c>
    1932:	fc 01       	movw	r30, r24
    1934:	32 97       	sbiw	r30, 0x02	; 2
    1936:	13 82       	std	Z+3, r1	; 0x03
    1938:	12 82       	std	Z+2, r1	; 0x02
    193a:	a0 91 22 02 	lds	r26, 0x0222	; 0x800222 <__flp>
    193e:	b0 91 23 02 	lds	r27, 0x0223	; 0x800223 <__flp+0x1>
    1942:	10 97       	sbiw	r26, 0x00	; 0
    1944:	81 f4       	brne	.+32     	; 0x1966 <free+0x3e>
    1946:	20 81       	ld	r18, Z
    1948:	31 81       	ldd	r19, Z+1	; 0x01
    194a:	82 0f       	add	r24, r18
    194c:	93 1f       	adc	r25, r19
    194e:	20 91 20 02 	lds	r18, 0x0220	; 0x800220 <__brkval>
    1952:	30 91 21 02 	lds	r19, 0x0221	; 0x800221 <__brkval+0x1>
    1956:	28 17       	cp	r18, r24
    1958:	39 07       	cpc	r19, r25
    195a:	51 f5       	brne	.+84     	; 0x19b0 <free+0x88>
    195c:	f0 93 21 02 	sts	0x0221, r31	; 0x800221 <__brkval+0x1>
    1960:	e0 93 20 02 	sts	0x0220, r30	; 0x800220 <__brkval>
    1964:	67 c0       	rjmp	.+206    	; 0x1a34 <free+0x10c>
    1966:	ed 01       	movw	r28, r26
    1968:	20 e0       	ldi	r18, 0x00	; 0
    196a:	30 e0       	ldi	r19, 0x00	; 0
    196c:	ce 17       	cp	r28, r30
    196e:	df 07       	cpc	r29, r31
    1970:	40 f4       	brcc	.+16     	; 0x1982 <free+0x5a>
    1972:	4a 81       	ldd	r20, Y+2	; 0x02
    1974:	5b 81       	ldd	r21, Y+3	; 0x03
    1976:	9e 01       	movw	r18, r28
    1978:	41 15       	cp	r20, r1
    197a:	51 05       	cpc	r21, r1
    197c:	f1 f0       	breq	.+60     	; 0x19ba <free+0x92>
    197e:	ea 01       	movw	r28, r20
    1980:	f5 cf       	rjmp	.-22     	; 0x196c <free+0x44>
    1982:	d3 83       	std	Z+3, r29	; 0x03
    1984:	c2 83       	std	Z+2, r28	; 0x02
    1986:	40 81       	ld	r20, Z
    1988:	51 81       	ldd	r21, Z+1	; 0x01
    198a:	84 0f       	add	r24, r20
    198c:	95 1f       	adc	r25, r21
    198e:	c8 17       	cp	r28, r24
    1990:	d9 07       	cpc	r29, r25
    1992:	59 f4       	brne	.+22     	; 0x19aa <free+0x82>
    1994:	88 81       	ld	r24, Y
    1996:	99 81       	ldd	r25, Y+1	; 0x01
    1998:	84 0f       	add	r24, r20
    199a:	95 1f       	adc	r25, r21
    199c:	02 96       	adiw	r24, 0x02	; 2
    199e:	91 83       	std	Z+1, r25	; 0x01
    19a0:	80 83       	st	Z, r24
    19a2:	8a 81       	ldd	r24, Y+2	; 0x02
    19a4:	9b 81       	ldd	r25, Y+3	; 0x03
    19a6:	93 83       	std	Z+3, r25	; 0x03
    19a8:	82 83       	std	Z+2, r24	; 0x02
    19aa:	21 15       	cp	r18, r1
    19ac:	31 05       	cpc	r19, r1
    19ae:	29 f4       	brne	.+10     	; 0x19ba <free+0x92>
    19b0:	f0 93 23 02 	sts	0x0223, r31	; 0x800223 <__flp+0x1>
    19b4:	e0 93 22 02 	sts	0x0222, r30	; 0x800222 <__flp>
    19b8:	3d c0       	rjmp	.+122    	; 0x1a34 <free+0x10c>
    19ba:	e9 01       	movw	r28, r18
    19bc:	fb 83       	std	Y+3, r31	; 0x03
    19be:	ea 83       	std	Y+2, r30	; 0x02
    19c0:	49 91       	ld	r20, Y+
    19c2:	59 91       	ld	r21, Y+
    19c4:	c4 0f       	add	r28, r20
    19c6:	d5 1f       	adc	r29, r21
    19c8:	ec 17       	cp	r30, r28
    19ca:	fd 07       	cpc	r31, r29
    19cc:	61 f4       	brne	.+24     	; 0x19e6 <free+0xbe>
    19ce:	80 81       	ld	r24, Z
    19d0:	91 81       	ldd	r25, Z+1	; 0x01
    19d2:	84 0f       	add	r24, r20
    19d4:	95 1f       	adc	r25, r21
    19d6:	02 96       	adiw	r24, 0x02	; 2
    19d8:	e9 01       	movw	r28, r18
    19da:	99 83       	std	Y+1, r25	; 0x01
    19dc:	88 83       	st	Y, r24
    19de:	82 81       	ldd	r24, Z+2	; 0x02
    19e0:	93 81       	ldd	r25, Z+3	; 0x03
    19e2:	9b 83       	std	Y+3, r25	; 0x03
    19e4:	8a 83       	std	Y+2, r24	; 0x02
    19e6:	e0 e0       	ldi	r30, 0x00	; 0
    19e8:	f0 e0       	ldi	r31, 0x00	; 0
    19ea:	12 96       	adiw	r26, 0x02	; 2
    19ec:	8d 91       	ld	r24, X+
    19ee:	9c 91       	ld	r25, X
    19f0:	13 97       	sbiw	r26, 0x03	; 3
    19f2:	00 97       	sbiw	r24, 0x00	; 0
    19f4:	19 f0       	breq	.+6      	; 0x19fc <free+0xd4>
    19f6:	fd 01       	movw	r30, r26
    19f8:	dc 01       	movw	r26, r24
    19fa:	f7 cf       	rjmp	.-18     	; 0x19ea <free+0xc2>
    19fc:	8d 91       	ld	r24, X+
    19fe:	9c 91       	ld	r25, X
    1a00:	11 97       	sbiw	r26, 0x01	; 1
    1a02:	9d 01       	movw	r18, r26
    1a04:	2e 5f       	subi	r18, 0xFE	; 254
    1a06:	3f 4f       	sbci	r19, 0xFF	; 255
    1a08:	82 0f       	add	r24, r18
    1a0a:	93 1f       	adc	r25, r19
    1a0c:	20 91 20 02 	lds	r18, 0x0220	; 0x800220 <__brkval>
    1a10:	30 91 21 02 	lds	r19, 0x0221	; 0x800221 <__brkval+0x1>
    1a14:	28 17       	cp	r18, r24
    1a16:	39 07       	cpc	r19, r25
    1a18:	69 f4       	brne	.+26     	; 0x1a34 <free+0x10c>
    1a1a:	30 97       	sbiw	r30, 0x00	; 0
    1a1c:	29 f4       	brne	.+10     	; 0x1a28 <free+0x100>
    1a1e:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <__flp+0x1>
    1a22:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__flp>
    1a26:	02 c0       	rjmp	.+4      	; 0x1a2c <free+0x104>
    1a28:	13 82       	std	Z+3, r1	; 0x03
    1a2a:	12 82       	std	Z+2, r1	; 0x02
    1a2c:	b0 93 21 02 	sts	0x0221, r27	; 0x800221 <__brkval+0x1>
    1a30:	a0 93 20 02 	sts	0x0220, r26	; 0x800220 <__brkval>
    1a34:	df 91       	pop	r29
    1a36:	cf 91       	pop	r28
    1a38:	08 95       	ret

00001a3a <do_rand>:
    1a3a:	8f 92       	push	r8
    1a3c:	9f 92       	push	r9
    1a3e:	af 92       	push	r10
    1a40:	bf 92       	push	r11
    1a42:	cf 92       	push	r12
    1a44:	df 92       	push	r13
    1a46:	ef 92       	push	r14
    1a48:	ff 92       	push	r15
    1a4a:	cf 93       	push	r28
    1a4c:	df 93       	push	r29
    1a4e:	ec 01       	movw	r28, r24
    1a50:	68 81       	ld	r22, Y
    1a52:	79 81       	ldd	r23, Y+1	; 0x01
    1a54:	8a 81       	ldd	r24, Y+2	; 0x02
    1a56:	9b 81       	ldd	r25, Y+3	; 0x03
    1a58:	61 15       	cp	r22, r1
    1a5a:	71 05       	cpc	r23, r1
    1a5c:	81 05       	cpc	r24, r1
    1a5e:	91 05       	cpc	r25, r1
    1a60:	21 f4       	brne	.+8      	; 0x1a6a <do_rand+0x30>
    1a62:	64 e2       	ldi	r22, 0x24	; 36
    1a64:	79 ed       	ldi	r23, 0xD9	; 217
    1a66:	8b e5       	ldi	r24, 0x5B	; 91
    1a68:	97 e0       	ldi	r25, 0x07	; 7
    1a6a:	2d e1       	ldi	r18, 0x1D	; 29
    1a6c:	33 ef       	ldi	r19, 0xF3	; 243
    1a6e:	41 e0       	ldi	r20, 0x01	; 1
    1a70:	50 e0       	ldi	r21, 0x00	; 0
    1a72:	29 d3       	rcall	.+1618   	; 0x20c6 <__divmodsi4>
    1a74:	49 01       	movw	r8, r18
    1a76:	5a 01       	movw	r10, r20
    1a78:	9b 01       	movw	r18, r22
    1a7a:	ac 01       	movw	r20, r24
    1a7c:	a7 ea       	ldi	r26, 0xA7	; 167
    1a7e:	b1 e4       	ldi	r27, 0x41	; 65
    1a80:	3e d3       	rcall	.+1660   	; 0x20fe <__muluhisi3>
    1a82:	6b 01       	movw	r12, r22
    1a84:	7c 01       	movw	r14, r24
    1a86:	ac ee       	ldi	r26, 0xEC	; 236
    1a88:	b4 ef       	ldi	r27, 0xF4	; 244
    1a8a:	a5 01       	movw	r20, r10
    1a8c:	94 01       	movw	r18, r8
    1a8e:	43 d3       	rcall	.+1670   	; 0x2116 <__mulohisi3>
    1a90:	dc 01       	movw	r26, r24
    1a92:	cb 01       	movw	r24, r22
    1a94:	8c 0d       	add	r24, r12
    1a96:	9d 1d       	adc	r25, r13
    1a98:	ae 1d       	adc	r26, r14
    1a9a:	bf 1d       	adc	r27, r15
    1a9c:	b7 ff       	sbrs	r27, 7
    1a9e:	03 c0       	rjmp	.+6      	; 0x1aa6 <do_rand+0x6c>
    1aa0:	01 97       	sbiw	r24, 0x01	; 1
    1aa2:	a1 09       	sbc	r26, r1
    1aa4:	b0 48       	sbci	r27, 0x80	; 128
    1aa6:	88 83       	st	Y, r24
    1aa8:	99 83       	std	Y+1, r25	; 0x01
    1aaa:	aa 83       	std	Y+2, r26	; 0x02
    1aac:	bb 83       	std	Y+3, r27	; 0x03
    1aae:	9f 77       	andi	r25, 0x7F	; 127
    1ab0:	df 91       	pop	r29
    1ab2:	cf 91       	pop	r28
    1ab4:	ff 90       	pop	r15
    1ab6:	ef 90       	pop	r14
    1ab8:	df 90       	pop	r13
    1aba:	cf 90       	pop	r12
    1abc:	bf 90       	pop	r11
    1abe:	af 90       	pop	r10
    1ac0:	9f 90       	pop	r9
    1ac2:	8f 90       	pop	r8
    1ac4:	08 95       	ret

00001ac6 <rand_r>:
    1ac6:	b9 cf       	rjmp	.-142    	; 0x1a3a <do_rand>

00001ac8 <rand>:
    1ac8:	86 e0       	ldi	r24, 0x06	; 6
    1aca:	91 e0       	ldi	r25, 0x01	; 1
    1acc:	b6 cf       	rjmp	.-148    	; 0x1a3a <do_rand>

00001ace <srand>:
    1ace:	a0 e0       	ldi	r26, 0x00	; 0
    1ad0:	b0 e0       	ldi	r27, 0x00	; 0
    1ad2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    1ad6:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    1ada:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    1ade:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    1ae2:	08 95       	ret

00001ae4 <sprintf>:
    1ae4:	0f 93       	push	r16
    1ae6:	1f 93       	push	r17
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	cd b7       	in	r28, 0x3d	; 61
    1aee:	de b7       	in	r29, 0x3e	; 62
    1af0:	2e 97       	sbiw	r28, 0x0e	; 14
    1af2:	0f b6       	in	r0, 0x3f	; 63
    1af4:	f8 94       	cli
    1af6:	de bf       	out	0x3e, r29	; 62
    1af8:	0f be       	out	0x3f, r0	; 63
    1afa:	cd bf       	out	0x3d, r28	; 61
    1afc:	0d 89       	ldd	r16, Y+21	; 0x15
    1afe:	1e 89       	ldd	r17, Y+22	; 0x16
    1b00:	86 e0       	ldi	r24, 0x06	; 6
    1b02:	8c 83       	std	Y+4, r24	; 0x04
    1b04:	1a 83       	std	Y+2, r17	; 0x02
    1b06:	09 83       	std	Y+1, r16	; 0x01
    1b08:	8f ef       	ldi	r24, 0xFF	; 255
    1b0a:	9f e7       	ldi	r25, 0x7F	; 127
    1b0c:	9e 83       	std	Y+6, r25	; 0x06
    1b0e:	8d 83       	std	Y+5, r24	; 0x05
    1b10:	ae 01       	movw	r20, r28
    1b12:	47 5e       	subi	r20, 0xE7	; 231
    1b14:	5f 4f       	sbci	r21, 0xFF	; 255
    1b16:	6f 89       	ldd	r22, Y+23	; 0x17
    1b18:	78 8d       	ldd	r23, Y+24	; 0x18
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	01 96       	adiw	r24, 0x01	; 1
    1b1e:	10 d0       	rcall	.+32     	; 0x1b40 <vfprintf>
    1b20:	ef 81       	ldd	r30, Y+7	; 0x07
    1b22:	f8 85       	ldd	r31, Y+8	; 0x08
    1b24:	e0 0f       	add	r30, r16
    1b26:	f1 1f       	adc	r31, r17
    1b28:	10 82       	st	Z, r1
    1b2a:	2e 96       	adiw	r28, 0x0e	; 14
    1b2c:	0f b6       	in	r0, 0x3f	; 63
    1b2e:	f8 94       	cli
    1b30:	de bf       	out	0x3e, r29	; 62
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	cd bf       	out	0x3d, r28	; 61
    1b36:	df 91       	pop	r29
    1b38:	cf 91       	pop	r28
    1b3a:	1f 91       	pop	r17
    1b3c:	0f 91       	pop	r16
    1b3e:	08 95       	ret

00001b40 <vfprintf>:
    1b40:	2f 92       	push	r2
    1b42:	3f 92       	push	r3
    1b44:	4f 92       	push	r4
    1b46:	5f 92       	push	r5
    1b48:	6f 92       	push	r6
    1b4a:	7f 92       	push	r7
    1b4c:	8f 92       	push	r8
    1b4e:	9f 92       	push	r9
    1b50:	af 92       	push	r10
    1b52:	bf 92       	push	r11
    1b54:	cf 92       	push	r12
    1b56:	df 92       	push	r13
    1b58:	ef 92       	push	r14
    1b5a:	ff 92       	push	r15
    1b5c:	0f 93       	push	r16
    1b5e:	1f 93       	push	r17
    1b60:	cf 93       	push	r28
    1b62:	df 93       	push	r29
    1b64:	cd b7       	in	r28, 0x3d	; 61
    1b66:	de b7       	in	r29, 0x3e	; 62
    1b68:	2b 97       	sbiw	r28, 0x0b	; 11
    1b6a:	0f b6       	in	r0, 0x3f	; 63
    1b6c:	f8 94       	cli
    1b6e:	de bf       	out	0x3e, r29	; 62
    1b70:	0f be       	out	0x3f, r0	; 63
    1b72:	cd bf       	out	0x3d, r28	; 61
    1b74:	6c 01       	movw	r12, r24
    1b76:	7b 01       	movw	r14, r22
    1b78:	8a 01       	movw	r16, r20
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	17 82       	std	Z+7, r1	; 0x07
    1b7e:	16 82       	std	Z+6, r1	; 0x06
    1b80:	83 81       	ldd	r24, Z+3	; 0x03
    1b82:	81 ff       	sbrs	r24, 1
    1b84:	bf c1       	rjmp	.+894    	; 0x1f04 <vfprintf+0x3c4>
    1b86:	ce 01       	movw	r24, r28
    1b88:	01 96       	adiw	r24, 0x01	; 1
    1b8a:	3c 01       	movw	r6, r24
    1b8c:	f6 01       	movw	r30, r12
    1b8e:	93 81       	ldd	r25, Z+3	; 0x03
    1b90:	f7 01       	movw	r30, r14
    1b92:	93 fd       	sbrc	r25, 3
    1b94:	85 91       	lpm	r24, Z+
    1b96:	93 ff       	sbrs	r25, 3
    1b98:	81 91       	ld	r24, Z+
    1b9a:	7f 01       	movw	r14, r30
    1b9c:	88 23       	and	r24, r24
    1b9e:	09 f4       	brne	.+2      	; 0x1ba2 <vfprintf+0x62>
    1ba0:	ad c1       	rjmp	.+858    	; 0x1efc <vfprintf+0x3bc>
    1ba2:	85 32       	cpi	r24, 0x25	; 37
    1ba4:	39 f4       	brne	.+14     	; 0x1bb4 <vfprintf+0x74>
    1ba6:	93 fd       	sbrc	r25, 3
    1ba8:	85 91       	lpm	r24, Z+
    1baa:	93 ff       	sbrs	r25, 3
    1bac:	81 91       	ld	r24, Z+
    1bae:	7f 01       	movw	r14, r30
    1bb0:	85 32       	cpi	r24, 0x25	; 37
    1bb2:	21 f4       	brne	.+8      	; 0x1bbc <vfprintf+0x7c>
    1bb4:	b6 01       	movw	r22, r12
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	d6 d1       	rcall	.+940    	; 0x1f66 <fputc>
    1bba:	e8 cf       	rjmp	.-48     	; 0x1b8c <vfprintf+0x4c>
    1bbc:	91 2c       	mov	r9, r1
    1bbe:	21 2c       	mov	r2, r1
    1bc0:	31 2c       	mov	r3, r1
    1bc2:	ff e1       	ldi	r31, 0x1F	; 31
    1bc4:	f3 15       	cp	r31, r3
    1bc6:	d8 f0       	brcs	.+54     	; 0x1bfe <vfprintf+0xbe>
    1bc8:	8b 32       	cpi	r24, 0x2B	; 43
    1bca:	79 f0       	breq	.+30     	; 0x1bea <vfprintf+0xaa>
    1bcc:	38 f4       	brcc	.+14     	; 0x1bdc <vfprintf+0x9c>
    1bce:	80 32       	cpi	r24, 0x20	; 32
    1bd0:	79 f0       	breq	.+30     	; 0x1bf0 <vfprintf+0xb0>
    1bd2:	83 32       	cpi	r24, 0x23	; 35
    1bd4:	a1 f4       	brne	.+40     	; 0x1bfe <vfprintf+0xbe>
    1bd6:	23 2d       	mov	r18, r3
    1bd8:	20 61       	ori	r18, 0x10	; 16
    1bda:	1d c0       	rjmp	.+58     	; 0x1c16 <vfprintf+0xd6>
    1bdc:	8d 32       	cpi	r24, 0x2D	; 45
    1bde:	61 f0       	breq	.+24     	; 0x1bf8 <vfprintf+0xb8>
    1be0:	80 33       	cpi	r24, 0x30	; 48
    1be2:	69 f4       	brne	.+26     	; 0x1bfe <vfprintf+0xbe>
    1be4:	23 2d       	mov	r18, r3
    1be6:	21 60       	ori	r18, 0x01	; 1
    1be8:	16 c0       	rjmp	.+44     	; 0x1c16 <vfprintf+0xd6>
    1bea:	83 2d       	mov	r24, r3
    1bec:	82 60       	ori	r24, 0x02	; 2
    1bee:	38 2e       	mov	r3, r24
    1bf0:	e3 2d       	mov	r30, r3
    1bf2:	e4 60       	ori	r30, 0x04	; 4
    1bf4:	3e 2e       	mov	r3, r30
    1bf6:	2a c0       	rjmp	.+84     	; 0x1c4c <vfprintf+0x10c>
    1bf8:	f3 2d       	mov	r31, r3
    1bfa:	f8 60       	ori	r31, 0x08	; 8
    1bfc:	1d c0       	rjmp	.+58     	; 0x1c38 <vfprintf+0xf8>
    1bfe:	37 fc       	sbrc	r3, 7
    1c00:	2d c0       	rjmp	.+90     	; 0x1c5c <vfprintf+0x11c>
    1c02:	20 ed       	ldi	r18, 0xD0	; 208
    1c04:	28 0f       	add	r18, r24
    1c06:	2a 30       	cpi	r18, 0x0A	; 10
    1c08:	40 f0       	brcs	.+16     	; 0x1c1a <vfprintf+0xda>
    1c0a:	8e 32       	cpi	r24, 0x2E	; 46
    1c0c:	b9 f4       	brne	.+46     	; 0x1c3c <vfprintf+0xfc>
    1c0e:	36 fc       	sbrc	r3, 6
    1c10:	75 c1       	rjmp	.+746    	; 0x1efc <vfprintf+0x3bc>
    1c12:	23 2d       	mov	r18, r3
    1c14:	20 64       	ori	r18, 0x40	; 64
    1c16:	32 2e       	mov	r3, r18
    1c18:	19 c0       	rjmp	.+50     	; 0x1c4c <vfprintf+0x10c>
    1c1a:	36 fe       	sbrs	r3, 6
    1c1c:	06 c0       	rjmp	.+12     	; 0x1c2a <vfprintf+0xea>
    1c1e:	8a e0       	ldi	r24, 0x0A	; 10
    1c20:	98 9e       	mul	r9, r24
    1c22:	20 0d       	add	r18, r0
    1c24:	11 24       	eor	r1, r1
    1c26:	92 2e       	mov	r9, r18
    1c28:	11 c0       	rjmp	.+34     	; 0x1c4c <vfprintf+0x10c>
    1c2a:	ea e0       	ldi	r30, 0x0A	; 10
    1c2c:	2e 9e       	mul	r2, r30
    1c2e:	20 0d       	add	r18, r0
    1c30:	11 24       	eor	r1, r1
    1c32:	22 2e       	mov	r2, r18
    1c34:	f3 2d       	mov	r31, r3
    1c36:	f0 62       	ori	r31, 0x20	; 32
    1c38:	3f 2e       	mov	r3, r31
    1c3a:	08 c0       	rjmp	.+16     	; 0x1c4c <vfprintf+0x10c>
    1c3c:	8c 36       	cpi	r24, 0x6C	; 108
    1c3e:	21 f4       	brne	.+8      	; 0x1c48 <vfprintf+0x108>
    1c40:	83 2d       	mov	r24, r3
    1c42:	80 68       	ori	r24, 0x80	; 128
    1c44:	38 2e       	mov	r3, r24
    1c46:	02 c0       	rjmp	.+4      	; 0x1c4c <vfprintf+0x10c>
    1c48:	88 36       	cpi	r24, 0x68	; 104
    1c4a:	41 f4       	brne	.+16     	; 0x1c5c <vfprintf+0x11c>
    1c4c:	f7 01       	movw	r30, r14
    1c4e:	93 fd       	sbrc	r25, 3
    1c50:	85 91       	lpm	r24, Z+
    1c52:	93 ff       	sbrs	r25, 3
    1c54:	81 91       	ld	r24, Z+
    1c56:	7f 01       	movw	r14, r30
    1c58:	81 11       	cpse	r24, r1
    1c5a:	b3 cf       	rjmp	.-154    	; 0x1bc2 <vfprintf+0x82>
    1c5c:	98 2f       	mov	r25, r24
    1c5e:	9f 7d       	andi	r25, 0xDF	; 223
    1c60:	95 54       	subi	r25, 0x45	; 69
    1c62:	93 30       	cpi	r25, 0x03	; 3
    1c64:	28 f4       	brcc	.+10     	; 0x1c70 <vfprintf+0x130>
    1c66:	0c 5f       	subi	r16, 0xFC	; 252
    1c68:	1f 4f       	sbci	r17, 0xFF	; 255
    1c6a:	9f e3       	ldi	r25, 0x3F	; 63
    1c6c:	99 83       	std	Y+1, r25	; 0x01
    1c6e:	0d c0       	rjmp	.+26     	; 0x1c8a <vfprintf+0x14a>
    1c70:	83 36       	cpi	r24, 0x63	; 99
    1c72:	31 f0       	breq	.+12     	; 0x1c80 <vfprintf+0x140>
    1c74:	83 37       	cpi	r24, 0x73	; 115
    1c76:	71 f0       	breq	.+28     	; 0x1c94 <vfprintf+0x154>
    1c78:	83 35       	cpi	r24, 0x53	; 83
    1c7a:	09 f0       	breq	.+2      	; 0x1c7e <vfprintf+0x13e>
    1c7c:	55 c0       	rjmp	.+170    	; 0x1d28 <vfprintf+0x1e8>
    1c7e:	20 c0       	rjmp	.+64     	; 0x1cc0 <vfprintf+0x180>
    1c80:	f8 01       	movw	r30, r16
    1c82:	80 81       	ld	r24, Z
    1c84:	89 83       	std	Y+1, r24	; 0x01
    1c86:	0e 5f       	subi	r16, 0xFE	; 254
    1c88:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8a:	88 24       	eor	r8, r8
    1c8c:	83 94       	inc	r8
    1c8e:	91 2c       	mov	r9, r1
    1c90:	53 01       	movw	r10, r6
    1c92:	12 c0       	rjmp	.+36     	; 0x1cb8 <vfprintf+0x178>
    1c94:	28 01       	movw	r4, r16
    1c96:	f2 e0       	ldi	r31, 0x02	; 2
    1c98:	4f 0e       	add	r4, r31
    1c9a:	51 1c       	adc	r5, r1
    1c9c:	f8 01       	movw	r30, r16
    1c9e:	a0 80       	ld	r10, Z
    1ca0:	b1 80       	ldd	r11, Z+1	; 0x01
    1ca2:	36 fe       	sbrs	r3, 6
    1ca4:	03 c0       	rjmp	.+6      	; 0x1cac <vfprintf+0x16c>
    1ca6:	69 2d       	mov	r22, r9
    1ca8:	70 e0       	ldi	r23, 0x00	; 0
    1caa:	02 c0       	rjmp	.+4      	; 0x1cb0 <vfprintf+0x170>
    1cac:	6f ef       	ldi	r22, 0xFF	; 255
    1cae:	7f ef       	ldi	r23, 0xFF	; 255
    1cb0:	c5 01       	movw	r24, r10
    1cb2:	4e d1       	rcall	.+668    	; 0x1f50 <strnlen>
    1cb4:	4c 01       	movw	r8, r24
    1cb6:	82 01       	movw	r16, r4
    1cb8:	f3 2d       	mov	r31, r3
    1cba:	ff 77       	andi	r31, 0x7F	; 127
    1cbc:	3f 2e       	mov	r3, r31
    1cbe:	15 c0       	rjmp	.+42     	; 0x1cea <vfprintf+0x1aa>
    1cc0:	28 01       	movw	r4, r16
    1cc2:	22 e0       	ldi	r18, 0x02	; 2
    1cc4:	42 0e       	add	r4, r18
    1cc6:	51 1c       	adc	r5, r1
    1cc8:	f8 01       	movw	r30, r16
    1cca:	a0 80       	ld	r10, Z
    1ccc:	b1 80       	ldd	r11, Z+1	; 0x01
    1cce:	36 fe       	sbrs	r3, 6
    1cd0:	03 c0       	rjmp	.+6      	; 0x1cd8 <vfprintf+0x198>
    1cd2:	69 2d       	mov	r22, r9
    1cd4:	70 e0       	ldi	r23, 0x00	; 0
    1cd6:	02 c0       	rjmp	.+4      	; 0x1cdc <vfprintf+0x19c>
    1cd8:	6f ef       	ldi	r22, 0xFF	; 255
    1cda:	7f ef       	ldi	r23, 0xFF	; 255
    1cdc:	c5 01       	movw	r24, r10
    1cde:	2d d1       	rcall	.+602    	; 0x1f3a <strnlen_P>
    1ce0:	4c 01       	movw	r8, r24
    1ce2:	f3 2d       	mov	r31, r3
    1ce4:	f0 68       	ori	r31, 0x80	; 128
    1ce6:	3f 2e       	mov	r3, r31
    1ce8:	82 01       	movw	r16, r4
    1cea:	33 fc       	sbrc	r3, 3
    1cec:	19 c0       	rjmp	.+50     	; 0x1d20 <vfprintf+0x1e0>
    1cee:	82 2d       	mov	r24, r2
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	88 16       	cp	r8, r24
    1cf4:	99 06       	cpc	r9, r25
    1cf6:	a0 f4       	brcc	.+40     	; 0x1d20 <vfprintf+0x1e0>
    1cf8:	b6 01       	movw	r22, r12
    1cfa:	80 e2       	ldi	r24, 0x20	; 32
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	33 d1       	rcall	.+614    	; 0x1f66 <fputc>
    1d00:	2a 94       	dec	r2
    1d02:	f5 cf       	rjmp	.-22     	; 0x1cee <vfprintf+0x1ae>
    1d04:	f5 01       	movw	r30, r10
    1d06:	37 fc       	sbrc	r3, 7
    1d08:	85 91       	lpm	r24, Z+
    1d0a:	37 fe       	sbrs	r3, 7
    1d0c:	81 91       	ld	r24, Z+
    1d0e:	5f 01       	movw	r10, r30
    1d10:	b6 01       	movw	r22, r12
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	28 d1       	rcall	.+592    	; 0x1f66 <fputc>
    1d16:	21 10       	cpse	r2, r1
    1d18:	2a 94       	dec	r2
    1d1a:	21 e0       	ldi	r18, 0x01	; 1
    1d1c:	82 1a       	sub	r8, r18
    1d1e:	91 08       	sbc	r9, r1
    1d20:	81 14       	cp	r8, r1
    1d22:	91 04       	cpc	r9, r1
    1d24:	79 f7       	brne	.-34     	; 0x1d04 <vfprintf+0x1c4>
    1d26:	e1 c0       	rjmp	.+450    	; 0x1eea <vfprintf+0x3aa>
    1d28:	84 36       	cpi	r24, 0x64	; 100
    1d2a:	11 f0       	breq	.+4      	; 0x1d30 <vfprintf+0x1f0>
    1d2c:	89 36       	cpi	r24, 0x69	; 105
    1d2e:	39 f5       	brne	.+78     	; 0x1d7e <vfprintf+0x23e>
    1d30:	f8 01       	movw	r30, r16
    1d32:	37 fe       	sbrs	r3, 7
    1d34:	07 c0       	rjmp	.+14     	; 0x1d44 <vfprintf+0x204>
    1d36:	60 81       	ld	r22, Z
    1d38:	71 81       	ldd	r23, Z+1	; 0x01
    1d3a:	82 81       	ldd	r24, Z+2	; 0x02
    1d3c:	93 81       	ldd	r25, Z+3	; 0x03
    1d3e:	0c 5f       	subi	r16, 0xFC	; 252
    1d40:	1f 4f       	sbci	r17, 0xFF	; 255
    1d42:	08 c0       	rjmp	.+16     	; 0x1d54 <vfprintf+0x214>
    1d44:	60 81       	ld	r22, Z
    1d46:	71 81       	ldd	r23, Z+1	; 0x01
    1d48:	07 2e       	mov	r0, r23
    1d4a:	00 0c       	add	r0, r0
    1d4c:	88 0b       	sbc	r24, r24
    1d4e:	99 0b       	sbc	r25, r25
    1d50:	0e 5f       	subi	r16, 0xFE	; 254
    1d52:	1f 4f       	sbci	r17, 0xFF	; 255
    1d54:	f3 2d       	mov	r31, r3
    1d56:	ff 76       	andi	r31, 0x6F	; 111
    1d58:	3f 2e       	mov	r3, r31
    1d5a:	97 ff       	sbrs	r25, 7
    1d5c:	09 c0       	rjmp	.+18     	; 0x1d70 <vfprintf+0x230>
    1d5e:	90 95       	com	r25
    1d60:	80 95       	com	r24
    1d62:	70 95       	com	r23
    1d64:	61 95       	neg	r22
    1d66:	7f 4f       	sbci	r23, 0xFF	; 255
    1d68:	8f 4f       	sbci	r24, 0xFF	; 255
    1d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d6c:	f0 68       	ori	r31, 0x80	; 128
    1d6e:	3f 2e       	mov	r3, r31
    1d70:	2a e0       	ldi	r18, 0x0A	; 10
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	a3 01       	movw	r20, r6
    1d76:	33 d1       	rcall	.+614    	; 0x1fde <__ultoa_invert>
    1d78:	88 2e       	mov	r8, r24
    1d7a:	86 18       	sub	r8, r6
    1d7c:	44 c0       	rjmp	.+136    	; 0x1e06 <vfprintf+0x2c6>
    1d7e:	85 37       	cpi	r24, 0x75	; 117
    1d80:	31 f4       	brne	.+12     	; 0x1d8e <vfprintf+0x24e>
    1d82:	23 2d       	mov	r18, r3
    1d84:	2f 7e       	andi	r18, 0xEF	; 239
    1d86:	b2 2e       	mov	r11, r18
    1d88:	2a e0       	ldi	r18, 0x0A	; 10
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	25 c0       	rjmp	.+74     	; 0x1dd8 <vfprintf+0x298>
    1d8e:	93 2d       	mov	r25, r3
    1d90:	99 7f       	andi	r25, 0xF9	; 249
    1d92:	b9 2e       	mov	r11, r25
    1d94:	8f 36       	cpi	r24, 0x6F	; 111
    1d96:	c1 f0       	breq	.+48     	; 0x1dc8 <vfprintf+0x288>
    1d98:	18 f4       	brcc	.+6      	; 0x1da0 <vfprintf+0x260>
    1d9a:	88 35       	cpi	r24, 0x58	; 88
    1d9c:	79 f0       	breq	.+30     	; 0x1dbc <vfprintf+0x27c>
    1d9e:	ae c0       	rjmp	.+348    	; 0x1efc <vfprintf+0x3bc>
    1da0:	80 37       	cpi	r24, 0x70	; 112
    1da2:	19 f0       	breq	.+6      	; 0x1daa <vfprintf+0x26a>
    1da4:	88 37       	cpi	r24, 0x78	; 120
    1da6:	21 f0       	breq	.+8      	; 0x1db0 <vfprintf+0x270>
    1da8:	a9 c0       	rjmp	.+338    	; 0x1efc <vfprintf+0x3bc>
    1daa:	e9 2f       	mov	r30, r25
    1dac:	e0 61       	ori	r30, 0x10	; 16
    1dae:	be 2e       	mov	r11, r30
    1db0:	b4 fe       	sbrs	r11, 4
    1db2:	0d c0       	rjmp	.+26     	; 0x1dce <vfprintf+0x28e>
    1db4:	fb 2d       	mov	r31, r11
    1db6:	f4 60       	ori	r31, 0x04	; 4
    1db8:	bf 2e       	mov	r11, r31
    1dba:	09 c0       	rjmp	.+18     	; 0x1dce <vfprintf+0x28e>
    1dbc:	34 fe       	sbrs	r3, 4
    1dbe:	0a c0       	rjmp	.+20     	; 0x1dd4 <vfprintf+0x294>
    1dc0:	29 2f       	mov	r18, r25
    1dc2:	26 60       	ori	r18, 0x06	; 6
    1dc4:	b2 2e       	mov	r11, r18
    1dc6:	06 c0       	rjmp	.+12     	; 0x1dd4 <vfprintf+0x294>
    1dc8:	28 e0       	ldi	r18, 0x08	; 8
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	05 c0       	rjmp	.+10     	; 0x1dd8 <vfprintf+0x298>
    1dce:	20 e1       	ldi	r18, 0x10	; 16
    1dd0:	30 e0       	ldi	r19, 0x00	; 0
    1dd2:	02 c0       	rjmp	.+4      	; 0x1dd8 <vfprintf+0x298>
    1dd4:	20 e1       	ldi	r18, 0x10	; 16
    1dd6:	32 e0       	ldi	r19, 0x02	; 2
    1dd8:	f8 01       	movw	r30, r16
    1dda:	b7 fe       	sbrs	r11, 7
    1ddc:	07 c0       	rjmp	.+14     	; 0x1dec <vfprintf+0x2ac>
    1dde:	60 81       	ld	r22, Z
    1de0:	71 81       	ldd	r23, Z+1	; 0x01
    1de2:	82 81       	ldd	r24, Z+2	; 0x02
    1de4:	93 81       	ldd	r25, Z+3	; 0x03
    1de6:	0c 5f       	subi	r16, 0xFC	; 252
    1de8:	1f 4f       	sbci	r17, 0xFF	; 255
    1dea:	06 c0       	rjmp	.+12     	; 0x1df8 <vfprintf+0x2b8>
    1dec:	60 81       	ld	r22, Z
    1dee:	71 81       	ldd	r23, Z+1	; 0x01
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	0e 5f       	subi	r16, 0xFE	; 254
    1df6:	1f 4f       	sbci	r17, 0xFF	; 255
    1df8:	a3 01       	movw	r20, r6
    1dfa:	f1 d0       	rcall	.+482    	; 0x1fde <__ultoa_invert>
    1dfc:	88 2e       	mov	r8, r24
    1dfe:	86 18       	sub	r8, r6
    1e00:	fb 2d       	mov	r31, r11
    1e02:	ff 77       	andi	r31, 0x7F	; 127
    1e04:	3f 2e       	mov	r3, r31
    1e06:	36 fe       	sbrs	r3, 6
    1e08:	0d c0       	rjmp	.+26     	; 0x1e24 <vfprintf+0x2e4>
    1e0a:	23 2d       	mov	r18, r3
    1e0c:	2e 7f       	andi	r18, 0xFE	; 254
    1e0e:	a2 2e       	mov	r10, r18
    1e10:	89 14       	cp	r8, r9
    1e12:	58 f4       	brcc	.+22     	; 0x1e2a <vfprintf+0x2ea>
    1e14:	34 fe       	sbrs	r3, 4
    1e16:	0b c0       	rjmp	.+22     	; 0x1e2e <vfprintf+0x2ee>
    1e18:	32 fc       	sbrc	r3, 2
    1e1a:	09 c0       	rjmp	.+18     	; 0x1e2e <vfprintf+0x2ee>
    1e1c:	83 2d       	mov	r24, r3
    1e1e:	8e 7e       	andi	r24, 0xEE	; 238
    1e20:	a8 2e       	mov	r10, r24
    1e22:	05 c0       	rjmp	.+10     	; 0x1e2e <vfprintf+0x2ee>
    1e24:	b8 2c       	mov	r11, r8
    1e26:	a3 2c       	mov	r10, r3
    1e28:	03 c0       	rjmp	.+6      	; 0x1e30 <vfprintf+0x2f0>
    1e2a:	b8 2c       	mov	r11, r8
    1e2c:	01 c0       	rjmp	.+2      	; 0x1e30 <vfprintf+0x2f0>
    1e2e:	b9 2c       	mov	r11, r9
    1e30:	a4 fe       	sbrs	r10, 4
    1e32:	0f c0       	rjmp	.+30     	; 0x1e52 <vfprintf+0x312>
    1e34:	fe 01       	movw	r30, r28
    1e36:	e8 0d       	add	r30, r8
    1e38:	f1 1d       	adc	r31, r1
    1e3a:	80 81       	ld	r24, Z
    1e3c:	80 33       	cpi	r24, 0x30	; 48
    1e3e:	21 f4       	brne	.+8      	; 0x1e48 <vfprintf+0x308>
    1e40:	9a 2d       	mov	r25, r10
    1e42:	99 7e       	andi	r25, 0xE9	; 233
    1e44:	a9 2e       	mov	r10, r25
    1e46:	09 c0       	rjmp	.+18     	; 0x1e5a <vfprintf+0x31a>
    1e48:	a2 fe       	sbrs	r10, 2
    1e4a:	06 c0       	rjmp	.+12     	; 0x1e58 <vfprintf+0x318>
    1e4c:	b3 94       	inc	r11
    1e4e:	b3 94       	inc	r11
    1e50:	04 c0       	rjmp	.+8      	; 0x1e5a <vfprintf+0x31a>
    1e52:	8a 2d       	mov	r24, r10
    1e54:	86 78       	andi	r24, 0x86	; 134
    1e56:	09 f0       	breq	.+2      	; 0x1e5a <vfprintf+0x31a>
    1e58:	b3 94       	inc	r11
    1e5a:	a3 fc       	sbrc	r10, 3
    1e5c:	10 c0       	rjmp	.+32     	; 0x1e7e <vfprintf+0x33e>
    1e5e:	a0 fe       	sbrs	r10, 0
    1e60:	06 c0       	rjmp	.+12     	; 0x1e6e <vfprintf+0x32e>
    1e62:	b2 14       	cp	r11, r2
    1e64:	80 f4       	brcc	.+32     	; 0x1e86 <vfprintf+0x346>
    1e66:	28 0c       	add	r2, r8
    1e68:	92 2c       	mov	r9, r2
    1e6a:	9b 18       	sub	r9, r11
    1e6c:	0d c0       	rjmp	.+26     	; 0x1e88 <vfprintf+0x348>
    1e6e:	b2 14       	cp	r11, r2
    1e70:	58 f4       	brcc	.+22     	; 0x1e88 <vfprintf+0x348>
    1e72:	b6 01       	movw	r22, r12
    1e74:	80 e2       	ldi	r24, 0x20	; 32
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	76 d0       	rcall	.+236    	; 0x1f66 <fputc>
    1e7a:	b3 94       	inc	r11
    1e7c:	f8 cf       	rjmp	.-16     	; 0x1e6e <vfprintf+0x32e>
    1e7e:	b2 14       	cp	r11, r2
    1e80:	18 f4       	brcc	.+6      	; 0x1e88 <vfprintf+0x348>
    1e82:	2b 18       	sub	r2, r11
    1e84:	02 c0       	rjmp	.+4      	; 0x1e8a <vfprintf+0x34a>
    1e86:	98 2c       	mov	r9, r8
    1e88:	21 2c       	mov	r2, r1
    1e8a:	a4 fe       	sbrs	r10, 4
    1e8c:	0f c0       	rjmp	.+30     	; 0x1eac <vfprintf+0x36c>
    1e8e:	b6 01       	movw	r22, r12
    1e90:	80 e3       	ldi	r24, 0x30	; 48
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	68 d0       	rcall	.+208    	; 0x1f66 <fputc>
    1e96:	a2 fe       	sbrs	r10, 2
    1e98:	16 c0       	rjmp	.+44     	; 0x1ec6 <vfprintf+0x386>
    1e9a:	a1 fc       	sbrc	r10, 1
    1e9c:	03 c0       	rjmp	.+6      	; 0x1ea4 <vfprintf+0x364>
    1e9e:	88 e7       	ldi	r24, 0x78	; 120
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	02 c0       	rjmp	.+4      	; 0x1ea8 <vfprintf+0x368>
    1ea4:	88 e5       	ldi	r24, 0x58	; 88
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	b6 01       	movw	r22, r12
    1eaa:	0c c0       	rjmp	.+24     	; 0x1ec4 <vfprintf+0x384>
    1eac:	8a 2d       	mov	r24, r10
    1eae:	86 78       	andi	r24, 0x86	; 134
    1eb0:	51 f0       	breq	.+20     	; 0x1ec6 <vfprintf+0x386>
    1eb2:	a1 fe       	sbrs	r10, 1
    1eb4:	02 c0       	rjmp	.+4      	; 0x1eba <vfprintf+0x37a>
    1eb6:	8b e2       	ldi	r24, 0x2B	; 43
    1eb8:	01 c0       	rjmp	.+2      	; 0x1ebc <vfprintf+0x37c>
    1eba:	80 e2       	ldi	r24, 0x20	; 32
    1ebc:	a7 fc       	sbrc	r10, 7
    1ebe:	8d e2       	ldi	r24, 0x2D	; 45
    1ec0:	b6 01       	movw	r22, r12
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	50 d0       	rcall	.+160    	; 0x1f66 <fputc>
    1ec6:	89 14       	cp	r8, r9
    1ec8:	30 f4       	brcc	.+12     	; 0x1ed6 <vfprintf+0x396>
    1eca:	b6 01       	movw	r22, r12
    1ecc:	80 e3       	ldi	r24, 0x30	; 48
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	4a d0       	rcall	.+148    	; 0x1f66 <fputc>
    1ed2:	9a 94       	dec	r9
    1ed4:	f8 cf       	rjmp	.-16     	; 0x1ec6 <vfprintf+0x386>
    1ed6:	8a 94       	dec	r8
    1ed8:	f3 01       	movw	r30, r6
    1eda:	e8 0d       	add	r30, r8
    1edc:	f1 1d       	adc	r31, r1
    1ede:	80 81       	ld	r24, Z
    1ee0:	b6 01       	movw	r22, r12
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	40 d0       	rcall	.+128    	; 0x1f66 <fputc>
    1ee6:	81 10       	cpse	r8, r1
    1ee8:	f6 cf       	rjmp	.-20     	; 0x1ed6 <vfprintf+0x396>
    1eea:	22 20       	and	r2, r2
    1eec:	09 f4       	brne	.+2      	; 0x1ef0 <vfprintf+0x3b0>
    1eee:	4e ce       	rjmp	.-868    	; 0x1b8c <vfprintf+0x4c>
    1ef0:	b6 01       	movw	r22, r12
    1ef2:	80 e2       	ldi	r24, 0x20	; 32
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	37 d0       	rcall	.+110    	; 0x1f66 <fputc>
    1ef8:	2a 94       	dec	r2
    1efa:	f7 cf       	rjmp	.-18     	; 0x1eea <vfprintf+0x3aa>
    1efc:	f6 01       	movw	r30, r12
    1efe:	86 81       	ldd	r24, Z+6	; 0x06
    1f00:	97 81       	ldd	r25, Z+7	; 0x07
    1f02:	02 c0       	rjmp	.+4      	; 0x1f08 <vfprintf+0x3c8>
    1f04:	8f ef       	ldi	r24, 0xFF	; 255
    1f06:	9f ef       	ldi	r25, 0xFF	; 255
    1f08:	2b 96       	adiw	r28, 0x0b	; 11
    1f0a:	0f b6       	in	r0, 0x3f	; 63
    1f0c:	f8 94       	cli
    1f0e:	de bf       	out	0x3e, r29	; 62
    1f10:	0f be       	out	0x3f, r0	; 63
    1f12:	cd bf       	out	0x3d, r28	; 61
    1f14:	df 91       	pop	r29
    1f16:	cf 91       	pop	r28
    1f18:	1f 91       	pop	r17
    1f1a:	0f 91       	pop	r16
    1f1c:	ff 90       	pop	r15
    1f1e:	ef 90       	pop	r14
    1f20:	df 90       	pop	r13
    1f22:	cf 90       	pop	r12
    1f24:	bf 90       	pop	r11
    1f26:	af 90       	pop	r10
    1f28:	9f 90       	pop	r9
    1f2a:	8f 90       	pop	r8
    1f2c:	7f 90       	pop	r7
    1f2e:	6f 90       	pop	r6
    1f30:	5f 90       	pop	r5
    1f32:	4f 90       	pop	r4
    1f34:	3f 90       	pop	r3
    1f36:	2f 90       	pop	r2
    1f38:	08 95       	ret

00001f3a <strnlen_P>:
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	05 90       	lpm	r0, Z+
    1f3e:	61 50       	subi	r22, 0x01	; 1
    1f40:	70 40       	sbci	r23, 0x00	; 0
    1f42:	01 10       	cpse	r0, r1
    1f44:	d8 f7       	brcc	.-10     	; 0x1f3c <strnlen_P+0x2>
    1f46:	80 95       	com	r24
    1f48:	90 95       	com	r25
    1f4a:	8e 0f       	add	r24, r30
    1f4c:	9f 1f       	adc	r25, r31
    1f4e:	08 95       	ret

00001f50 <strnlen>:
    1f50:	fc 01       	movw	r30, r24
    1f52:	61 50       	subi	r22, 0x01	; 1
    1f54:	70 40       	sbci	r23, 0x00	; 0
    1f56:	01 90       	ld	r0, Z+
    1f58:	01 10       	cpse	r0, r1
    1f5a:	d8 f7       	brcc	.-10     	; 0x1f52 <strnlen+0x2>
    1f5c:	80 95       	com	r24
    1f5e:	90 95       	com	r25
    1f60:	8e 0f       	add	r24, r30
    1f62:	9f 1f       	adc	r25, r31
    1f64:	08 95       	ret

00001f66 <fputc>:
    1f66:	0f 93       	push	r16
    1f68:	1f 93       	push	r17
    1f6a:	cf 93       	push	r28
    1f6c:	df 93       	push	r29
    1f6e:	fb 01       	movw	r30, r22
    1f70:	23 81       	ldd	r18, Z+3	; 0x03
    1f72:	21 fd       	sbrc	r18, 1
    1f74:	03 c0       	rjmp	.+6      	; 0x1f7c <fputc+0x16>
    1f76:	8f ef       	ldi	r24, 0xFF	; 255
    1f78:	9f ef       	ldi	r25, 0xFF	; 255
    1f7a:	2c c0       	rjmp	.+88     	; 0x1fd4 <fputc+0x6e>
    1f7c:	22 ff       	sbrs	r18, 2
    1f7e:	16 c0       	rjmp	.+44     	; 0x1fac <fputc+0x46>
    1f80:	46 81       	ldd	r20, Z+6	; 0x06
    1f82:	57 81       	ldd	r21, Z+7	; 0x07
    1f84:	24 81       	ldd	r18, Z+4	; 0x04
    1f86:	35 81       	ldd	r19, Z+5	; 0x05
    1f88:	42 17       	cp	r20, r18
    1f8a:	53 07       	cpc	r21, r19
    1f8c:	44 f4       	brge	.+16     	; 0x1f9e <fputc+0x38>
    1f8e:	a0 81       	ld	r26, Z
    1f90:	b1 81       	ldd	r27, Z+1	; 0x01
    1f92:	9d 01       	movw	r18, r26
    1f94:	2f 5f       	subi	r18, 0xFF	; 255
    1f96:	3f 4f       	sbci	r19, 0xFF	; 255
    1f98:	31 83       	std	Z+1, r19	; 0x01
    1f9a:	20 83       	st	Z, r18
    1f9c:	8c 93       	st	X, r24
    1f9e:	26 81       	ldd	r18, Z+6	; 0x06
    1fa0:	37 81       	ldd	r19, Z+7	; 0x07
    1fa2:	2f 5f       	subi	r18, 0xFF	; 255
    1fa4:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa6:	37 83       	std	Z+7, r19	; 0x07
    1fa8:	26 83       	std	Z+6, r18	; 0x06
    1faa:	14 c0       	rjmp	.+40     	; 0x1fd4 <fputc+0x6e>
    1fac:	8b 01       	movw	r16, r22
    1fae:	ec 01       	movw	r28, r24
    1fb0:	fb 01       	movw	r30, r22
    1fb2:	00 84       	ldd	r0, Z+8	; 0x08
    1fb4:	f1 85       	ldd	r31, Z+9	; 0x09
    1fb6:	e0 2d       	mov	r30, r0
    1fb8:	09 95       	icall
    1fba:	89 2b       	or	r24, r25
    1fbc:	e1 f6       	brne	.-72     	; 0x1f76 <fputc+0x10>
    1fbe:	d8 01       	movw	r26, r16
    1fc0:	16 96       	adiw	r26, 0x06	; 6
    1fc2:	8d 91       	ld	r24, X+
    1fc4:	9c 91       	ld	r25, X
    1fc6:	17 97       	sbiw	r26, 0x07	; 7
    1fc8:	01 96       	adiw	r24, 0x01	; 1
    1fca:	17 96       	adiw	r26, 0x07	; 7
    1fcc:	9c 93       	st	X, r25
    1fce:	8e 93       	st	-X, r24
    1fd0:	16 97       	sbiw	r26, 0x06	; 6
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	df 91       	pop	r29
    1fd6:	cf 91       	pop	r28
    1fd8:	1f 91       	pop	r17
    1fda:	0f 91       	pop	r16
    1fdc:	08 95       	ret

00001fde <__ultoa_invert>:
    1fde:	fa 01       	movw	r30, r20
    1fe0:	aa 27       	eor	r26, r26
    1fe2:	28 30       	cpi	r18, 0x08	; 8
    1fe4:	51 f1       	breq	.+84     	; 0x203a <__ultoa_invert+0x5c>
    1fe6:	20 31       	cpi	r18, 0x10	; 16
    1fe8:	81 f1       	breq	.+96     	; 0x204a <__ultoa_invert+0x6c>
    1fea:	e8 94       	clt
    1fec:	6f 93       	push	r22
    1fee:	6e 7f       	andi	r22, 0xFE	; 254
    1ff0:	6e 5f       	subi	r22, 0xFE	; 254
    1ff2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff8:	af 4f       	sbci	r26, 0xFF	; 255
    1ffa:	b1 e0       	ldi	r27, 0x01	; 1
    1ffc:	3e d0       	rcall	.+124    	; 0x207a <__ultoa_invert+0x9c>
    1ffe:	b4 e0       	ldi	r27, 0x04	; 4
    2000:	3c d0       	rcall	.+120    	; 0x207a <__ultoa_invert+0x9c>
    2002:	67 0f       	add	r22, r23
    2004:	78 1f       	adc	r23, r24
    2006:	89 1f       	adc	r24, r25
    2008:	9a 1f       	adc	r25, r26
    200a:	a1 1d       	adc	r26, r1
    200c:	68 0f       	add	r22, r24
    200e:	79 1f       	adc	r23, r25
    2010:	8a 1f       	adc	r24, r26
    2012:	91 1d       	adc	r25, r1
    2014:	a1 1d       	adc	r26, r1
    2016:	6a 0f       	add	r22, r26
    2018:	71 1d       	adc	r23, r1
    201a:	81 1d       	adc	r24, r1
    201c:	91 1d       	adc	r25, r1
    201e:	a1 1d       	adc	r26, r1
    2020:	20 d0       	rcall	.+64     	; 0x2062 <__ultoa_invert+0x84>
    2022:	09 f4       	brne	.+2      	; 0x2026 <__ultoa_invert+0x48>
    2024:	68 94       	set
    2026:	3f 91       	pop	r19
    2028:	2a e0       	ldi	r18, 0x0A	; 10
    202a:	26 9f       	mul	r18, r22
    202c:	11 24       	eor	r1, r1
    202e:	30 19       	sub	r19, r0
    2030:	30 5d       	subi	r19, 0xD0	; 208
    2032:	31 93       	st	Z+, r19
    2034:	de f6       	brtc	.-74     	; 0x1fec <__ultoa_invert+0xe>
    2036:	cf 01       	movw	r24, r30
    2038:	08 95       	ret
    203a:	46 2f       	mov	r20, r22
    203c:	47 70       	andi	r20, 0x07	; 7
    203e:	40 5d       	subi	r20, 0xD0	; 208
    2040:	41 93       	st	Z+, r20
    2042:	b3 e0       	ldi	r27, 0x03	; 3
    2044:	0f d0       	rcall	.+30     	; 0x2064 <__ultoa_invert+0x86>
    2046:	c9 f7       	brne	.-14     	; 0x203a <__ultoa_invert+0x5c>
    2048:	f6 cf       	rjmp	.-20     	; 0x2036 <__ultoa_invert+0x58>
    204a:	46 2f       	mov	r20, r22
    204c:	4f 70       	andi	r20, 0x0F	; 15
    204e:	40 5d       	subi	r20, 0xD0	; 208
    2050:	4a 33       	cpi	r20, 0x3A	; 58
    2052:	18 f0       	brcs	.+6      	; 0x205a <__ultoa_invert+0x7c>
    2054:	49 5d       	subi	r20, 0xD9	; 217
    2056:	31 fd       	sbrc	r19, 1
    2058:	40 52       	subi	r20, 0x20	; 32
    205a:	41 93       	st	Z+, r20
    205c:	02 d0       	rcall	.+4      	; 0x2062 <__ultoa_invert+0x84>
    205e:	a9 f7       	brne	.-22     	; 0x204a <__ultoa_invert+0x6c>
    2060:	ea cf       	rjmp	.-44     	; 0x2036 <__ultoa_invert+0x58>
    2062:	b4 e0       	ldi	r27, 0x04	; 4
    2064:	a6 95       	lsr	r26
    2066:	97 95       	ror	r25
    2068:	87 95       	ror	r24
    206a:	77 95       	ror	r23
    206c:	67 95       	ror	r22
    206e:	ba 95       	dec	r27
    2070:	c9 f7       	brne	.-14     	; 0x2064 <__ultoa_invert+0x86>
    2072:	00 97       	sbiw	r24, 0x00	; 0
    2074:	61 05       	cpc	r22, r1
    2076:	71 05       	cpc	r23, r1
    2078:	08 95       	ret
    207a:	9b 01       	movw	r18, r22
    207c:	ac 01       	movw	r20, r24
    207e:	0a 2e       	mov	r0, r26
    2080:	06 94       	lsr	r0
    2082:	57 95       	ror	r21
    2084:	47 95       	ror	r20
    2086:	37 95       	ror	r19
    2088:	27 95       	ror	r18
    208a:	ba 95       	dec	r27
    208c:	c9 f7       	brne	.-14     	; 0x2080 <__ultoa_invert+0xa2>
    208e:	62 0f       	add	r22, r18
    2090:	73 1f       	adc	r23, r19
    2092:	84 1f       	adc	r24, r20
    2094:	95 1f       	adc	r25, r21
    2096:	a0 1d       	adc	r26, r0
    2098:	08 95       	ret

0000209a <eeprom_read_byte>:
    209a:	f9 99       	sbic	0x1f, 1	; 31
    209c:	fe cf       	rjmp	.-4      	; 0x209a <eeprom_read_byte>
    209e:	92 bd       	out	0x22, r25	; 34
    20a0:	81 bd       	out	0x21, r24	; 33
    20a2:	f8 9a       	sbi	0x1f, 0	; 31
    20a4:	99 27       	eor	r25, r25
    20a6:	80 b5       	in	r24, 0x20	; 32
    20a8:	08 95       	ret

000020aa <eeprom_write_byte>:
    20aa:	26 2f       	mov	r18, r22

000020ac <eeprom_write_r18>:
    20ac:	f9 99       	sbic	0x1f, 1	; 31
    20ae:	fe cf       	rjmp	.-4      	; 0x20ac <eeprom_write_r18>
    20b0:	1f ba       	out	0x1f, r1	; 31
    20b2:	92 bd       	out	0x22, r25	; 34
    20b4:	81 bd       	out	0x21, r24	; 33
    20b6:	20 bd       	out	0x20, r18	; 32
    20b8:	0f b6       	in	r0, 0x3f	; 63
    20ba:	f8 94       	cli
    20bc:	fa 9a       	sbi	0x1f, 2	; 31
    20be:	f9 9a       	sbi	0x1f, 1	; 31
    20c0:	0f be       	out	0x3f, r0	; 63
    20c2:	01 96       	adiw	r24, 0x01	; 1
    20c4:	08 95       	ret

000020c6 <__divmodsi4>:
    20c6:	05 2e       	mov	r0, r21
    20c8:	97 fb       	bst	r25, 7
    20ca:	16 f4       	brtc	.+4      	; 0x20d0 <__divmodsi4+0xa>
    20cc:	00 94       	com	r0
    20ce:	0f d0       	rcall	.+30     	; 0x20ee <__negsi2>
    20d0:	57 fd       	sbrc	r21, 7
    20d2:	05 d0       	rcall	.+10     	; 0x20de <__divmodsi4_neg2>
    20d4:	24 d0       	rcall	.+72     	; 0x211e <__udivmodsi4>
    20d6:	07 fc       	sbrc	r0, 7
    20d8:	02 d0       	rcall	.+4      	; 0x20de <__divmodsi4_neg2>
    20da:	46 f4       	brtc	.+16     	; 0x20ec <__divmodsi4_exit>
    20dc:	08 c0       	rjmp	.+16     	; 0x20ee <__negsi2>

000020de <__divmodsi4_neg2>:
    20de:	50 95       	com	r21
    20e0:	40 95       	com	r20
    20e2:	30 95       	com	r19
    20e4:	21 95       	neg	r18
    20e6:	3f 4f       	sbci	r19, 0xFF	; 255
    20e8:	4f 4f       	sbci	r20, 0xFF	; 255
    20ea:	5f 4f       	sbci	r21, 0xFF	; 255

000020ec <__divmodsi4_exit>:
    20ec:	08 95       	ret

000020ee <__negsi2>:
    20ee:	90 95       	com	r25
    20f0:	80 95       	com	r24
    20f2:	70 95       	com	r23
    20f4:	61 95       	neg	r22
    20f6:	7f 4f       	sbci	r23, 0xFF	; 255
    20f8:	8f 4f       	sbci	r24, 0xFF	; 255
    20fa:	9f 4f       	sbci	r25, 0xFF	; 255
    20fc:	08 95       	ret

000020fe <__muluhisi3>:
    20fe:	31 d0       	rcall	.+98     	; 0x2162 <__umulhisi3>
    2100:	a5 9f       	mul	r26, r21
    2102:	90 0d       	add	r25, r0
    2104:	b4 9f       	mul	r27, r20
    2106:	90 0d       	add	r25, r0
    2108:	a4 9f       	mul	r26, r20
    210a:	80 0d       	add	r24, r0
    210c:	91 1d       	adc	r25, r1
    210e:	11 24       	eor	r1, r1
    2110:	08 95       	ret

00002112 <__mulshisi3>:
    2112:	b7 ff       	sbrs	r27, 7
    2114:	f4 cf       	rjmp	.-24     	; 0x20fe <__muluhisi3>

00002116 <__mulohisi3>:
    2116:	f3 df       	rcall	.-26     	; 0x20fe <__muluhisi3>
    2118:	82 1b       	sub	r24, r18
    211a:	93 0b       	sbc	r25, r19
    211c:	08 95       	ret

0000211e <__udivmodsi4>:
    211e:	a1 e2       	ldi	r26, 0x21	; 33
    2120:	1a 2e       	mov	r1, r26
    2122:	aa 1b       	sub	r26, r26
    2124:	bb 1b       	sub	r27, r27
    2126:	fd 01       	movw	r30, r26
    2128:	0d c0       	rjmp	.+26     	; 0x2144 <__udivmodsi4_ep>

0000212a <__udivmodsi4_loop>:
    212a:	aa 1f       	adc	r26, r26
    212c:	bb 1f       	adc	r27, r27
    212e:	ee 1f       	adc	r30, r30
    2130:	ff 1f       	adc	r31, r31
    2132:	a2 17       	cp	r26, r18
    2134:	b3 07       	cpc	r27, r19
    2136:	e4 07       	cpc	r30, r20
    2138:	f5 07       	cpc	r31, r21
    213a:	20 f0       	brcs	.+8      	; 0x2144 <__udivmodsi4_ep>
    213c:	a2 1b       	sub	r26, r18
    213e:	b3 0b       	sbc	r27, r19
    2140:	e4 0b       	sbc	r30, r20
    2142:	f5 0b       	sbc	r31, r21

00002144 <__udivmodsi4_ep>:
    2144:	66 1f       	adc	r22, r22
    2146:	77 1f       	adc	r23, r23
    2148:	88 1f       	adc	r24, r24
    214a:	99 1f       	adc	r25, r25
    214c:	1a 94       	dec	r1
    214e:	69 f7       	brne	.-38     	; 0x212a <__udivmodsi4_loop>
    2150:	60 95       	com	r22
    2152:	70 95       	com	r23
    2154:	80 95       	com	r24
    2156:	90 95       	com	r25
    2158:	9b 01       	movw	r18, r22
    215a:	ac 01       	movw	r20, r24
    215c:	bd 01       	movw	r22, r26
    215e:	cf 01       	movw	r24, r30
    2160:	08 95       	ret

00002162 <__umulhisi3>:
    2162:	a2 9f       	mul	r26, r18
    2164:	b0 01       	movw	r22, r0
    2166:	b3 9f       	mul	r27, r19
    2168:	c0 01       	movw	r24, r0
    216a:	a3 9f       	mul	r26, r19
    216c:	70 0d       	add	r23, r0
    216e:	81 1d       	adc	r24, r1
    2170:	11 24       	eor	r1, r1
    2172:	91 1d       	adc	r25, r1
    2174:	b2 9f       	mul	r27, r18
    2176:	70 0d       	add	r23, r0
    2178:	81 1d       	adc	r24, r1
    217a:	11 24       	eor	r1, r1
    217c:	91 1d       	adc	r25, r1
    217e:	08 95       	ret

00002180 <_exit>:
    2180:	f8 94       	cli

00002182 <__stop_program>:
    2182:	ff cf       	rjmp	.-2      	; 0x2182 <__stop_program>
