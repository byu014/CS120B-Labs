
byu014_lnguy089_lab10_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000b9e  00000c32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b9e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003b  00800104  00800104  00000c36  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000ca8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b78  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ea  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000059c  00000000  00000000  0000218a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00002728  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c2  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000451  00000000  00000000  00002efa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000334b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	6b c1       	rjmp	.+726    	; 0x30c <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e9       	ldi	r30, 0x9E	; 158
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 33       	cpi	r26, 0x3F	; 63
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d9 d2       	rcall	.+1458   	; 0x676 <main>
  c4:	6a c5       	rjmp	.+2772   	; 0xb9a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerOn>:
}

void PWM_off() {
	TCCR0A = 0x00;
	TCCR0B = 0x00;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	81 e8       	ldi	r24, 0x81	; 129
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	2b e0       	ldi	r18, 0x0B	; 11
  d6:	fc 01       	movw	r30, r24
  d8:	20 83       	st	Z, r18
  da:	88 e8       	ldi	r24, 0x88	; 136
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	2d e7       	ldi	r18, 0x7D	; 125
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	fc 01       	movw	r30, r24
  e4:	31 83       	std	Z+1, r19	; 0x01
  e6:	20 83       	st	Z, r18
  e8:	8f e6       	ldi	r24, 0x6F	; 111
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	22 e0       	ldi	r18, 0x02	; 2
  ee:	fc 01       	movw	r30, r24
  f0:	20 83       	st	Z, r18
  f2:	84 e8       	ldi	r24, 0x84	; 132
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	fc 01       	movw	r30, r24
  f8:	11 82       	std	Z+1, r1	; 0x01
  fa:	10 82       	st	Z, r1
  fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 100:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 104:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 108:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 10c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 110:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 114:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 118:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 11c:	8f e5       	ldi	r24, 0x5F	; 95
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	2f e5       	ldi	r18, 0x5F	; 95
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	f9 01       	movw	r30, r18
 126:	20 81       	ld	r18, Z
 128:	20 68       	ori	r18, 0x80	; 128
 12a:	fc 01       	movw	r30, r24
 12c:	20 83       	st	Z, r18
 12e:	00 00       	nop
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <TimerSet>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	00 d0       	rcall	.+0      	; 0x13c <TimerSet+0x6>
 13c:	00 d0       	rcall	.+0      	; 0x13e <TimerSet+0x8>
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	69 83       	std	Y+1, r22	; 0x01
 144:	7a 83       	std	Y+2, r23	; 0x02
 146:	8b 83       	std	Y+3, r24	; 0x03
 148:	9c 83       	std	Y+4, r25	; 0x04
 14a:	89 81       	ldd	r24, Y+1	; 0x01
 14c:	9a 81       	ldd	r25, Y+2	; 0x02
 14e:	ab 81       	ldd	r26, Y+3	; 0x03
 150:	bc 81       	ldd	r27, Y+4	; 0x04
 152:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 156:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 15a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 15e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 162:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 166:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 16a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 16e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 172:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 176:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 17a:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 17e:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 182:	00 00       	nop
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	08 95       	ret

00000192 <TimerISR>:
 192:	0f 93       	push	r16
 194:	1f 93       	push	r17
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	1f 92       	push	r1
 19c:	cd b7       	in	r28, 0x3d	; 61
 19e:	de b7       	in	r29, 0x3e	; 62
 1a0:	19 82       	std	Y+1, r1	; 0x01
 1a2:	a4 c0       	rjmp	.+328    	; 0x2ec <TimerISR+0x15a>
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	c9 01       	movw	r24, r18
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	82 0f       	add	r24, r18
 1b2:	93 1f       	adc	r25, r19
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	8b 5e       	subi	r24, 0xEB	; 235
 1be:	9e 4f       	sbci	r25, 0xFE	; 254
 1c0:	fc 01       	movw	r30, r24
 1c2:	20 81       	ld	r18, Z
 1c4:	31 81       	ldd	r19, Z+1	; 0x01
 1c6:	42 81       	ldd	r20, Z+2	; 0x02
 1c8:	53 81       	ldd	r21, Z+3	; 0x03
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	68 2f       	mov	r22, r24
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	cb 01       	movw	r24, r22
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	86 0f       	add	r24, r22
 1d8:	97 1f       	adc	r25, r23
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	8f 5e       	subi	r24, 0xEF	; 239
 1e4:	9e 4f       	sbci	r25, 0xFE	; 254
 1e6:	fc 01       	movw	r30, r24
 1e8:	80 81       	ld	r24, Z
 1ea:	91 81       	ldd	r25, Z+1	; 0x01
 1ec:	a2 81       	ldd	r26, Z+2	; 0x02
 1ee:	b3 81       	ldd	r27, Z+3	; 0x03
 1f0:	28 17       	cp	r18, r24
 1f2:	39 07       	cpc	r19, r25
 1f4:	4a 07       	cpc	r20, r26
 1f6:	5b 07       	cpc	r21, r27
 1f8:	08 f4       	brcc	.+2      	; 0x1fc <TimerISR+0x6a>
 1fa:	49 c0       	rjmp	.+146    	; 0x28e <TimerISR+0xfc>
 1fc:	89 81       	ldd	r24, Y+1	; 0x01
 1fe:	08 2f       	mov	r16, r24
 200:	10 e0       	ldi	r17, 0x00	; 0
 202:	89 81       	ldd	r24, Y+1	; 0x01
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	c9 01       	movw	r24, r18
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	82 0f       	add	r24, r18
 210:	93 1f       	adc	r25, r19
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	87 5e       	subi	r24, 0xE7	; 231
 21c:	9e 4f       	sbci	r25, 0xFE	; 254
 21e:	fc 01       	movw	r30, r24
 220:	40 81       	ld	r20, Z
 222:	51 81       	ldd	r21, Z+1	; 0x01
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	c9 01       	movw	r24, r18
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	82 0f       	add	r24, r18
 232:	93 1f       	adc	r25, r19
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	81 5f       	subi	r24, 0xF1	; 241
 23e:	9e 4f       	sbci	r25, 0xFE	; 254
 240:	fc 01       	movw	r30, r24
 242:	80 81       	ld	r24, Z
 244:	91 81       	ldd	r25, Z+1	; 0x01
 246:	fa 01       	movw	r30, r20
 248:	09 95       	icall
 24a:	9c 01       	movw	r18, r24
 24c:	c8 01       	movw	r24, r16
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	80 0f       	add	r24, r16
 254:	91 1f       	adc	r25, r17
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	88 0f       	add	r24, r24
 25c:	99 1f       	adc	r25, r25
 25e:	81 5f       	subi	r24, 0xF1	; 241
 260:	9e 4f       	sbci	r25, 0xFE	; 254
 262:	fc 01       	movw	r30, r24
 264:	31 83       	std	Z+1, r19	; 0x01
 266:	20 83       	st	Z, r18
 268:	89 81       	ldd	r24, Y+1	; 0x01
 26a:	28 2f       	mov	r18, r24
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	c9 01       	movw	r24, r18
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	82 0f       	add	r24, r18
 276:	93 1f       	adc	r25, r19
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	8b 5e       	subi	r24, 0xEB	; 235
 282:	9e 4f       	sbci	r25, 0xFE	; 254
 284:	fc 01       	movw	r30, r24
 286:	10 82       	st	Z, r1
 288:	11 82       	std	Z+1, r1	; 0x01
 28a:	12 82       	std	Z+2, r1	; 0x02
 28c:	13 82       	std	Z+3, r1	; 0x03
 28e:	89 81       	ldd	r24, Y+1	; 0x01
 290:	68 2f       	mov	r22, r24
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	89 81       	ldd	r24, Y+1	; 0x01
 296:	28 2f       	mov	r18, r24
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	c9 01       	movw	r24, r18
 29c:	88 0f       	add	r24, r24
 29e:	99 1f       	adc	r25, r25
 2a0:	82 0f       	add	r24, r18
 2a2:	93 1f       	adc	r25, r19
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	88 0f       	add	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	8b 5e       	subi	r24, 0xEB	; 235
 2ae:	9e 4f       	sbci	r25, 0xFE	; 254
 2b0:	fc 01       	movw	r30, r24
 2b2:	80 81       	ld	r24, Z
 2b4:	91 81       	ldd	r25, Z+1	; 0x01
 2b6:	a2 81       	ldd	r26, Z+2	; 0x02
 2b8:	b3 81       	ldd	r27, Z+3	; 0x03
 2ba:	9c 01       	movw	r18, r24
 2bc:	ad 01       	movw	r20, r26
 2be:	2f 5f       	subi	r18, 0xFF	; 255
 2c0:	3f 4f       	sbci	r19, 0xFF	; 255
 2c2:	4f 4f       	sbci	r20, 0xFF	; 255
 2c4:	5f 4f       	sbci	r21, 0xFF	; 255
 2c6:	cb 01       	movw	r24, r22
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	86 0f       	add	r24, r22
 2ce:	97 1f       	adc	r25, r23
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	88 0f       	add	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	8b 5e       	subi	r24, 0xEB	; 235
 2da:	9e 4f       	sbci	r25, 0xFE	; 254
 2dc:	fc 01       	movw	r30, r24
 2de:	20 83       	st	Z, r18
 2e0:	31 83       	std	Z+1, r19	; 0x01
 2e2:	42 83       	std	Z+2, r20	; 0x02
 2e4:	53 83       	std	Z+3, r21	; 0x03
 2e6:	89 81       	ldd	r24, Y+1	; 0x01
 2e8:	8f 5f       	subi	r24, 0xFF	; 255
 2ea:	89 83       	std	Y+1, r24	; 0x01
 2ec:	89 81       	ldd	r24, Y+1	; 0x01
 2ee:	28 2f       	mov	r18, r24
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	84 e0       	ldi	r24, 0x04	; 4
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	28 17       	cp	r18, r24
 2f8:	39 07       	cpc	r19, r25
 2fa:	08 f4       	brcc	.+2      	; 0x2fe <TimerISR+0x16c>
 2fc:	53 cf       	rjmp	.-346    	; 0x1a4 <TimerISR+0x12>
 2fe:	00 00       	nop
 300:	0f 90       	pop	r0
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	1f 91       	pop	r17
 308:	0f 91       	pop	r16
 30a:	08 95       	ret

0000030c <__vector_13>:
 30c:	1f 92       	push	r1
 30e:	0f 92       	push	r0
 310:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 314:	0f 92       	push	r0
 316:	11 24       	eor	r1, r1
 318:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 31c:	0f 92       	push	r0
 31e:	2f 93       	push	r18
 320:	3f 93       	push	r19
 322:	4f 93       	push	r20
 324:	5f 93       	push	r21
 326:	6f 93       	push	r22
 328:	7f 93       	push	r23
 32a:	8f 93       	push	r24
 32c:	9f 93       	push	r25
 32e:	af 93       	push	r26
 330:	bf 93       	push	r27
 332:	ef 93       	push	r30
 334:	ff 93       	push	r31
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 342:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 346:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 34a:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	a1 09       	sbc	r26, r1
 352:	b1 09       	sbc	r27, r1
 354:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 358:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 35c:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 360:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 364:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 368:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 36c:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 370:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 374:	89 2b       	or	r24, r25
 376:	8a 2b       	or	r24, r26
 378:	8b 2b       	or	r24, r27
 37a:	89 f4       	brne	.+34     	; 0x39e <__vector_13+0x92>
 37c:	0a df       	rcall	.-492    	; 0x192 <TimerISR>
 37e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 382:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 386:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 38a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 38e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 392:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 396:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 39a:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 39e:	00 00       	nop
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	ff 91       	pop	r31
 3a6:	ef 91       	pop	r30
 3a8:	bf 91       	pop	r27
 3aa:	af 91       	pop	r26
 3ac:	9f 91       	pop	r25
 3ae:	8f 91       	pop	r24
 3b0:	7f 91       	pop	r23
 3b2:	6f 91       	pop	r22
 3b4:	5f 91       	pop	r21
 3b6:	4f 91       	pop	r20
 3b8:	3f 91       	pop	r19
 3ba:	2f 91       	pop	r18
 3bc:	0f 90       	pop	r0
 3be:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 3c2:	0f 90       	pop	r0
 3c4:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 3c8:	0f 90       	pop	r0
 3ca:	1f 90       	pop	r1
 3cc:	18 95       	reti

000003ce <set_PWM>:
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	00 d0       	rcall	.+0      	; 0x3d8 <set_PWM+0xa>
 3d8:	00 d0       	rcall	.+0      	; 0x3da <set_PWM+0xc>
 3da:	cd b7       	in	r28, 0x3d	; 61
 3dc:	de b7       	in	r29, 0x3e	; 62
 3de:	69 83       	std	Y+1, r22	; 0x01
 3e0:	7a 83       	std	Y+2, r23	; 0x02
 3e2:	8b 83       	std	Y+3, r24	; 0x03
 3e4:	9c 83       	std	Y+4, r25	; 0x04
 3e6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <current_frequency.1637>
 3ea:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <current_frequency.1637+0x1>
 3ee:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <current_frequency.1637+0x2>
 3f2:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <current_frequency.1637+0x3>
 3f6:	9c 01       	movw	r18, r24
 3f8:	ad 01       	movw	r20, r26
 3fa:	69 81       	ldd	r22, Y+1	; 0x01
 3fc:	7a 81       	ldd	r23, Y+2	; 0x02
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	9c 81       	ldd	r25, Y+4	; 0x04
 402:	52 d2       	rcall	.+1188   	; 0x8a8 <__cmpsf2>
 404:	88 23       	and	r24, r24
 406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	6c c0       	rjmp	.+216    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 40a:	20 e0       	ldi	r18, 0x00	; 0
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	a9 01       	movw	r20, r18
 410:	69 81       	ldd	r22, Y+1	; 0x01
 412:	7a 81       	ldd	r23, Y+2	; 0x02
 414:	8b 81       	ldd	r24, Y+3	; 0x03
 416:	9c 81       	ldd	r25, Y+4	; 0x04
 418:	47 d2       	rcall	.+1166   	; 0x8a8 <__cmpsf2>
 41a:	88 23       	and	r24, r24
 41c:	51 f4       	brne	.+20     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 41e:	85 e4       	ldi	r24, 0x45	; 69
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	25 e4       	ldi	r18, 0x45	; 69
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	f9 01       	movw	r30, r18
 428:	20 81       	ld	r18, Z
 42a:	28 70       	andi	r18, 0x08	; 8
 42c:	fc 01       	movw	r30, r24
 42e:	20 83       	st	Z, r18
 430:	09 c0       	rjmp	.+18     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 432:	85 e4       	ldi	r24, 0x45	; 69
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	25 e4       	ldi	r18, 0x45	; 69
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	f9 01       	movw	r30, r18
 43c:	20 81       	ld	r18, Z
 43e:	23 60       	ori	r18, 0x03	; 3
 440:	fc 01       	movw	r30, r24
 442:	20 83       	st	Z, r18
 444:	28 e5       	ldi	r18, 0x58	; 88
 446:	39 e3       	ldi	r19, 0x39	; 57
 448:	44 e7       	ldi	r20, 0x74	; 116
 44a:	5f e3       	ldi	r21, 0x3F	; 63
 44c:	69 81       	ldd	r22, Y+1	; 0x01
 44e:	7a 81       	ldd	r23, Y+2	; 0x02
 450:	8b 81       	ldd	r24, Y+3	; 0x03
 452:	9c 81       	ldd	r25, Y+4	; 0x04
 454:	29 d2       	rcall	.+1106   	; 0x8a8 <__cmpsf2>
 456:	88 23       	and	r24, r24
 458:	34 f4       	brge	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45a:	87 e4       	ldi	r24, 0x47	; 71
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	2f ef       	ldi	r18, 0xFF	; 255
 460:	fc 01       	movw	r30, r24
 462:	20 83       	st	Z, r18
 464:	2e c0       	rjmp	.+92     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	34 e2       	ldi	r19, 0x24	; 36
 46a:	44 ef       	ldi	r20, 0xF4	; 244
 46c:	56 e4       	ldi	r21, 0x46	; 70
 46e:	69 81       	ldd	r22, Y+1	; 0x01
 470:	7a 81       	ldd	r23, Y+2	; 0x02
 472:	8b 81       	ldd	r24, Y+3	; 0x03
 474:	9c 81       	ldd	r25, Y+4	; 0x04
 476:	2a d3       	rcall	.+1620   	; 0xacc <__gesf2>
 478:	18 16       	cp	r1, r24
 47a:	2c f4       	brge	.+10     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47c:	87 e4       	ldi	r24, 0x47	; 71
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	fc 01       	movw	r30, r24
 482:	10 82       	st	Z, r1
 484:	1e c0       	rjmp	.+60     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 486:	07 e4       	ldi	r16, 0x47	; 71
 488:	10 e0       	ldi	r17, 0x00	; 0
 48a:	20 e0       	ldi	r18, 0x00	; 0
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	40 e0       	ldi	r20, 0x00	; 0
 490:	53 e4       	ldi	r21, 0x43	; 67
 492:	69 81       	ldd	r22, Y+1	; 0x01
 494:	7a 81       	ldd	r23, Y+2	; 0x02
 496:	8b 81       	ldd	r24, Y+3	; 0x03
 498:	9c 81       	ldd	r25, Y+4	; 0x04
 49a:	1c d3       	rcall	.+1592   	; 0xad4 <__mulsf3>
 49c:	dc 01       	movw	r26, r24
 49e:	cb 01       	movw	r24, r22
 4a0:	9c 01       	movw	r18, r24
 4a2:	ad 01       	movw	r20, r26
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	74 e2       	ldi	r23, 0x24	; 36
 4a8:	84 ef       	ldi	r24, 0xF4	; 244
 4aa:	9a e4       	ldi	r25, 0x4A	; 74
 4ac:	01 d2       	rcall	.+1026   	; 0x8b0 <__divsf3>
 4ae:	dc 01       	movw	r26, r24
 4b0:	cb 01       	movw	r24, r22
 4b2:	bc 01       	movw	r22, r24
 4b4:	cd 01       	movw	r24, r26
 4b6:	64 d2       	rcall	.+1224   	; 0x980 <__fixsfsi>
 4b8:	dc 01       	movw	r26, r24
 4ba:	cb 01       	movw	r24, r22
 4bc:	81 50       	subi	r24, 0x01	; 1
 4be:	f8 01       	movw	r30, r16
 4c0:	80 83       	st	Z, r24
 4c2:	86 e4       	ldi	r24, 0x46	; 70
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	fc 01       	movw	r30, r24
 4c8:	10 82       	st	Z, r1
 4ca:	89 81       	ldd	r24, Y+1	; 0x01
 4cc:	9a 81       	ldd	r25, Y+2	; 0x02
 4ce:	ab 81       	ldd	r26, Y+3	; 0x03
 4d0:	bc 81       	ldd	r27, Y+4	; 0x04
 4d2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <current_frequency.1637>
 4d6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <current_frequency.1637+0x1>
 4da:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <current_frequency.1637+0x2>
 4de:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <current_frequency.1637+0x3>
 4e2:	00 00       	nop
 4e4:	0f 90       	pop	r0
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	0f 90       	pop	r0
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	08 95       	ret

000004f6 <PWM_on>:
 4f6:	cf 93       	push	r28
 4f8:	df 93       	push	r29
 4fa:	cd b7       	in	r28, 0x3d	; 61
 4fc:	de b7       	in	r29, 0x3e	; 62
 4fe:	84 e4       	ldi	r24, 0x44	; 68
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	21 e4       	ldi	r18, 0x41	; 65
 504:	fc 01       	movw	r30, r24
 506:	20 83       	st	Z, r18
 508:	85 e4       	ldi	r24, 0x45	; 69
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	2b e0       	ldi	r18, 0x0B	; 11
 50e:	fc 01       	movw	r30, r24
 510:	20 83       	st	Z, r18
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	cb 01       	movw	r24, r22
 518:	5a df       	rcall	.-332    	; 0x3ce <set_PWM>
 51a:	00 00       	nop
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	08 95       	ret

00000522 <TickFct_ThreeLEDS>:


enum ThreeLEDS_States{ThreeLEDS_Start, threeLEDs_shift};
int TickFct_ThreeLEDS(int state)
{
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	00 d0       	rcall	.+0      	; 0x528 <TickFct_ThreeLEDS+0x6>
 528:	cd b7       	in	r28, 0x3d	; 61
 52a:	de b7       	in	r29, 0x3e	; 62
 52c:	9a 83       	std	Y+2, r25	; 0x02
 52e:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	9a 81       	ldd	r25, Y+2	; 0x02
 534:	00 97       	sbiw	r24, 0x00	; 0
 536:	19 f0       	breq	.+6      	; 0x53e <TickFct_ThreeLEDS+0x1c>
 538:	01 97       	sbiw	r24, 0x01	; 1
 53a:	49 f0       	breq	.+18     	; 0x54e <TickFct_ThreeLEDS+0x2c>
				threeLEDs = threeLEDs << 1;
			}
			break;
		
		default:
		break;
 53c:	16 c0       	rjmp	.+44     	; 0x56a <TickFct_ThreeLEDS+0x48>
int TickFct_ThreeLEDS(int state)
{
	switch(state)
	{
		case ThreeLEDS_Start:
			threeLEDs = 0x01;
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <threeLEDs>
			state = threeLEDs_shift;
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	9a 83       	std	Y+2, r25	; 0x02
 54a:	89 83       	std	Y+1, r24	; 0x01
			break;
 54c:	0e c0       	rjmp	.+28     	; 0x56a <TickFct_ThreeLEDS+0x48>
		
		case threeLEDs_shift:
			if(threeLEDs == 0x04)
 54e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <threeLEDs>
 552:	84 30       	cpi	r24, 0x04	; 4
 554:	21 f4       	brne	.+8      	; 0x55e <TickFct_ThreeLEDS+0x3c>
			{
				threeLEDs = 0x01;
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <threeLEDs>
			}
			else
			{
				threeLEDs = threeLEDs << 1;
			}
			break;
 55c:	05 c0       	rjmp	.+10     	; 0x568 <TickFct_ThreeLEDS+0x46>
			{
				threeLEDs = 0x01;
			}
			else
			{
				threeLEDs = threeLEDs << 1;
 55e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <threeLEDs>
 562:	88 0f       	add	r24, r24
 564:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <threeLEDs>
			}
			break;
 568:	00 00       	nop
		
		default:
		break;
			
	}
	return state;
 56a:	89 81       	ldd	r24, Y+1	; 0x01
 56c:	9a 81       	ldd	r25, Y+2	; 0x02
}
 56e:	0f 90       	pop	r0
 570:	0f 90       	pop	r0
 572:	df 91       	pop	r29
 574:	cf 91       	pop	r28
 576:	08 95       	ret

00000578 <TickFct_BLEDS>:
enum BLEDS_States{BLEDS_Start, BLEDS_flip};
int TickFct_BLEDS(int state)
{
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	00 d0       	rcall	.+0      	; 0x57e <TickFct_BLEDS+0x6>
 57e:	cd b7       	in	r28, 0x3d	; 61
 580:	de b7       	in	r29, 0x3e	; 62
 582:	9a 83       	std	Y+2, r25	; 0x02
 584:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
 586:	89 81       	ldd	r24, Y+1	; 0x01
 588:	9a 81       	ldd	r25, Y+2	; 0x02
 58a:	00 97       	sbiw	r24, 0x00	; 0
 58c:	19 f0       	breq	.+6      	; 0x594 <TickFct_BLEDS+0x1c>
 58e:	01 97       	sbiw	r24, 0x01	; 1
 590:	49 f0       	breq	.+18     	; 0x5a4 <TickFct_BLEDS+0x2c>
		case BLEDS_flip:
			blinkingLED = (!(blinkingLED >> 4) ) << 4;
			break;
		
		default:
			break;
 592:	14 c0       	rjmp	.+40     	; 0x5bc <TickFct_BLEDS+0x44>
int TickFct_BLEDS(int state)
{
	switch(state)
	{
		case BLEDS_Start:
			blinkingLED = 0x10;
 594:	80 e1       	ldi	r24, 0x10	; 16
 596:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <blinkingLED>
			state = BLEDS_flip;
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	9a 83       	std	Y+2, r25	; 0x02
 5a0:	89 83       	std	Y+1, r24	; 0x01
			break;
 5a2:	0c c0       	rjmp	.+24     	; 0x5bc <TickFct_BLEDS+0x44>
		
		case BLEDS_flip:
			blinkingLED = (!(blinkingLED >> 4) ) << 4;
 5a4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <blinkingLED>
 5a8:	82 95       	swap	r24
 5aa:	8f 70       	andi	r24, 0x0F	; 15
 5ac:	88 23       	and	r24, r24
 5ae:	11 f4       	brne	.+4      	; 0x5b4 <TickFct_BLEDS+0x3c>
 5b0:	80 e1       	ldi	r24, 0x10	; 16
 5b2:	01 c0       	rjmp	.+2      	; 0x5b6 <TickFct_BLEDS+0x3e>
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <blinkingLED>
			break;
 5ba:	00 00       	nop
		
		default:
			break;
	}
	return state;
 5bc:	89 81       	ldd	r24, Y+1	; 0x01
 5be:	9a 81       	ldd	r25, Y+2	; 0x02
}
 5c0:	0f 90       	pop	r0
 5c2:	0f 90       	pop	r0
 5c4:	df 91       	pop	r29
 5c6:	cf 91       	pop	r28
 5c8:	08 95       	ret

000005ca <TickFct_Combine>:
enum Combine_States{Combine_Start};
int TickFct_Combine(int state)
{
 5ca:	cf 93       	push	r28
 5cc:	df 93       	push	r29
 5ce:	00 d0       	rcall	.+0      	; 0x5d0 <TickFct_Combine+0x6>
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	9a 83       	std	Y+2, r25	; 0x02
 5d6:	89 83       	std	Y+1, r24	; 0x01
	switch(state)
 5d8:	89 81       	ldd	r24, Y+1	; 0x01
 5da:	9a 81       	ldd	r25, Y+2	; 0x02
 5dc:	89 2b       	or	r24, r25
 5de:	09 f0       	breq	.+2      	; 0x5e2 <TickFct_Combine+0x18>
	{
		case Combine_Start:
			PORTB = threeLEDs + blinkingLED;
			break;
		default:
			break;
 5e0:	0a c0       	rjmp	.+20     	; 0x5f6 <TickFct_Combine+0x2c>
int TickFct_Combine(int state)
{
	switch(state)
	{
		case Combine_Start:
			PORTB = threeLEDs + blinkingLED;
 5e2:	85 e2       	ldi	r24, 0x25	; 37
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <threeLEDs>
 5ea:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <blinkingLED>
 5ee:	23 0f       	add	r18, r19
 5f0:	fc 01       	movw	r30, r24
 5f2:	20 83       	st	Z, r18
			break;
 5f4:	00 00       	nop
		default:
			break;
	}
	return state;
 5f6:	89 81       	ldd	r24, Y+1	; 0x01
 5f8:	9a 81       	ldd	r25, Y+2	; 0x02
}
 5fa:	0f 90       	pop	r0
 5fc:	0f 90       	pop	r0
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	08 95       	ret

00000604 <TickFct_Buzzer>:
enum Buzzer_states{Buzzer_Start};
int TickFct_Buzzer(int state)
{
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	00 d0       	rcall	.+0      	; 0x60a <TickFct_Buzzer+0x6>
 60a:	cd b7       	in	r28, 0x3d	; 61
 60c:	de b7       	in	r29, 0x3e	; 62
 60e:	9a 83       	std	Y+2, r25	; 0x02
 610:	89 83       	std	Y+1, r24	; 0x01
	static unsigned char wasOn = 0;
	switch(state)
 612:	89 81       	ldd	r24, Y+1	; 0x01
 614:	9a 81       	ldd	r25, Y+2	; 0x02
 616:	89 2b       	or	r24, r25
 618:	39 f5       	brne	.+78     	; 0x668 <TickFct_Buzzer+0x64>
	{
		case Buzzer_Start:
			if((~PINA & 0x07) == 0x04)
 61a:	80 e2       	ldi	r24, 0x20	; 32
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	fc 01       	movw	r30, r24
 620:	80 81       	ld	r24, Z
 622:	88 2f       	mov	r24, r24
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	80 95       	com	r24
 628:	90 95       	com	r25
 62a:	87 70       	andi	r24, 0x07	; 7
 62c:	99 27       	eor	r25, r25
 62e:	04 97       	sbiw	r24, 0x04	; 4
 630:	a1 f4       	brne	.+40     	; 0x65a <TickFct_Buzzer+0x56>
			{
				if(!wasOn){
 632:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <wasOn.1675>
 636:	88 23       	and	r24, r24
 638:	49 f4       	brne	.+18     	; 0x64c <TickFct_Buzzer+0x48>
					set_PWM(261.63);
 63a:	64 ea       	ldi	r22, 0xA4	; 164
 63c:	70 ed       	ldi	r23, 0xD0	; 208
 63e:	82 e8       	ldi	r24, 0x82	; 130
 640:	93 e4       	ldi	r25, 0x43	; 67
 642:	c5 de       	rcall	.-630    	; 0x3ce <set_PWM>
					wasOn = 1;
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <wasOn.1675>
			{
				set_PWM(0);
				wasOn = 0;
			}
			//set_PWM(261.63);
			break;
 64a:	0d c0       	rjmp	.+26     	; 0x666 <TickFct_Buzzer+0x62>
					set_PWM(261.63);
					wasOn = 1;
				}
				else
				{
					set_PWM(0);
 64c:	60 e0       	ldi	r22, 0x00	; 0
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	cb 01       	movw	r24, r22
 652:	bd de       	rcall	.-646    	; 0x3ce <set_PWM>
					wasOn = 0;
 654:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <wasOn.1675>
			{
				set_PWM(0);
				wasOn = 0;
			}
			//set_PWM(261.63);
			break;
 658:	06 c0       	rjmp	.+12     	; 0x666 <TickFct_Buzzer+0x62>
					wasOn = 0;
				}
			}
			else
			{
				set_PWM(0);
 65a:	60 e0       	ldi	r22, 0x00	; 0
 65c:	70 e0       	ldi	r23, 0x00	; 0
 65e:	cb 01       	movw	r24, r22
 660:	b6 de       	rcall	.-660    	; 0x3ce <set_PWM>
				wasOn = 0;
 662:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <wasOn.1675>
			}
			//set_PWM(261.63);
			break;
 666:	00 00       	nop
			
	}
	return state;
 668:	89 81       	ldd	r24, Y+1	; 0x01
 66a:	9a 81       	ldd	r25, Y+2	; 0x02
}
 66c:	0f 90       	pop	r0
 66e:	0f 90       	pop	r0
 670:	df 91       	pop	r29
 672:	cf 91       	pop	r28
 674:	08 95       	ret

00000676 <main>:


int main(void)
{
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	1f 92       	push	r1
 67c:	cd b7       	in	r28, 0x3d	; 61
 67e:	de b7       	in	r29, 0x3e	; 62
    /* Replace with your application code */
	DDRB = 0xFF; PORTB = 0x00;
 680:	84 e2       	ldi	r24, 0x24	; 36
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	2f ef       	ldi	r18, 0xFF	; 255
 686:	fc 01       	movw	r30, r24
 688:	20 83       	st	Z, r18
 68a:	85 e2       	ldi	r24, 0x25	; 37
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	fc 01       	movw	r30, r24
 690:	10 82       	st	Z, r1
	DDRA = 0x00; PORTA = 0xFF;
 692:	81 e2       	ldi	r24, 0x21	; 33
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	fc 01       	movw	r30, r24
 698:	10 82       	st	Z, r1
 69a:	82 e2       	ldi	r24, 0x22	; 34
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	2f ef       	ldi	r18, 0xFF	; 255
 6a0:	fc 01       	movw	r30, r24
 6a2:	20 83       	st	Z, r18
	unsigned char i = 0;
 6a4:	19 82       	std	Y+1, r1	; 0x01
	tasks[i].state = ThreeLEDS_Start;
 6a6:	89 81       	ldd	r24, Y+1	; 0x01
 6a8:	28 2f       	mov	r18, r24
 6aa:	30 e0       	ldi	r19, 0x00	; 0
 6ac:	c9 01       	movw	r24, r18
 6ae:	88 0f       	add	r24, r24
 6b0:	99 1f       	adc	r25, r25
 6b2:	82 0f       	add	r24, r18
 6b4:	93 1f       	adc	r25, r19
 6b6:	88 0f       	add	r24, r24
 6b8:	99 1f       	adc	r25, r25
 6ba:	88 0f       	add	r24, r24
 6bc:	99 1f       	adc	r25, r25
 6be:	81 5f       	subi	r24, 0xF1	; 241
 6c0:	9e 4f       	sbci	r25, 0xFE	; 254
 6c2:	fc 01       	movw	r30, r24
 6c4:	11 82       	std	Z+1, r1	; 0x01
 6c6:	10 82       	st	Z, r1
	tasks[i].period = 300;
 6c8:	89 81       	ldd	r24, Y+1	; 0x01
 6ca:	28 2f       	mov	r18, r24
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	c9 01       	movw	r24, r18
 6d0:	88 0f       	add	r24, r24
 6d2:	99 1f       	adc	r25, r25
 6d4:	82 0f       	add	r24, r18
 6d6:	93 1f       	adc	r25, r19
 6d8:	88 0f       	add	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	88 0f       	add	r24, r24
 6de:	99 1f       	adc	r25, r25
 6e0:	9c 01       	movw	r18, r24
 6e2:	2f 5e       	subi	r18, 0xEF	; 239
 6e4:	3e 4f       	sbci	r19, 0xFE	; 254
 6e6:	8c e2       	ldi	r24, 0x2C	; 44
 6e8:	91 e0       	ldi	r25, 0x01	; 1
 6ea:	a0 e0       	ldi	r26, 0x00	; 0
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	f9 01       	movw	r30, r18
 6f0:	80 83       	st	Z, r24
 6f2:	91 83       	std	Z+1, r25	; 0x01
 6f4:	a2 83       	std	Z+2, r26	; 0x02
 6f6:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_ThreeLEDS;
 6f8:	89 81       	ldd	r24, Y+1	; 0x01
 6fa:	28 2f       	mov	r18, r24
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	c9 01       	movw	r24, r18
 700:	88 0f       	add	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	82 0f       	add	r24, r18
 706:	93 1f       	adc	r25, r19
 708:	88 0f       	add	r24, r24
 70a:	99 1f       	adc	r25, r25
 70c:	88 0f       	add	r24, r24
 70e:	99 1f       	adc	r25, r25
 710:	87 5e       	subi	r24, 0xE7	; 231
 712:	9e 4f       	sbci	r25, 0xFE	; 254
 714:	21 e9       	ldi	r18, 0x91	; 145
 716:	32 e0       	ldi	r19, 0x02	; 2
 718:	fc 01       	movw	r30, r24
 71a:	31 83       	std	Z+1, r19	; 0x01
 71c:	20 83       	st	Z, r18
	i++;
 71e:	89 81       	ldd	r24, Y+1	; 0x01
 720:	8f 5f       	subi	r24, 0xFF	; 255
 722:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].state = BLEDS_Start;
 724:	89 81       	ldd	r24, Y+1	; 0x01
 726:	28 2f       	mov	r18, r24
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	c9 01       	movw	r24, r18
 72c:	88 0f       	add	r24, r24
 72e:	99 1f       	adc	r25, r25
 730:	82 0f       	add	r24, r18
 732:	93 1f       	adc	r25, r19
 734:	88 0f       	add	r24, r24
 736:	99 1f       	adc	r25, r25
 738:	88 0f       	add	r24, r24
 73a:	99 1f       	adc	r25, r25
 73c:	81 5f       	subi	r24, 0xF1	; 241
 73e:	9e 4f       	sbci	r25, 0xFE	; 254
 740:	fc 01       	movw	r30, r24
 742:	11 82       	std	Z+1, r1	; 0x01
 744:	10 82       	st	Z, r1
	tasks[i].period = 1000;
 746:	89 81       	ldd	r24, Y+1	; 0x01
 748:	28 2f       	mov	r18, r24
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	c9 01       	movw	r24, r18
 74e:	88 0f       	add	r24, r24
 750:	99 1f       	adc	r25, r25
 752:	82 0f       	add	r24, r18
 754:	93 1f       	adc	r25, r19
 756:	88 0f       	add	r24, r24
 758:	99 1f       	adc	r25, r25
 75a:	88 0f       	add	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	9c 01       	movw	r18, r24
 760:	2f 5e       	subi	r18, 0xEF	; 239
 762:	3e 4f       	sbci	r19, 0xFE	; 254
 764:	88 ee       	ldi	r24, 0xE8	; 232
 766:	93 e0       	ldi	r25, 0x03	; 3
 768:	a0 e0       	ldi	r26, 0x00	; 0
 76a:	b0 e0       	ldi	r27, 0x00	; 0
 76c:	f9 01       	movw	r30, r18
 76e:	80 83       	st	Z, r24
 770:	91 83       	std	Z+1, r25	; 0x01
 772:	a2 83       	std	Z+2, r26	; 0x02
 774:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_BLEDS;
 776:	89 81       	ldd	r24, Y+1	; 0x01
 778:	28 2f       	mov	r18, r24
 77a:	30 e0       	ldi	r19, 0x00	; 0
 77c:	c9 01       	movw	r24, r18
 77e:	88 0f       	add	r24, r24
 780:	99 1f       	adc	r25, r25
 782:	82 0f       	add	r24, r18
 784:	93 1f       	adc	r25, r19
 786:	88 0f       	add	r24, r24
 788:	99 1f       	adc	r25, r25
 78a:	88 0f       	add	r24, r24
 78c:	99 1f       	adc	r25, r25
 78e:	87 5e       	subi	r24, 0xE7	; 231
 790:	9e 4f       	sbci	r25, 0xFE	; 254
 792:	2c eb       	ldi	r18, 0xBC	; 188
 794:	32 e0       	ldi	r19, 0x02	; 2
 796:	fc 01       	movw	r30, r24
 798:	31 83       	std	Z+1, r19	; 0x01
 79a:	20 83       	st	Z, r18
	i++;
 79c:	89 81       	ldd	r24, Y+1	; 0x01
 79e:	8f 5f       	subi	r24, 0xFF	; 255
 7a0:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].state = Buzzer_Start;
 7a2:	89 81       	ldd	r24, Y+1	; 0x01
 7a4:	28 2f       	mov	r18, r24
 7a6:	30 e0       	ldi	r19, 0x00	; 0
 7a8:	c9 01       	movw	r24, r18
 7aa:	88 0f       	add	r24, r24
 7ac:	99 1f       	adc	r25, r25
 7ae:	82 0f       	add	r24, r18
 7b0:	93 1f       	adc	r25, r19
 7b2:	88 0f       	add	r24, r24
 7b4:	99 1f       	adc	r25, r25
 7b6:	88 0f       	add	r24, r24
 7b8:	99 1f       	adc	r25, r25
 7ba:	81 5f       	subi	r24, 0xF1	; 241
 7bc:	9e 4f       	sbci	r25, 0xFE	; 254
 7be:	fc 01       	movw	r30, r24
 7c0:	11 82       	std	Z+1, r1	; 0x01
 7c2:	10 82       	st	Z, r1
	tasks[i].period = 2;
 7c4:	89 81       	ldd	r24, Y+1	; 0x01
 7c6:	28 2f       	mov	r18, r24
 7c8:	30 e0       	ldi	r19, 0x00	; 0
 7ca:	c9 01       	movw	r24, r18
 7cc:	88 0f       	add	r24, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	82 0f       	add	r24, r18
 7d2:	93 1f       	adc	r25, r19
 7d4:	88 0f       	add	r24, r24
 7d6:	99 1f       	adc	r25, r25
 7d8:	88 0f       	add	r24, r24
 7da:	99 1f       	adc	r25, r25
 7dc:	9c 01       	movw	r18, r24
 7de:	2f 5e       	subi	r18, 0xEF	; 239
 7e0:	3e 4f       	sbci	r19, 0xFE	; 254
 7e2:	82 e0       	ldi	r24, 0x02	; 2
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	a0 e0       	ldi	r26, 0x00	; 0
 7e8:	b0 e0       	ldi	r27, 0x00	; 0
 7ea:	f9 01       	movw	r30, r18
 7ec:	80 83       	st	Z, r24
 7ee:	91 83       	std	Z+1, r25	; 0x01
 7f0:	a2 83       	std	Z+2, r26	; 0x02
 7f2:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_Buzzer;
 7f4:	89 81       	ldd	r24, Y+1	; 0x01
 7f6:	28 2f       	mov	r18, r24
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	c9 01       	movw	r24, r18
 7fc:	88 0f       	add	r24, r24
 7fe:	99 1f       	adc	r25, r25
 800:	82 0f       	add	r24, r18
 802:	93 1f       	adc	r25, r19
 804:	88 0f       	add	r24, r24
 806:	99 1f       	adc	r25, r25
 808:	88 0f       	add	r24, r24
 80a:	99 1f       	adc	r25, r25
 80c:	87 5e       	subi	r24, 0xE7	; 231
 80e:	9e 4f       	sbci	r25, 0xFE	; 254
 810:	22 e0       	ldi	r18, 0x02	; 2
 812:	33 e0       	ldi	r19, 0x03	; 3
 814:	fc 01       	movw	r30, r24
 816:	31 83       	std	Z+1, r19	; 0x01
 818:	20 83       	st	Z, r18
	++i;
 81a:	89 81       	ldd	r24, Y+1	; 0x01
 81c:	8f 5f       	subi	r24, 0xFF	; 255
 81e:	89 83       	std	Y+1, r24	; 0x01
	tasks[i].state = Combine_Start;
 820:	89 81       	ldd	r24, Y+1	; 0x01
 822:	28 2f       	mov	r18, r24
 824:	30 e0       	ldi	r19, 0x00	; 0
 826:	c9 01       	movw	r24, r18
 828:	88 0f       	add	r24, r24
 82a:	99 1f       	adc	r25, r25
 82c:	82 0f       	add	r24, r18
 82e:	93 1f       	adc	r25, r19
 830:	88 0f       	add	r24, r24
 832:	99 1f       	adc	r25, r25
 834:	88 0f       	add	r24, r24
 836:	99 1f       	adc	r25, r25
 838:	81 5f       	subi	r24, 0xF1	; 241
 83a:	9e 4f       	sbci	r25, 0xFE	; 254
 83c:	fc 01       	movw	r30, r24
 83e:	11 82       	std	Z+1, r1	; 0x01
 840:	10 82       	st	Z, r1
	tasks[i].period = 1;
 842:	89 81       	ldd	r24, Y+1	; 0x01
 844:	28 2f       	mov	r18, r24
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	c9 01       	movw	r24, r18
 84a:	88 0f       	add	r24, r24
 84c:	99 1f       	adc	r25, r25
 84e:	82 0f       	add	r24, r18
 850:	93 1f       	adc	r25, r19
 852:	88 0f       	add	r24, r24
 854:	99 1f       	adc	r25, r25
 856:	88 0f       	add	r24, r24
 858:	99 1f       	adc	r25, r25
 85a:	9c 01       	movw	r18, r24
 85c:	2f 5e       	subi	r18, 0xEF	; 239
 85e:	3e 4f       	sbci	r19, 0xFE	; 254
 860:	81 e0       	ldi	r24, 0x01	; 1
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	a0 e0       	ldi	r26, 0x00	; 0
 866:	b0 e0       	ldi	r27, 0x00	; 0
 868:	f9 01       	movw	r30, r18
 86a:	80 83       	st	Z, r24
 86c:	91 83       	std	Z+1, r25	; 0x01
 86e:	a2 83       	std	Z+2, r26	; 0x02
 870:	b3 83       	std	Z+3, r27	; 0x03
	tasks[i].TickFct = &TickFct_Combine;
 872:	89 81       	ldd	r24, Y+1	; 0x01
 874:	28 2f       	mov	r18, r24
 876:	30 e0       	ldi	r19, 0x00	; 0
 878:	c9 01       	movw	r24, r18
 87a:	88 0f       	add	r24, r24
 87c:	99 1f       	adc	r25, r25
 87e:	82 0f       	add	r24, r18
 880:	93 1f       	adc	r25, r19
 882:	88 0f       	add	r24, r24
 884:	99 1f       	adc	r25, r25
 886:	88 0f       	add	r24, r24
 888:	99 1f       	adc	r25, r25
 88a:	87 5e       	subi	r24, 0xE7	; 231
 88c:	9e 4f       	sbci	r25, 0xFE	; 254
 88e:	25 ee       	ldi	r18, 0xE5	; 229
 890:	32 e0       	ldi	r19, 0x02	; 2
 892:	fc 01       	movw	r30, r24
 894:	31 83       	std	Z+1, r19	; 0x01
 896:	20 83       	st	Z, r18
	PWM_on();
 898:	2e de       	rcall	.-932    	; 0x4f6 <PWM_on>
	TimerSet(1);
 89a:	61 e0       	ldi	r22, 0x01	; 1
 89c:	70 e0       	ldi	r23, 0x00	; 0
 89e:	80 e0       	ldi	r24, 0x00	; 0
 8a0:	90 e0       	ldi	r25, 0x00	; 0
	TimerOn();
 8a2:	49 dc       	rcall	.-1902   	; 0x136 <TimerSet>
 8a4:	11 dc       	rcall	.-2014   	; 0xc8 <TimerOn>
    while (1) 
    {
    }
 8a6:	ff cf       	rjmp	.-2      	; 0x8a6 <main+0x230>

000008a8 <__cmpsf2>:
 8a8:	9c d0       	rcall	.+312    	; 0x9e2 <__fp_cmp>
 8aa:	08 f4       	brcc	.+2      	; 0x8ae <__cmpsf2+0x6>
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	08 95       	ret

000008b0 <__divsf3>:
 8b0:	0c d0       	rcall	.+24     	; 0x8ca <__divsf3x>
 8b2:	d2 c0       	rjmp	.+420    	; 0xa58 <__fp_round>
 8b4:	ca d0       	rcall	.+404    	; 0xa4a <__fp_pscB>
 8b6:	40 f0       	brcs	.+16     	; 0x8c8 <__divsf3+0x18>
 8b8:	c1 d0       	rcall	.+386    	; 0xa3c <__fp_pscA>
 8ba:	30 f0       	brcs	.+12     	; 0x8c8 <__divsf3+0x18>
 8bc:	21 f4       	brne	.+8      	; 0x8c6 <__divsf3+0x16>
 8be:	5f 3f       	cpi	r21, 0xFF	; 255
 8c0:	19 f0       	breq	.+6      	; 0x8c8 <__divsf3+0x18>
 8c2:	b3 c0       	rjmp	.+358    	; 0xa2a <__fp_inf>
 8c4:	51 11       	cpse	r21, r1
 8c6:	fc c0       	rjmp	.+504    	; 0xac0 <__fp_szero>
 8c8:	b6 c0       	rjmp	.+364    	; 0xa36 <__fp_nan>

000008ca <__divsf3x>:
 8ca:	d7 d0       	rcall	.+430    	; 0xa7a <__fp_split3>
 8cc:	98 f3       	brcs	.-26     	; 0x8b4 <__divsf3+0x4>

000008ce <__divsf3_pse>:
 8ce:	99 23       	and	r25, r25
 8d0:	c9 f3       	breq	.-14     	; 0x8c4 <__divsf3+0x14>
 8d2:	55 23       	and	r21, r21
 8d4:	b1 f3       	breq	.-20     	; 0x8c2 <__divsf3+0x12>
 8d6:	95 1b       	sub	r25, r21
 8d8:	55 0b       	sbc	r21, r21
 8da:	bb 27       	eor	r27, r27
 8dc:	aa 27       	eor	r26, r26
 8de:	62 17       	cp	r22, r18
 8e0:	73 07       	cpc	r23, r19
 8e2:	84 07       	cpc	r24, r20
 8e4:	38 f0       	brcs	.+14     	; 0x8f4 <__divsf3_pse+0x26>
 8e6:	9f 5f       	subi	r25, 0xFF	; 255
 8e8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ea:	22 0f       	add	r18, r18
 8ec:	33 1f       	adc	r19, r19
 8ee:	44 1f       	adc	r20, r20
 8f0:	aa 1f       	adc	r26, r26
 8f2:	a9 f3       	breq	.-22     	; 0x8de <__divsf3_pse+0x10>
 8f4:	33 d0       	rcall	.+102    	; 0x95c <__divsf3_pse+0x8e>
 8f6:	0e 2e       	mov	r0, r30
 8f8:	3a f0       	brmi	.+14     	; 0x908 <__divsf3_pse+0x3a>
 8fa:	e0 e8       	ldi	r30, 0x80	; 128
 8fc:	30 d0       	rcall	.+96     	; 0x95e <__divsf3_pse+0x90>
 8fe:	91 50       	subi	r25, 0x01	; 1
 900:	50 40       	sbci	r21, 0x00	; 0
 902:	e6 95       	lsr	r30
 904:	00 1c       	adc	r0, r0
 906:	ca f7       	brpl	.-14     	; 0x8fa <__divsf3_pse+0x2c>
 908:	29 d0       	rcall	.+82     	; 0x95c <__divsf3_pse+0x8e>
 90a:	fe 2f       	mov	r31, r30
 90c:	27 d0       	rcall	.+78     	; 0x95c <__divsf3_pse+0x8e>
 90e:	66 0f       	add	r22, r22
 910:	77 1f       	adc	r23, r23
 912:	88 1f       	adc	r24, r24
 914:	bb 1f       	adc	r27, r27
 916:	26 17       	cp	r18, r22
 918:	37 07       	cpc	r19, r23
 91a:	48 07       	cpc	r20, r24
 91c:	ab 07       	cpc	r26, r27
 91e:	b0 e8       	ldi	r27, 0x80	; 128
 920:	09 f0       	breq	.+2      	; 0x924 <__divsf3_pse+0x56>
 922:	bb 0b       	sbc	r27, r27
 924:	80 2d       	mov	r24, r0
 926:	bf 01       	movw	r22, r30
 928:	ff 27       	eor	r31, r31
 92a:	93 58       	subi	r25, 0x83	; 131
 92c:	5f 4f       	sbci	r21, 0xFF	; 255
 92e:	2a f0       	brmi	.+10     	; 0x93a <__divsf3_pse+0x6c>
 930:	9e 3f       	cpi	r25, 0xFE	; 254
 932:	51 05       	cpc	r21, r1
 934:	68 f0       	brcs	.+26     	; 0x950 <__divsf3_pse+0x82>
 936:	79 c0       	rjmp	.+242    	; 0xa2a <__fp_inf>
 938:	c3 c0       	rjmp	.+390    	; 0xac0 <__fp_szero>
 93a:	5f 3f       	cpi	r21, 0xFF	; 255
 93c:	ec f3       	brlt	.-6      	; 0x938 <__divsf3_pse+0x6a>
 93e:	98 3e       	cpi	r25, 0xE8	; 232
 940:	dc f3       	brlt	.-10     	; 0x938 <__divsf3_pse+0x6a>
 942:	86 95       	lsr	r24
 944:	77 95       	ror	r23
 946:	67 95       	ror	r22
 948:	b7 95       	ror	r27
 94a:	f7 95       	ror	r31
 94c:	9f 5f       	subi	r25, 0xFF	; 255
 94e:	c9 f7       	brne	.-14     	; 0x942 <__divsf3_pse+0x74>
 950:	88 0f       	add	r24, r24
 952:	91 1d       	adc	r25, r1
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	97 f9       	bld	r25, 7
 95a:	08 95       	ret
 95c:	e1 e0       	ldi	r30, 0x01	; 1
 95e:	66 0f       	add	r22, r22
 960:	77 1f       	adc	r23, r23
 962:	88 1f       	adc	r24, r24
 964:	bb 1f       	adc	r27, r27
 966:	62 17       	cp	r22, r18
 968:	73 07       	cpc	r23, r19
 96a:	84 07       	cpc	r24, r20
 96c:	ba 07       	cpc	r27, r26
 96e:	20 f0       	brcs	.+8      	; 0x978 <__divsf3_pse+0xaa>
 970:	62 1b       	sub	r22, r18
 972:	73 0b       	sbc	r23, r19
 974:	84 0b       	sbc	r24, r20
 976:	ba 0b       	sbc	r27, r26
 978:	ee 1f       	adc	r30, r30
 97a:	88 f7       	brcc	.-30     	; 0x95e <__divsf3_pse+0x90>
 97c:	e0 95       	com	r30
 97e:	08 95       	ret

00000980 <__fixsfsi>:
 980:	04 d0       	rcall	.+8      	; 0x98a <__fixunssfsi>
 982:	68 94       	set
 984:	b1 11       	cpse	r27, r1
 986:	9c c0       	rjmp	.+312    	; 0xac0 <__fp_szero>
 988:	08 95       	ret

0000098a <__fixunssfsi>:
 98a:	7f d0       	rcall	.+254    	; 0xa8a <__fp_splitA>
 98c:	88 f0       	brcs	.+34     	; 0x9b0 <__fixunssfsi+0x26>
 98e:	9f 57       	subi	r25, 0x7F	; 127
 990:	90 f0       	brcs	.+36     	; 0x9b6 <__fixunssfsi+0x2c>
 992:	b9 2f       	mov	r27, r25
 994:	99 27       	eor	r25, r25
 996:	b7 51       	subi	r27, 0x17	; 23
 998:	a0 f0       	brcs	.+40     	; 0x9c2 <__fixunssfsi+0x38>
 99a:	d1 f0       	breq	.+52     	; 0x9d0 <__fixunssfsi+0x46>
 99c:	66 0f       	add	r22, r22
 99e:	77 1f       	adc	r23, r23
 9a0:	88 1f       	adc	r24, r24
 9a2:	99 1f       	adc	r25, r25
 9a4:	1a f0       	brmi	.+6      	; 0x9ac <__fixunssfsi+0x22>
 9a6:	ba 95       	dec	r27
 9a8:	c9 f7       	brne	.-14     	; 0x99c <__fixunssfsi+0x12>
 9aa:	12 c0       	rjmp	.+36     	; 0x9d0 <__fixunssfsi+0x46>
 9ac:	b1 30       	cpi	r27, 0x01	; 1
 9ae:	81 f0       	breq	.+32     	; 0x9d0 <__fixunssfsi+0x46>
 9b0:	86 d0       	rcall	.+268    	; 0xabe <__fp_zero>
 9b2:	b1 e0       	ldi	r27, 0x01	; 1
 9b4:	08 95       	ret
 9b6:	83 c0       	rjmp	.+262    	; 0xabe <__fp_zero>
 9b8:	67 2f       	mov	r22, r23
 9ba:	78 2f       	mov	r23, r24
 9bc:	88 27       	eor	r24, r24
 9be:	b8 5f       	subi	r27, 0xF8	; 248
 9c0:	39 f0       	breq	.+14     	; 0x9d0 <__fixunssfsi+0x46>
 9c2:	b9 3f       	cpi	r27, 0xF9	; 249
 9c4:	cc f3       	brlt	.-14     	; 0x9b8 <__fixunssfsi+0x2e>
 9c6:	86 95       	lsr	r24
 9c8:	77 95       	ror	r23
 9ca:	67 95       	ror	r22
 9cc:	b3 95       	inc	r27
 9ce:	d9 f7       	brne	.-10     	; 0x9c6 <__fixunssfsi+0x3c>
 9d0:	3e f4       	brtc	.+14     	; 0x9e0 <__fixunssfsi+0x56>
 9d2:	90 95       	com	r25
 9d4:	80 95       	com	r24
 9d6:	70 95       	com	r23
 9d8:	61 95       	neg	r22
 9da:	7f 4f       	sbci	r23, 0xFF	; 255
 9dc:	8f 4f       	sbci	r24, 0xFF	; 255
 9de:	9f 4f       	sbci	r25, 0xFF	; 255
 9e0:	08 95       	ret

000009e2 <__fp_cmp>:
 9e2:	99 0f       	add	r25, r25
 9e4:	00 08       	sbc	r0, r0
 9e6:	55 0f       	add	r21, r21
 9e8:	aa 0b       	sbc	r26, r26
 9ea:	e0 e8       	ldi	r30, 0x80	; 128
 9ec:	fe ef       	ldi	r31, 0xFE	; 254
 9ee:	16 16       	cp	r1, r22
 9f0:	17 06       	cpc	r1, r23
 9f2:	e8 07       	cpc	r30, r24
 9f4:	f9 07       	cpc	r31, r25
 9f6:	c0 f0       	brcs	.+48     	; 0xa28 <__fp_cmp+0x46>
 9f8:	12 16       	cp	r1, r18
 9fa:	13 06       	cpc	r1, r19
 9fc:	e4 07       	cpc	r30, r20
 9fe:	f5 07       	cpc	r31, r21
 a00:	98 f0       	brcs	.+38     	; 0xa28 <__fp_cmp+0x46>
 a02:	62 1b       	sub	r22, r18
 a04:	73 0b       	sbc	r23, r19
 a06:	84 0b       	sbc	r24, r20
 a08:	95 0b       	sbc	r25, r21
 a0a:	39 f4       	brne	.+14     	; 0xa1a <__fp_cmp+0x38>
 a0c:	0a 26       	eor	r0, r26
 a0e:	61 f0       	breq	.+24     	; 0xa28 <__fp_cmp+0x46>
 a10:	23 2b       	or	r18, r19
 a12:	24 2b       	or	r18, r20
 a14:	25 2b       	or	r18, r21
 a16:	21 f4       	brne	.+8      	; 0xa20 <__fp_cmp+0x3e>
 a18:	08 95       	ret
 a1a:	0a 26       	eor	r0, r26
 a1c:	09 f4       	brne	.+2      	; 0xa20 <__fp_cmp+0x3e>
 a1e:	a1 40       	sbci	r26, 0x01	; 1
 a20:	a6 95       	lsr	r26
 a22:	8f ef       	ldi	r24, 0xFF	; 255
 a24:	81 1d       	adc	r24, r1
 a26:	81 1d       	adc	r24, r1
 a28:	08 95       	ret

00000a2a <__fp_inf>:
 a2a:	97 f9       	bld	r25, 7
 a2c:	9f 67       	ori	r25, 0x7F	; 127
 a2e:	80 e8       	ldi	r24, 0x80	; 128
 a30:	70 e0       	ldi	r23, 0x00	; 0
 a32:	60 e0       	ldi	r22, 0x00	; 0
 a34:	08 95       	ret

00000a36 <__fp_nan>:
 a36:	9f ef       	ldi	r25, 0xFF	; 255
 a38:	80 ec       	ldi	r24, 0xC0	; 192
 a3a:	08 95       	ret

00000a3c <__fp_pscA>:
 a3c:	00 24       	eor	r0, r0
 a3e:	0a 94       	dec	r0
 a40:	16 16       	cp	r1, r22
 a42:	17 06       	cpc	r1, r23
 a44:	18 06       	cpc	r1, r24
 a46:	09 06       	cpc	r0, r25
 a48:	08 95       	ret

00000a4a <__fp_pscB>:
 a4a:	00 24       	eor	r0, r0
 a4c:	0a 94       	dec	r0
 a4e:	12 16       	cp	r1, r18
 a50:	13 06       	cpc	r1, r19
 a52:	14 06       	cpc	r1, r20
 a54:	05 06       	cpc	r0, r21
 a56:	08 95       	ret

00000a58 <__fp_round>:
 a58:	09 2e       	mov	r0, r25
 a5a:	03 94       	inc	r0
 a5c:	00 0c       	add	r0, r0
 a5e:	11 f4       	brne	.+4      	; 0xa64 <__fp_round+0xc>
 a60:	88 23       	and	r24, r24
 a62:	52 f0       	brmi	.+20     	; 0xa78 <__fp_round+0x20>
 a64:	bb 0f       	add	r27, r27
 a66:	40 f4       	brcc	.+16     	; 0xa78 <__fp_round+0x20>
 a68:	bf 2b       	or	r27, r31
 a6a:	11 f4       	brne	.+4      	; 0xa70 <__fp_round+0x18>
 a6c:	60 ff       	sbrs	r22, 0
 a6e:	04 c0       	rjmp	.+8      	; 0xa78 <__fp_round+0x20>
 a70:	6f 5f       	subi	r22, 0xFF	; 255
 a72:	7f 4f       	sbci	r23, 0xFF	; 255
 a74:	8f 4f       	sbci	r24, 0xFF	; 255
 a76:	9f 4f       	sbci	r25, 0xFF	; 255
 a78:	08 95       	ret

00000a7a <__fp_split3>:
 a7a:	57 fd       	sbrc	r21, 7
 a7c:	90 58       	subi	r25, 0x80	; 128
 a7e:	44 0f       	add	r20, r20
 a80:	55 1f       	adc	r21, r21
 a82:	59 f0       	breq	.+22     	; 0xa9a <__fp_splitA+0x10>
 a84:	5f 3f       	cpi	r21, 0xFF	; 255
 a86:	71 f0       	breq	.+28     	; 0xaa4 <__fp_splitA+0x1a>
 a88:	47 95       	ror	r20

00000a8a <__fp_splitA>:
 a8a:	88 0f       	add	r24, r24
 a8c:	97 fb       	bst	r25, 7
 a8e:	99 1f       	adc	r25, r25
 a90:	61 f0       	breq	.+24     	; 0xaaa <__fp_splitA+0x20>
 a92:	9f 3f       	cpi	r25, 0xFF	; 255
 a94:	79 f0       	breq	.+30     	; 0xab4 <__fp_splitA+0x2a>
 a96:	87 95       	ror	r24
 a98:	08 95       	ret
 a9a:	12 16       	cp	r1, r18
 a9c:	13 06       	cpc	r1, r19
 a9e:	14 06       	cpc	r1, r20
 aa0:	55 1f       	adc	r21, r21
 aa2:	f2 cf       	rjmp	.-28     	; 0xa88 <__fp_split3+0xe>
 aa4:	46 95       	lsr	r20
 aa6:	f1 df       	rcall	.-30     	; 0xa8a <__fp_splitA>
 aa8:	08 c0       	rjmp	.+16     	; 0xaba <__fp_splitA+0x30>
 aaa:	16 16       	cp	r1, r22
 aac:	17 06       	cpc	r1, r23
 aae:	18 06       	cpc	r1, r24
 ab0:	99 1f       	adc	r25, r25
 ab2:	f1 cf       	rjmp	.-30     	; 0xa96 <__fp_splitA+0xc>
 ab4:	86 95       	lsr	r24
 ab6:	71 05       	cpc	r23, r1
 ab8:	61 05       	cpc	r22, r1
 aba:	08 94       	sec
 abc:	08 95       	ret

00000abe <__fp_zero>:
 abe:	e8 94       	clt

00000ac0 <__fp_szero>:
 ac0:	bb 27       	eor	r27, r27
 ac2:	66 27       	eor	r22, r22
 ac4:	77 27       	eor	r23, r23
 ac6:	cb 01       	movw	r24, r22
 ac8:	97 f9       	bld	r25, 7
 aca:	08 95       	ret

00000acc <__gesf2>:
 acc:	8a df       	rcall	.-236    	; 0x9e2 <__fp_cmp>
 ace:	08 f4       	brcc	.+2      	; 0xad2 <__gesf2+0x6>
 ad0:	8f ef       	ldi	r24, 0xFF	; 255
 ad2:	08 95       	ret

00000ad4 <__mulsf3>:
 ad4:	0b d0       	rcall	.+22     	; 0xaec <__mulsf3x>
 ad6:	c0 cf       	rjmp	.-128    	; 0xa58 <__fp_round>
 ad8:	b1 df       	rcall	.-158    	; 0xa3c <__fp_pscA>
 ada:	28 f0       	brcs	.+10     	; 0xae6 <__mulsf3+0x12>
 adc:	b6 df       	rcall	.-148    	; 0xa4a <__fp_pscB>
 ade:	18 f0       	brcs	.+6      	; 0xae6 <__mulsf3+0x12>
 ae0:	95 23       	and	r25, r21
 ae2:	09 f0       	breq	.+2      	; 0xae6 <__mulsf3+0x12>
 ae4:	a2 cf       	rjmp	.-188    	; 0xa2a <__fp_inf>
 ae6:	a7 cf       	rjmp	.-178    	; 0xa36 <__fp_nan>
 ae8:	11 24       	eor	r1, r1
 aea:	ea cf       	rjmp	.-44     	; 0xac0 <__fp_szero>

00000aec <__mulsf3x>:
 aec:	c6 df       	rcall	.-116    	; 0xa7a <__fp_split3>
 aee:	a0 f3       	brcs	.-24     	; 0xad8 <__mulsf3+0x4>

00000af0 <__mulsf3_pse>:
 af0:	95 9f       	mul	r25, r21
 af2:	d1 f3       	breq	.-12     	; 0xae8 <__mulsf3+0x14>
 af4:	95 0f       	add	r25, r21
 af6:	50 e0       	ldi	r21, 0x00	; 0
 af8:	55 1f       	adc	r21, r21
 afa:	62 9f       	mul	r22, r18
 afc:	f0 01       	movw	r30, r0
 afe:	72 9f       	mul	r23, r18
 b00:	bb 27       	eor	r27, r27
 b02:	f0 0d       	add	r31, r0
 b04:	b1 1d       	adc	r27, r1
 b06:	63 9f       	mul	r22, r19
 b08:	aa 27       	eor	r26, r26
 b0a:	f0 0d       	add	r31, r0
 b0c:	b1 1d       	adc	r27, r1
 b0e:	aa 1f       	adc	r26, r26
 b10:	64 9f       	mul	r22, r20
 b12:	66 27       	eor	r22, r22
 b14:	b0 0d       	add	r27, r0
 b16:	a1 1d       	adc	r26, r1
 b18:	66 1f       	adc	r22, r22
 b1a:	82 9f       	mul	r24, r18
 b1c:	22 27       	eor	r18, r18
 b1e:	b0 0d       	add	r27, r0
 b20:	a1 1d       	adc	r26, r1
 b22:	62 1f       	adc	r22, r18
 b24:	73 9f       	mul	r23, r19
 b26:	b0 0d       	add	r27, r0
 b28:	a1 1d       	adc	r26, r1
 b2a:	62 1f       	adc	r22, r18
 b2c:	83 9f       	mul	r24, r19
 b2e:	a0 0d       	add	r26, r0
 b30:	61 1d       	adc	r22, r1
 b32:	22 1f       	adc	r18, r18
 b34:	74 9f       	mul	r23, r20
 b36:	33 27       	eor	r19, r19
 b38:	a0 0d       	add	r26, r0
 b3a:	61 1d       	adc	r22, r1
 b3c:	23 1f       	adc	r18, r19
 b3e:	84 9f       	mul	r24, r20
 b40:	60 0d       	add	r22, r0
 b42:	21 1d       	adc	r18, r1
 b44:	82 2f       	mov	r24, r18
 b46:	76 2f       	mov	r23, r22
 b48:	6a 2f       	mov	r22, r26
 b4a:	11 24       	eor	r1, r1
 b4c:	9f 57       	subi	r25, 0x7F	; 127
 b4e:	50 40       	sbci	r21, 0x00	; 0
 b50:	8a f0       	brmi	.+34     	; 0xb74 <__mulsf3_pse+0x84>
 b52:	e1 f0       	breq	.+56     	; 0xb8c <__mulsf3_pse+0x9c>
 b54:	88 23       	and	r24, r24
 b56:	4a f0       	brmi	.+18     	; 0xb6a <__mulsf3_pse+0x7a>
 b58:	ee 0f       	add	r30, r30
 b5a:	ff 1f       	adc	r31, r31
 b5c:	bb 1f       	adc	r27, r27
 b5e:	66 1f       	adc	r22, r22
 b60:	77 1f       	adc	r23, r23
 b62:	88 1f       	adc	r24, r24
 b64:	91 50       	subi	r25, 0x01	; 1
 b66:	50 40       	sbci	r21, 0x00	; 0
 b68:	a9 f7       	brne	.-22     	; 0xb54 <__mulsf3_pse+0x64>
 b6a:	9e 3f       	cpi	r25, 0xFE	; 254
 b6c:	51 05       	cpc	r21, r1
 b6e:	70 f0       	brcs	.+28     	; 0xb8c <__mulsf3_pse+0x9c>
 b70:	5c cf       	rjmp	.-328    	; 0xa2a <__fp_inf>
 b72:	a6 cf       	rjmp	.-180    	; 0xac0 <__fp_szero>
 b74:	5f 3f       	cpi	r21, 0xFF	; 255
 b76:	ec f3       	brlt	.-6      	; 0xb72 <__mulsf3_pse+0x82>
 b78:	98 3e       	cpi	r25, 0xE8	; 232
 b7a:	dc f3       	brlt	.-10     	; 0xb72 <__mulsf3_pse+0x82>
 b7c:	86 95       	lsr	r24
 b7e:	77 95       	ror	r23
 b80:	67 95       	ror	r22
 b82:	b7 95       	ror	r27
 b84:	f7 95       	ror	r31
 b86:	e7 95       	ror	r30
 b88:	9f 5f       	subi	r25, 0xFF	; 255
 b8a:	c1 f7       	brne	.-16     	; 0xb7c <__mulsf3_pse+0x8c>
 b8c:	fe 2b       	or	r31, r30
 b8e:	88 0f       	add	r24, r24
 b90:	91 1d       	adc	r25, r1
 b92:	96 95       	lsr	r25
 b94:	87 95       	ror	r24
 b96:	97 f9       	bld	r25, 7
 b98:	08 95       	ret

00000b9a <_exit>:
 b9a:	f8 94       	cli

00000b9c <__stop_program>:
 b9c:	ff cf       	rjmp	.-2      	; 0xb9c <__stop_program>
